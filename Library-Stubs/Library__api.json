{
  "schemaVersion": 1,
  "distribution": "",
  "package": "Library",
  "version": "",
  "modules": [
    {
      "id": "reference",
      "name": "__init__",
      "docstring": "Utilities for creating an API reference.",
      "qualified_imports": [],
      "wildcard_imports": [],
      "classes": [],
      "functions": [],
      "enums": []
    },
    {
      "id": "reference/generate_reference_pages",
      "name": "generate_reference_pages",
      "docstring": "\nAutomatically generate reference pages for all public classes and functions in the package.\n\nInspired by https://mkdocstrings.github.io/recipes/#bind-pages-to-sections-themselves.\n",
      "qualified_imports": [
        {
          "qualified_name": "sys",
          "alias": null
        },
        {
          "qualified_name": "importlib.import_module",
          "alias": null
        },
        {
          "qualified_name": "inspect.getmembers",
          "alias": null
        },
        {
          "qualified_name": "inspect.isclass",
          "alias": null
        },
        {
          "qualified_name": "inspect.isfunction",
          "alias": null
        },
        {
          "qualified_name": "pathlib.Path",
          "alias": null
        },
        {
          "qualified_name": "mkdocs_gen_files",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [],
      "functions": [
        "reference/generate_reference_pages/list_class_and_function_names_in_module"
      ],
      "enums": []
    },
    {
      "id": "safeds",
      "name": "__init__",
      "docstring": "A user-friendly library for Data Science in Python.",
      "qualified_imports": [],
      "wildcard_imports": [],
      "classes": [],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/config",
      "name": "__init__",
      "docstring": "Configuration for Safe-DS.",
      "qualified_imports": [
        {
          "qualified_name": "_device._get_device",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/config/_device",
      "name": "_device",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "torch",
          "alias": null
        },
        {
          "qualified_name": "torch.types.Device",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [],
      "functions": [
        "safeds/config/_device/_get_device"
      ],
      "enums": []
    },
    {
      "id": "safeds/data",
      "name": "__init__",
      "docstring": "Work with different types of data.",
      "qualified_imports": [],
      "wildcard_imports": [],
      "classes": [],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/data/image",
      "name": "__init__",
      "docstring": "Work with image data.",
      "qualified_imports": [],
      "wildcard_imports": [],
      "classes": [],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/data/image/containers",
      "name": "__init__",
      "docstring": "Classes that can store image data.",
      "qualified_imports": [
        {
          "qualified_name": "_image.Image",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/data/image/containers/_image",
      "name": "_image",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "sys",
          "alias": null
        },
        {
          "qualified_name": "io",
          "alias": null
        },
        {
          "qualified_name": "warnings",
          "alias": null
        },
        {
          "qualified_name": "pathlib.Path",
          "alias": null
        },
        {
          "qualified_name": "typing.TYPE_CHECKING",
          "alias": null
        },
        {
          "qualified_name": "torch",
          "alias": null
        },
        {
          "qualified_name": "torch.nn.functional",
          "alias": "func"
        },
        {
          "qualified_name": "PIL.Image.open",
          "alias": "pil_image_open"
        },
        {
          "qualified_name": "torch.Tensor",
          "alias": null
        },
        {
          "qualified_name": "safeds.config._get_device",
          "alias": null
        },
        {
          "qualified_name": "torch.types.Device",
          "alias": null
        },
        {
          "qualified_name": "torchvision",
          "alias": null
        },
        {
          "qualified_name": "torchvision.transforms.v2.PILToTensor",
          "alias": null
        },
        {
          "qualified_name": "torchvision.transforms.v2.functional",
          "alias": "func2"
        },
        {
          "qualified_name": "torchvision.utils.save_image",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.ClosedBound",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.IllegalFormatError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.OutOfBoundsError",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/data/image/containers/_image/Image"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/data/tabular",
      "name": "__init__",
      "docstring": "Work with tabular data.",
      "qualified_imports": [],
      "wildcard_imports": [],
      "classes": [],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/data/tabular/containers",
      "name": "__init__",
      "docstring": "Classes that can store tabular data.",
      "qualified_imports": [
        {
          "qualified_name": "_column.Column",
          "alias": null
        },
        {
          "qualified_name": "_row.Row",
          "alias": null
        },
        {
          "qualified_name": "_table.Table",
          "alias": null
        },
        {
          "qualified_name": "_tagged_table.TaggedTable",
          "alias": null
        },
        {
          "qualified_name": "_time_series.TimeSeries",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/data/tabular/containers/_column",
      "name": "_column",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "io",
          "alias": null
        },
        {
          "qualified_name": "sys",
          "alias": null
        },
        {
          "qualified_name": "collections.abc.Sequence",
          "alias": null
        },
        {
          "qualified_name": "numbers.Number",
          "alias": null
        },
        {
          "qualified_name": "typing.TYPE_CHECKING",
          "alias": null
        },
        {
          "qualified_name": "typing.Any",
          "alias": null
        },
        {
          "qualified_name": "typing.TypeVar",
          "alias": null
        },
        {
          "qualified_name": "typing.overload",
          "alias": null
        },
        {
          "qualified_name": "matplotlib.pyplot",
          "alias": "plt"
        },
        {
          "qualified_name": "numpy",
          "alias": "np"
        },
        {
          "qualified_name": "pandas",
          "alias": "pd"
        },
        {
          "qualified_name": "seaborn",
          "alias": "sns"
        },
        {
          "qualified_name": "safeds.data.image.containers.Image",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.typing.ColumnType",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.ColumnLengthMismatchError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.ColumnSizeError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.IndexOutOfBoundsError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.NonNumericColumnError",
          "alias": null
        },
        {
          "qualified_name": "collections.abc.Callable",
          "alias": null
        },
        {
          "qualified_name": "collections.abc.Iterator",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/data/tabular/containers/_column/Column"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/data/tabular/containers/_row",
      "name": "_row",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "sys",
          "alias": null
        },
        {
          "qualified_name": "functools",
          "alias": null
        },
        {
          "qualified_name": "collections.abc.Callable",
          "alias": null
        },
        {
          "qualified_name": "collections.abc.Mapping",
          "alias": null
        },
        {
          "qualified_name": "typing.TYPE_CHECKING",
          "alias": null
        },
        {
          "qualified_name": "typing.Any",
          "alias": null
        },
        {
          "qualified_name": "pandas",
          "alias": "pd"
        },
        {
          "qualified_name": "safeds.data.tabular.typing.ColumnType",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.typing.Schema",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.UnknownColumnNameError",
          "alias": null
        },
        {
          "qualified_name": "collections.abc.Iterator",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/data/tabular/containers/_row/Row"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/data/tabular/containers/_table",
      "name": "_table",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "sys",
          "alias": null
        },
        {
          "qualified_name": "functools",
          "alias": null
        },
        {
          "qualified_name": "io",
          "alias": null
        },
        {
          "qualified_name": "warnings",
          "alias": null
        },
        {
          "qualified_name": "pathlib.Path",
          "alias": null
        },
        {
          "qualified_name": "typing.TYPE_CHECKING",
          "alias": null
        },
        {
          "qualified_name": "typing.Any",
          "alias": null
        },
        {
          "qualified_name": "typing.TypeVar",
          "alias": null
        },
        {
          "qualified_name": "Levenshtein",
          "alias": null
        },
        {
          "qualified_name": "matplotlib.pyplot",
          "alias": "plt"
        },
        {
          "qualified_name": "numpy",
          "alias": "np"
        },
        {
          "qualified_name": "openpyxl",
          "alias": null
        },
        {
          "qualified_name": "pandas",
          "alias": "pd"
        },
        {
          "qualified_name": "seaborn",
          "alias": "sns"
        },
        {
          "qualified_name": "pandas.DataFrame",
          "alias": null
        },
        {
          "qualified_name": "scipy.stats",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.image.containers.Image",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.typing.ColumnType",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.typing.Schema",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.ColumnLengthMismatchError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.ColumnSizeError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.DuplicateColumnNameError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.IndexOutOfBoundsError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.NonNumericColumnError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.UnknownColumnNameError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.WrongFileExtensionError",
          "alias": null
        },
        {
          "qualified_name": "_column.Column",
          "alias": null
        },
        {
          "qualified_name": "_row.Row",
          "alias": null
        },
        {
          "qualified_name": "collections.abc.Callable",
          "alias": null
        },
        {
          "qualified_name": "collections.abc.Mapping",
          "alias": null
        },
        {
          "qualified_name": "collections.abc.Sequence",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.transformation.InvertibleTableTransformer",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.transformation.TableTransformer",
          "alias": null
        },
        {
          "qualified_name": "_tagged_table.TaggedTable",
          "alias": null
        },
        {
          "qualified_name": "_time_series.TimeSeries",
          "alias": null
        },
        {
          "qualified_name": "_tagged_table.TaggedTable",
          "alias": null
        },
        {
          "qualified_name": "_time_series.TimeSeries",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/data/tabular/containers/_table/Table"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table",
      "name": "_tagged_table",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "sys",
          "alias": null
        },
        {
          "qualified_name": "typing.TYPE_CHECKING",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Column",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Row",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Table",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.ColumnIsTargetError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.IllegalSchemaModificationError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.UnknownColumnNameError",
          "alias": null
        },
        {
          "qualified_name": "collections.abc.Callable",
          "alias": null
        },
        {
          "qualified_name": "collections.abc.Mapping",
          "alias": null
        },
        {
          "qualified_name": "collections.abc.Sequence",
          "alias": null
        },
        {
          "qualified_name": "typing.Any",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/data/tabular/containers/_time_series",
      "name": "_time_series",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "io",
          "alias": null
        },
        {
          "qualified_name": "sys",
          "alias": null
        },
        {
          "qualified_name": "typing.TYPE_CHECKING",
          "alias": null
        },
        {
          "qualified_name": "matplotlib.pyplot",
          "alias": "plt"
        },
        {
          "qualified_name": "pandas",
          "alias": "pd"
        },
        {
          "qualified_name": "safeds.data.image.containers.Image",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Column",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Row",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Table",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.TaggedTable",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.ColumnIsTargetError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.ColumnIsTimeError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.IllegalSchemaModificationError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.NonNumericColumnError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.UnknownColumnNameError",
          "alias": null
        },
        {
          "qualified_name": "collections.abc.Callable",
          "alias": null
        },
        {
          "qualified_name": "collections.abc.Mapping",
          "alias": null
        },
        {
          "qualified_name": "collections.abc.Sequence",
          "alias": null
        },
        {
          "qualified_name": "typing.Any",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/data/tabular/containers/_time_series/TimeSeries"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/data/tabular/transformation",
      "name": "__init__",
      "docstring": "Classes for transforming tabular data.",
      "qualified_imports": [
        {
          "qualified_name": "_discretizer.Discretizer",
          "alias": null
        },
        {
          "qualified_name": "_imputer.Imputer",
          "alias": null
        },
        {
          "qualified_name": "_label_encoder.LabelEncoder",
          "alias": null
        },
        {
          "qualified_name": "_one_hot_encoder.OneHotEncoder",
          "alias": null
        },
        {
          "qualified_name": "_range_scaler.RangeScaler",
          "alias": null
        },
        {
          "qualified_name": "_standard_scaler.StandardScaler",
          "alias": null
        },
        {
          "qualified_name": "_table_transformer.InvertibleTableTransformer",
          "alias": null
        },
        {
          "qualified_name": "_table_transformer.TableTransformer",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/data/tabular/transformation/_discretizer",
      "name": "_discretizer",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "sklearn.preprocessing.KBinsDiscretizer",
          "alias": "sk_KBinsDiscretizer"
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Table",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.transformation._table_transformer.TableTransformer",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.ClosedBound",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.NonNumericColumnError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.OutOfBoundsError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.TransformerNotFittedError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.UnknownColumnNameError",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/data/tabular/transformation/_discretizer/Discretizer"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer",
      "name": "_imputer",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "warnings",
          "alias": null
        },
        {
          "qualified_name": "typing.Any",
          "alias": null
        },
        {
          "qualified_name": "pandas",
          "alias": "pd"
        },
        {
          "qualified_name": "sklearn.impute.SimpleImputer",
          "alias": "sk_SimpleImputer"
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Table",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.transformation._table_transformer.TableTransformer",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.typing.ImputerStrategy",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.NonNumericColumnError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.TransformerNotFittedError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.UnknownColumnNameError",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/data/tabular/transformation/_imputer/Imputer"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/data/tabular/transformation/_label_encoder",
      "name": "_label_encoder",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "warnings",
          "alias": null
        },
        {
          "qualified_name": "sklearn.preprocessing.OrdinalEncoder",
          "alias": "sk_OrdinalEncoder"
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Table",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.transformation._table_transformer.InvertibleTableTransformer",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.NonNumericColumnError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.TransformerNotFittedError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.UnknownColumnNameError",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/data/tabular/transformation/_label_encoder/LabelEncoder"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/data/tabular/transformation/_one_hot_encoder",
      "name": "_one_hot_encoder",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "warnings",
          "alias": null
        },
        {
          "qualified_name": "collections.Counter",
          "alias": null
        },
        {
          "qualified_name": "typing.Any",
          "alias": null
        },
        {
          "qualified_name": "numpy",
          "alias": "np"
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Column",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Table",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.transformation._table_transformer.InvertibleTableTransformer",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.NonNumericColumnError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.TransformerNotFittedError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.UnknownColumnNameError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.ValueNotPresentWhenFittedError",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler",
      "name": "_range_scaler",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "sklearn.preprocessing.MinMaxScaler",
          "alias": "sk_MinMaxScaler"
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Table",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.transformation._table_transformer.InvertibleTableTransformer",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.NonNumericColumnError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.TransformerNotFittedError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.UnknownColumnNameError",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/data/tabular/transformation/_range_scaler/RangeScaler"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/data/tabular/transformation/_standard_scaler",
      "name": "_standard_scaler",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "sklearn.preprocessing.StandardScaler",
          "alias": "sk_StandardScaler"
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Table",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.transformation._table_transformer.InvertibleTableTransformer",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.NonNumericColumnError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.TransformerNotFittedError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.UnknownColumnNameError",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/data/tabular/transformation/_standard_scaler/StandardScaler"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer",
      "name": "_table_transformer",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "abc.ABC",
          "alias": null
        },
        {
          "qualified_name": "abc.abstractmethod",
          "alias": null
        },
        {
          "qualified_name": "typing.TYPE_CHECKING",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Table",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/data/tabular/transformation/_table_transformer/TableTransformer",
        "safeds/data/tabular/transformation/_table_transformer/InvertibleTableTransformer"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/data/tabular/typing",
      "name": "__init__",
      "docstring": "Types used to define the schema of a tabular dataset.",
      "qualified_imports": [
        {
          "qualified_name": "_column_type.Anything",
          "alias": null
        },
        {
          "qualified_name": "_column_type.Boolean",
          "alias": null
        },
        {
          "qualified_name": "_column_type.ColumnType",
          "alias": null
        },
        {
          "qualified_name": "_column_type.Integer",
          "alias": null
        },
        {
          "qualified_name": "_column_type.Nothing",
          "alias": null
        },
        {
          "qualified_name": "_column_type.RealNumber",
          "alias": null
        },
        {
          "qualified_name": "_column_type.String",
          "alias": null
        },
        {
          "qualified_name": "_imputer_strategy.ImputerStrategy",
          "alias": null
        },
        {
          "qualified_name": "_schema.Schema",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/data/tabular/typing/_column_type",
      "name": "_column_type",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "abc.ABC",
          "alias": null
        },
        {
          "qualified_name": "abc.abstractmethod",
          "alias": null
        },
        {
          "qualified_name": "dataclasses.dataclass",
          "alias": null
        },
        {
          "qualified_name": "types.NoneType",
          "alias": null
        },
        {
          "qualified_name": "typing.TYPE_CHECKING",
          "alias": null
        },
        {
          "qualified_name": "typing.Any",
          "alias": null
        },
        {
          "qualified_name": "numpy",
          "alias": "np"
        },
        {
          "qualified_name": "pandas",
          "alias": "pd"
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/data/tabular/typing/_column_type/ColumnType",
        "safeds/data/tabular/typing/_column_type/Anything",
        "safeds/data/tabular/typing/_column_type/Boolean",
        "safeds/data/tabular/typing/_column_type/RealNumber",
        "safeds/data/tabular/typing/_column_type/Integer",
        "safeds/data/tabular/typing/_column_type/String",
        "safeds/data/tabular/typing/_column_type/Nothing"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/data/tabular/typing/_imputer_strategy",
      "name": "_imputer_strategy",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "abc.ABC",
          "alias": null
        },
        {
          "qualified_name": "abc.abstractmethod",
          "alias": null
        },
        {
          "qualified_name": "sklearn.impute.SimpleImputer",
          "alias": "sk_SimpleImputer"
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/data/tabular/typing/_imputer_strategy/ImputerStrategy"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/data/tabular/typing/_schema",
      "name": "_schema",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "sys",
          "alias": null
        },
        {
          "qualified_name": "dataclasses.dataclass",
          "alias": null
        },
        {
          "qualified_name": "typing.TYPE_CHECKING",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.typing.Anything",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.typing.Integer",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.typing.Nothing",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.typing.RealNumber",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.typing._column_type.ColumnType",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.UnknownColumnNameError",
          "alias": null
        },
        {
          "qualified_name": "pandas",
          "alias": "pd"
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/data/tabular/typing/_schema/Schema"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/exceptions",
      "name": "__init__",
      "docstring": "Custom exceptions that can be raised by Safe-DS.",
      "qualified_imports": [
        {
          "qualified_name": "safeds.exceptions._data.ColumnIsTargetError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions._data.ColumnIsTimeError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions._data.ColumnLengthMismatchError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions._data.ColumnSizeError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions._data.DuplicateColumnNameError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions._data.IllegalFormatError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions._data.IllegalSchemaModificationError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions._data.IndexOutOfBoundsError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions._data.MissingValuesColumnError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions._data.NonNumericColumnError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions._data.TransformerNotFittedError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions._data.UnknownColumnNameError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions._data.ValueNotPresentWhenFittedError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions._data.WrongFileExtensionError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions._generic.Bound",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions._generic.ClosedBound",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions._generic.OpenBound",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions._generic.OutOfBoundsError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions._ml.DatasetContainsTargetError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions._ml.DatasetMissesDataError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions._ml.DatasetMissesFeaturesError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions._ml.LearningError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions._ml.ModelNotFittedError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions._ml.PredictionError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions._ml.UntaggedTableError",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/exceptions/_data",
      "name": "_data",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "typing.TYPE_CHECKING",
          "alias": null
        },
        {
          "qualified_name": "pathlib.Path",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/exceptions/_data/UnknownColumnNameError",
        "safeds/exceptions/_data/NonNumericColumnError",
        "safeds/exceptions/_data/MissingValuesColumnError",
        "safeds/exceptions/_data/DuplicateColumnNameError",
        "safeds/exceptions/_data/IndexOutOfBoundsError",
        "safeds/exceptions/_data/ColumnSizeError",
        "safeds/exceptions/_data/ColumnLengthMismatchError",
        "safeds/exceptions/_data/TransformerNotFittedError",
        "safeds/exceptions/_data/ValueNotPresentWhenFittedError",
        "safeds/exceptions/_data/WrongFileExtensionError",
        "safeds/exceptions/_data/IllegalSchemaModificationError",
        "safeds/exceptions/_data/ColumnIsTargetError",
        "safeds/exceptions/_data/ColumnIsTimeError",
        "safeds/exceptions/_data/IllegalFormatError"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/exceptions/_generic",
      "name": "_generic",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "abc.ABC",
          "alias": null
        },
        {
          "qualified_name": "abc.abstractmethod",
          "alias": null
        },
        {
          "qualified_name": "numpy.isinf",
          "alias": null
        },
        {
          "qualified_name": "numpy.isnan",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/exceptions/_generic/OutOfBoundsError",
        "safeds/exceptions/_generic/Bound",
        "safeds/exceptions/_generic/ClosedBound",
        "safeds/exceptions/_generic/OpenBound"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/exceptions/_ml",
      "name": "_ml",
      "docstring": "",
      "qualified_imports": [],
      "wildcard_imports": [],
      "classes": [
        "safeds/exceptions/_ml/DatasetContainsTargetError",
        "safeds/exceptions/_ml/DatasetMissesFeaturesError",
        "safeds/exceptions/_ml/DatasetMissesDataError",
        "safeds/exceptions/_ml/LearningError",
        "safeds/exceptions/_ml/ModelNotFittedError",
        "safeds/exceptions/_ml/PredictionError",
        "safeds/exceptions/_ml/UntaggedTableError"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/ml",
      "name": "__init__",
      "docstring": "Classes for machine learning.",
      "qualified_imports": [],
      "wildcard_imports": [],
      "classes": [],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/ml/classical",
      "name": "__init__",
      "docstring": "Classes for classical machine learning, i.e. machine learning that does not use neural networks.",
      "qualified_imports": [],
      "wildcard_imports": [],
      "classes": [],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/ml/classical/_util_sklearn",
      "name": "_util_sklearn",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "warnings",
          "alias": null
        },
        {
          "qualified_name": "typing.Any",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Table",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.TaggedTable",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.DatasetContainsTargetError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.DatasetMissesDataError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.DatasetMissesFeaturesError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.LearningError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.MissingValuesColumnError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.ModelNotFittedError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.NonNumericColumnError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.PredictionError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.UntaggedTableError",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [],
      "functions": [
        "safeds/ml/classical/_util_sklearn/fit",
        "safeds/ml/classical/_util_sklearn/predict"
      ],
      "enums": []
    },
    {
      "id": "safeds/ml/classical/classification",
      "name": "__init__",
      "docstring": "Classes for classification tasks.",
      "qualified_imports": [
        {
          "qualified_name": "_ada_boost.AdaBoost",
          "alias": null
        },
        {
          "qualified_name": "_classifier.Classifier",
          "alias": null
        },
        {
          "qualified_name": "_decision_tree.DecisionTree",
          "alias": null
        },
        {
          "qualified_name": "_gradient_boosting.GradientBoosting",
          "alias": null
        },
        {
          "qualified_name": "_k_nearest_neighbors.KNearestNeighbors",
          "alias": null
        },
        {
          "qualified_name": "_logistic_regression.LogisticRegression",
          "alias": null
        },
        {
          "qualified_name": "_random_forest.RandomForest",
          "alias": null
        },
        {
          "qualified_name": "_support_vector_machine.SupportVectorMachine",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost",
      "name": "_ada_boost",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "typing.TYPE_CHECKING",
          "alias": null
        },
        {
          "qualified_name": "sklearn.ensemble.AdaBoostClassifier",
          "alias": "sk_AdaBoostClassifier"
        },
        {
          "qualified_name": "safeds.exceptions.ClosedBound",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.OpenBound",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.OutOfBoundsError",
          "alias": null
        },
        {
          "qualified_name": "safeds.ml.classical._util_sklearn.fit",
          "alias": null
        },
        {
          "qualified_name": "safeds.ml.classical._util_sklearn.predict",
          "alias": null
        },
        {
          "qualified_name": "_classifier.Classifier",
          "alias": null
        },
        {
          "qualified_name": "sklearn.base.ClassifierMixin",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Table",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.TaggedTable",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/ml/classical/classification/_ada_boost/AdaBoost"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/ml/classical/classification/_classifier",
      "name": "_classifier",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "abc.ABC",
          "alias": null
        },
        {
          "qualified_name": "abc.abstractmethod",
          "alias": null
        },
        {
          "qualified_name": "typing.TYPE_CHECKING",
          "alias": null
        },
        {
          "qualified_name": "sklearn.metrics.accuracy_score",
          "alias": "sk_accuracy_score"
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Table",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.TaggedTable",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.UntaggedTableError",
          "alias": null
        },
        {
          "qualified_name": "typing.Any",
          "alias": null
        },
        {
          "qualified_name": "sklearn.base.ClassifierMixin",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/ml/classical/classification/_classifier/Classifier"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/ml/classical/classification/_decision_tree",
      "name": "_decision_tree",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "typing.TYPE_CHECKING",
          "alias": null
        },
        {
          "qualified_name": "sklearn.tree.DecisionTreeClassifier",
          "alias": "sk_DecisionTreeClassifier"
        },
        {
          "qualified_name": "safeds.ml.classical._util_sklearn.fit",
          "alias": null
        },
        {
          "qualified_name": "safeds.ml.classical._util_sklearn.predict",
          "alias": null
        },
        {
          "qualified_name": "_classifier.Classifier",
          "alias": null
        },
        {
          "qualified_name": "sklearn.base.ClassifierMixin",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Table",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.TaggedTable",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/ml/classical/classification/_decision_tree/DecisionTree"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/ml/classical/classification/_gradient_boosting",
      "name": "_gradient_boosting",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "typing.TYPE_CHECKING",
          "alias": null
        },
        {
          "qualified_name": "sklearn.ensemble.GradientBoostingClassifier",
          "alias": "sk_GradientBoostingClassifier"
        },
        {
          "qualified_name": "safeds.exceptions.ClosedBound",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.OpenBound",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.OutOfBoundsError",
          "alias": null
        },
        {
          "qualified_name": "safeds.ml.classical._util_sklearn.fit",
          "alias": null
        },
        {
          "qualified_name": "safeds.ml.classical._util_sklearn.predict",
          "alias": null
        },
        {
          "qualified_name": "_classifier.Classifier",
          "alias": null
        },
        {
          "qualified_name": "sklearn.base.ClassifierMixin",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Table",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.TaggedTable",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/ml/classical/classification/_k_nearest_neighbors",
      "name": "_k_nearest_neighbors",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "typing.TYPE_CHECKING",
          "alias": null
        },
        {
          "qualified_name": "sklearn.neighbors.KNeighborsClassifier",
          "alias": "sk_KNeighborsClassifier"
        },
        {
          "qualified_name": "safeds.exceptions.ClosedBound",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.DatasetMissesDataError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.OutOfBoundsError",
          "alias": null
        },
        {
          "qualified_name": "safeds.ml.classical._util_sklearn.fit",
          "alias": null
        },
        {
          "qualified_name": "safeds.ml.classical._util_sklearn.predict",
          "alias": null
        },
        {
          "qualified_name": "_classifier.Classifier",
          "alias": null
        },
        {
          "qualified_name": "sklearn.base.ClassifierMixin",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Table",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.TaggedTable",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/ml/classical/classification/_logistic_regression",
      "name": "_logistic_regression",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "typing.TYPE_CHECKING",
          "alias": null
        },
        {
          "qualified_name": "sklearn.linear_model.LogisticRegression",
          "alias": "sk_LogisticRegression"
        },
        {
          "qualified_name": "safeds.ml.classical._util_sklearn.fit",
          "alias": null
        },
        {
          "qualified_name": "safeds.ml.classical._util_sklearn.predict",
          "alias": null
        },
        {
          "qualified_name": "_classifier.Classifier",
          "alias": null
        },
        {
          "qualified_name": "sklearn.base.ClassifierMixin",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Table",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.TaggedTable",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/ml/classical/classification/_logistic_regression/LogisticRegression"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/ml/classical/classification/_random_forest",
      "name": "_random_forest",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "typing.TYPE_CHECKING",
          "alias": null
        },
        {
          "qualified_name": "sklearn.ensemble.RandomForestClassifier",
          "alias": "sk_RandomForestClassifier"
        },
        {
          "qualified_name": "safeds.exceptions.ClosedBound",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.OutOfBoundsError",
          "alias": null
        },
        {
          "qualified_name": "safeds.ml.classical._util_sklearn.fit",
          "alias": null
        },
        {
          "qualified_name": "safeds.ml.classical._util_sklearn.predict",
          "alias": null
        },
        {
          "qualified_name": "_classifier.Classifier",
          "alias": null
        },
        {
          "qualified_name": "sklearn.base.ClassifierMixin",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Table",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.TaggedTable",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/ml/classical/classification/_random_forest/RandomForest"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine",
      "name": "_support_vector_machine",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "abc.ABC",
          "alias": null
        },
        {
          "qualified_name": "abc.abstractmethod",
          "alias": null
        },
        {
          "qualified_name": "typing.TYPE_CHECKING",
          "alias": null
        },
        {
          "qualified_name": "sklearn.svm.SVC",
          "alias": "sk_SVC"
        },
        {
          "qualified_name": "safeds.exceptions.ClosedBound",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.OpenBound",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.OutOfBoundsError",
          "alias": null
        },
        {
          "qualified_name": "safeds.ml.classical._util_sklearn.fit",
          "alias": null
        },
        {
          "qualified_name": "safeds.ml.classical._util_sklearn.predict",
          "alias": null
        },
        {
          "qualified_name": "safeds.ml.classical.classification.Classifier",
          "alias": null
        },
        {
          "qualified_name": "sklearn.base.ClassifierMixin",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Table",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.TaggedTable",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachineKernel",
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/ml/classical/regression",
      "name": "__init__",
      "docstring": "Models for regression tasks.",
      "qualified_imports": [
        {
          "qualified_name": "_ada_boost.AdaBoost",
          "alias": null
        },
        {
          "qualified_name": "_decision_tree.DecisionTree",
          "alias": null
        },
        {
          "qualified_name": "_elastic_net_regression.ElasticNetRegression",
          "alias": null
        },
        {
          "qualified_name": "_gradient_boosting.GradientBoosting",
          "alias": null
        },
        {
          "qualified_name": "_k_nearest_neighbors.KNearestNeighbors",
          "alias": null
        },
        {
          "qualified_name": "_lasso_regression.LassoRegression",
          "alias": null
        },
        {
          "qualified_name": "_linear_regression.LinearRegression",
          "alias": null
        },
        {
          "qualified_name": "_random_forest.RandomForest",
          "alias": null
        },
        {
          "qualified_name": "_regressor.Regressor",
          "alias": null
        },
        {
          "qualified_name": "_ridge_regression.RidgeRegression",
          "alias": null
        },
        {
          "qualified_name": "_support_vector_machine.SupportVectorMachine",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost",
      "name": "_ada_boost",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "typing.TYPE_CHECKING",
          "alias": null
        },
        {
          "qualified_name": "sklearn.ensemble.AdaBoostRegressor",
          "alias": "sk_AdaBoostRegressor"
        },
        {
          "qualified_name": "safeds.exceptions.ClosedBound",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.OpenBound",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.OutOfBoundsError",
          "alias": null
        },
        {
          "qualified_name": "safeds.ml.classical._util_sklearn.fit",
          "alias": null
        },
        {
          "qualified_name": "safeds.ml.classical._util_sklearn.predict",
          "alias": null
        },
        {
          "qualified_name": "_regressor.Regressor",
          "alias": null
        },
        {
          "qualified_name": "sklearn.base.RegressorMixin",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Table",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.TaggedTable",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/ml/classical/regression/_ada_boost/AdaBoost"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/ml/classical/regression/_decision_tree",
      "name": "_decision_tree",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "typing.TYPE_CHECKING",
          "alias": null
        },
        {
          "qualified_name": "sklearn.tree.DecisionTreeRegressor",
          "alias": "sk_DecisionTreeRegressor"
        },
        {
          "qualified_name": "safeds.ml.classical._util_sklearn.fit",
          "alias": null
        },
        {
          "qualified_name": "safeds.ml.classical._util_sklearn.predict",
          "alias": null
        },
        {
          "qualified_name": "_regressor.Regressor",
          "alias": null
        },
        {
          "qualified_name": "sklearn.base.RegressorMixin",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Table",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.TaggedTable",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/ml/classical/regression/_decision_tree/DecisionTree"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/ml/classical/regression/_elastic_net_regression",
      "name": "_elastic_net_regression",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "warnings",
          "alias": null
        },
        {
          "qualified_name": "typing.TYPE_CHECKING",
          "alias": null
        },
        {
          "qualified_name": "warnings.warn",
          "alias": null
        },
        {
          "qualified_name": "sklearn.linear_model.ElasticNet",
          "alias": "sk_ElasticNet"
        },
        {
          "qualified_name": "safeds.exceptions.ClosedBound",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.OutOfBoundsError",
          "alias": null
        },
        {
          "qualified_name": "safeds.ml.classical._util_sklearn.fit",
          "alias": null
        },
        {
          "qualified_name": "safeds.ml.classical._util_sklearn.predict",
          "alias": null
        },
        {
          "qualified_name": "_regressor.Regressor",
          "alias": null
        },
        {
          "qualified_name": "sklearn.base.RegressorMixin",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Table",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.TaggedTable",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/ml/classical/regression/_gradient_boosting",
      "name": "_gradient_boosting",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "typing.TYPE_CHECKING",
          "alias": null
        },
        {
          "qualified_name": "sklearn.ensemble.GradientBoostingRegressor",
          "alias": "sk_GradientBoostingRegressor"
        },
        {
          "qualified_name": "safeds.exceptions.ClosedBound",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.OpenBound",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.OutOfBoundsError",
          "alias": null
        },
        {
          "qualified_name": "safeds.ml.classical._util_sklearn.fit",
          "alias": null
        },
        {
          "qualified_name": "safeds.ml.classical._util_sklearn.predict",
          "alias": null
        },
        {
          "qualified_name": "_regressor.Regressor",
          "alias": null
        },
        {
          "qualified_name": "sklearn.base.RegressorMixin",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Table",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.TaggedTable",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/ml/classical/regression/_k_nearest_neighbors",
      "name": "_k_nearest_neighbors",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "typing.TYPE_CHECKING",
          "alias": null
        },
        {
          "qualified_name": "sklearn.neighbors.KNeighborsRegressor",
          "alias": "sk_KNeighborsRegressor"
        },
        {
          "qualified_name": "safeds.exceptions.ClosedBound",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.DatasetMissesDataError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.OutOfBoundsError",
          "alias": null
        },
        {
          "qualified_name": "safeds.ml.classical._util_sklearn.fit",
          "alias": null
        },
        {
          "qualified_name": "safeds.ml.classical._util_sklearn.predict",
          "alias": null
        },
        {
          "qualified_name": "_regressor.Regressor",
          "alias": null
        },
        {
          "qualified_name": "sklearn.base.RegressorMixin",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Table",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.TaggedTable",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/ml/classical/regression/_lasso_regression",
      "name": "_lasso_regression",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "typing.TYPE_CHECKING",
          "alias": null
        },
        {
          "qualified_name": "warnings.warn",
          "alias": null
        },
        {
          "qualified_name": "sklearn.linear_model.Lasso",
          "alias": "sk_Lasso"
        },
        {
          "qualified_name": "safeds.exceptions.ClosedBound",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.OutOfBoundsError",
          "alias": null
        },
        {
          "qualified_name": "safeds.ml.classical._util_sklearn.fit",
          "alias": null
        },
        {
          "qualified_name": "safeds.ml.classical._util_sklearn.predict",
          "alias": null
        },
        {
          "qualified_name": "_regressor.Regressor",
          "alias": null
        },
        {
          "qualified_name": "sklearn.base.RegressorMixin",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Table",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.TaggedTable",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/ml/classical/regression/_lasso_regression/LassoRegression"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/ml/classical/regression/_linear_regression",
      "name": "_linear_regression",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "typing.TYPE_CHECKING",
          "alias": null
        },
        {
          "qualified_name": "sklearn.linear_model.LinearRegression",
          "alias": "sk_LinearRegression"
        },
        {
          "qualified_name": "safeds.ml.classical._util_sklearn.fit",
          "alias": null
        },
        {
          "qualified_name": "safeds.ml.classical._util_sklearn.predict",
          "alias": null
        },
        {
          "qualified_name": "_regressor.Regressor",
          "alias": null
        },
        {
          "qualified_name": "sklearn.base.RegressorMixin",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Table",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.TaggedTable",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/ml/classical/regression/_linear_regression/LinearRegression"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/ml/classical/regression/_random_forest",
      "name": "_random_forest",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "typing.TYPE_CHECKING",
          "alias": null
        },
        {
          "qualified_name": "sklearn.ensemble.RandomForestRegressor",
          "alias": "sk_RandomForestRegressor"
        },
        {
          "qualified_name": "safeds.exceptions.ClosedBound",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.OutOfBoundsError",
          "alias": null
        },
        {
          "qualified_name": "safeds.ml.classical._util_sklearn.fit",
          "alias": null
        },
        {
          "qualified_name": "safeds.ml.classical._util_sklearn.predict",
          "alias": null
        },
        {
          "qualified_name": "_regressor.Regressor",
          "alias": null
        },
        {
          "qualified_name": "sklearn.base.RegressorMixin",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Table",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.TaggedTable",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/ml/classical/regression/_random_forest/RandomForest"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/ml/classical/regression/_regressor",
      "name": "_regressor",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "abc.ABC",
          "alias": null
        },
        {
          "qualified_name": "abc.abstractmethod",
          "alias": null
        },
        {
          "qualified_name": "typing.TYPE_CHECKING",
          "alias": null
        },
        {
          "qualified_name": "sklearn.metrics.mean_absolute_error",
          "alias": "sk_mean_absolute_error"
        },
        {
          "qualified_name": "sklearn.metrics.mean_squared_error",
          "alias": "sk_mean_squared_error"
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Column",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Table",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.TaggedTable",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.ColumnLengthMismatchError",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.UntaggedTableError",
          "alias": null
        },
        {
          "qualified_name": "sklearn.base.RegressorMixin",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/ml/classical/regression/_regressor/Regressor"
      ],
      "functions": [
        "safeds/ml/classical/regression/_regressor/_check_metrics_preconditions"
      ],
      "enums": []
    },
    {
      "id": "safeds/ml/classical/regression/_ridge_regression",
      "name": "_ridge_regression",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "warnings",
          "alias": null
        },
        {
          "qualified_name": "typing.TYPE_CHECKING",
          "alias": null
        },
        {
          "qualified_name": "sklearn.linear_model.Ridge",
          "alias": "sk_Ridge"
        },
        {
          "qualified_name": "safeds.exceptions.ClosedBound",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.OutOfBoundsError",
          "alias": null
        },
        {
          "qualified_name": "safeds.ml.classical._util_sklearn.fit",
          "alias": null
        },
        {
          "qualified_name": "safeds.ml.classical._util_sklearn.predict",
          "alias": null
        },
        {
          "qualified_name": "_regressor.Regressor",
          "alias": null
        },
        {
          "qualified_name": "sklearn.base.RegressorMixin",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Table",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.TaggedTable",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/ml/classical/regression/_ridge_regression/RidgeRegression"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine",
      "name": "_support_vector_machine",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "abc.ABC",
          "alias": null
        },
        {
          "qualified_name": "abc.abstractmethod",
          "alias": null
        },
        {
          "qualified_name": "typing.TYPE_CHECKING",
          "alias": null
        },
        {
          "qualified_name": "sklearn.svm.SVR",
          "alias": "sk_SVR"
        },
        {
          "qualified_name": "safeds.exceptions.ClosedBound",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.OpenBound",
          "alias": null
        },
        {
          "qualified_name": "safeds.exceptions.OutOfBoundsError",
          "alias": null
        },
        {
          "qualified_name": "safeds.ml.classical._util_sklearn.fit",
          "alias": null
        },
        {
          "qualified_name": "safeds.ml.classical._util_sklearn.predict",
          "alias": null
        },
        {
          "qualified_name": "safeds.ml.classical.regression.Regressor",
          "alias": null
        },
        {
          "qualified_name": "sklearn.base.RegressorMixin",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.Table",
          "alias": null
        },
        {
          "qualified_name": "safeds.data.tabular.containers.TaggedTable",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachineKernel",
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine"
      ],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/ml/hyperparameters",
      "name": "__init__",
      "docstring": "Tools to work with hyperparameters of ML models.",
      "qualified_imports": [
        {
          "qualified_name": "_choice.Choice",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [],
      "functions": [],
      "enums": []
    },
    {
      "id": "safeds/ml/hyperparameters/_choice",
      "name": "_choice",
      "docstring": "",
      "qualified_imports": [
        {
          "qualified_name": "__future__.annotations",
          "alias": null
        },
        {
          "qualified_name": "collections.abc.Collection",
          "alias": null
        },
        {
          "qualified_name": "typing.TYPE_CHECKING",
          "alias": null
        },
        {
          "qualified_name": "typing.TypeVar",
          "alias": null
        },
        {
          "qualified_name": "collections.abc.Iterator",
          "alias": null
        },
        {
          "qualified_name": "typing.Any",
          "alias": null
        }
      ],
      "wildcard_imports": [],
      "classes": [
        "safeds/ml/hyperparameters/_choice/Choice"
      ],
      "functions": [],
      "enums": []
    }
  ],
  "classes": [
    {
      "id": "safeds/data/image/containers/_image/Image",
      "name": "Image",
      "docstring": {
        "description": "A container for image data.\n\nParameters\n----------\nimage_tensor : Tensor\n    The image data as tensor.",
        "full_docstring": "A container for image data.\n\nParameters\n----------\nimage_tensor : Tensor\n    The image data as tensor."
      },
      "is_public": true,
      "superclasses": [],
      "constructor": {
        "id": "safeds/data/image/containers/_image/Image/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/data/image/containers"
        ],
        "parameters": [
          "safeds/data/image/containers/_image/Image/__init__/self",
          "safeds/data/image/containers/_image/Image/__init__/image_tensor",
          "safeds/data/image/containers/_image/Image/__init__/device"
        ]
      },
      "reexported_by": [
        "safeds/data/image/containers"
      ],
      "attributes": [
        "safeds/data/image/containers/_image/Image/_pil_to_tensor",
        "safeds/data/image/containers/_image/Image/_default_device",
        "safeds/data/image/containers/_image/Image/_FILTER_EDGES_KERNEL",
        "safeds/data/image/containers/_image/Image/_image_tensor"
      ],
      "methods": [
        "safeds/data/image/containers/_image/Image/from_file",
        "safeds/data/image/containers/_image/Image/from_bytes",
        "safeds/data/image/containers/_image/Image/__eq__",
        "safeds/data/image/containers/_image/Image/__sizeof__",
        "safeds/data/image/containers/_image/Image/_repr_jpeg_",
        "safeds/data/image/containers/_image/Image/_repr_png_",
        "safeds/data/image/containers/_image/Image/_set_device",
        "safeds/data/image/containers/_image/Image/width",
        "safeds/data/image/containers/_image/Image/height",
        "safeds/data/image/containers/_image/Image/channel",
        "safeds/data/image/containers/_image/Image/device",
        "safeds/data/image/containers/_image/Image/to_jpeg_file",
        "safeds/data/image/containers/_image/Image/to_png_file",
        "safeds/data/image/containers/_image/Image/resize",
        "safeds/data/image/containers/_image/Image/convert_to_grayscale",
        "safeds/data/image/containers/_image/Image/crop",
        "safeds/data/image/containers/_image/Image/flip_vertically",
        "safeds/data/image/containers/_image/Image/flip_horizontally",
        "safeds/data/image/containers/_image/Image/adjust_brightness",
        "safeds/data/image/containers/_image/Image/add_noise",
        "safeds/data/image/containers/_image/Image/adjust_contrast",
        "safeds/data/image/containers/_image/Image/adjust_color_balance",
        "safeds/data/image/containers/_image/Image/blur",
        "safeds/data/image/containers/_image/Image/sharpen",
        "safeds/data/image/containers/_image/Image/invert_colors",
        "safeds/data/image/containers/_image/Image/rotate_right",
        "safeds/data/image/containers/_image/Image/rotate_left",
        "safeds/data/image/containers/_image/Image/find_edges"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column",
      "name": "Column",
      "docstring": {
        "description": "A column is a named collection of values.\n\nParameters\n----------\nname : str\n    The name of the column.\ndata : Sequence[T]\n    The data.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])",
        "full_docstring": "A column is a named collection of values.\n\nParameters\n----------\nname : str\n    The name of the column.\ndata : Sequence[T]\n    The data.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])"
      },
      "is_public": true,
      "superclasses": [],
      "constructor": {
        "id": "safeds/data/tabular/containers/_column/Column/__init__",
        "name": "__init__",
        "docstring": {
          "description": "Create a column.\n\nParameters\n----------\nname : str\n    The name of the column.\ndata : Sequence[T] | None\n    The data. If None, an empty column is created.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])",
          "full_docstring": "Create a column.\n\nParameters\n----------\nname : str\n    The name of the column.\ndata : Sequence[T] | None\n    The data. If None, an empty column is created.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])"
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/data/tabular/containers"
        ],
        "parameters": [
          "safeds/data/tabular/containers/_column/Column/__init__/self",
          "safeds/data/tabular/containers/_column/Column/__init__/name",
          "safeds/data/tabular/containers/_column/Column/__init__/data"
        ]
      },
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "attributes": [
        "safeds/data/tabular/containers/_column/Column/_name",
        "safeds/data/tabular/containers/_column/Column/_data",
        "safeds/data/tabular/containers/_column/Column/_type"
      ],
      "methods": [
        "safeds/data/tabular/containers/_column/Column/_from_pandas_series",
        "safeds/data/tabular/containers/_column/Column/__contains__",
        "safeds/data/tabular/containers/_column/Column/__eq__",
        "safeds/data/tabular/containers/_column/Column/__iter__",
        "safeds/data/tabular/containers/_column/Column/__len__",
        "safeds/data/tabular/containers/_column/Column/__repr__",
        "safeds/data/tabular/containers/_column/Column/__sizeof__",
        "safeds/data/tabular/containers/_column/Column/__str__",
        "safeds/data/tabular/containers/_column/Column/name",
        "safeds/data/tabular/containers/_column/Column/number_of_rows",
        "safeds/data/tabular/containers/_column/Column/type",
        "safeds/data/tabular/containers/_column/Column/get_unique_values",
        "safeds/data/tabular/containers/_column/Column/get_value",
        "safeds/data/tabular/containers/_column/Column/all",
        "safeds/data/tabular/containers/_column/Column/any",
        "safeds/data/tabular/containers/_column/Column/none",
        "safeds/data/tabular/containers/_column/Column/has_missing_values",
        "safeds/data/tabular/containers/_column/Column/rename",
        "safeds/data/tabular/containers/_column/Column/transform",
        "safeds/data/tabular/containers/_column/Column/correlation_with",
        "safeds/data/tabular/containers/_column/Column/idness",
        "safeds/data/tabular/containers/_column/Column/maximum",
        "safeds/data/tabular/containers/_column/Column/mean",
        "safeds/data/tabular/containers/_column/Column/median",
        "safeds/data/tabular/containers/_column/Column/minimum",
        "safeds/data/tabular/containers/_column/Column/missing_value_ratio",
        "safeds/data/tabular/containers/_column/Column/mode",
        "safeds/data/tabular/containers/_column/Column/stability",
        "safeds/data/tabular/containers/_column/Column/standard_deviation",
        "safeds/data/tabular/containers/_column/Column/sum",
        "safeds/data/tabular/containers/_column/Column/variance",
        "safeds/data/tabular/containers/_column/Column/plot_boxplot",
        "safeds/data/tabular/containers/_column/Column/plot_histogram",
        "safeds/data/tabular/containers/_column/Column/to_html",
        "safeds/data/tabular/containers/_column/Column/_repr_html_",
        "safeds/data/tabular/containers/_column/Column/_count_missing_values"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row",
      "name": "Row",
      "docstring": {
        "description": "A row is a collection of named values.\n\nParameters\n----------\ndata : Mapping[str, Any] | None\n    The data. If None, an empty row is created.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row({\"a\": 1, \"b\": 2})",
        "full_docstring": "A row is a collection of named values.\n\nParameters\n----------\ndata : Mapping[str, Any] | None\n    The data. If None, an empty row is created.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row({\"a\": 1, \"b\": 2})"
      },
      "is_public": true,
      "superclasses": [],
      "constructor": {
        "id": "safeds/data/tabular/containers/_row/Row/__init__",
        "name": "__init__",
        "docstring": {
          "description": "Create a row from a mapping of column names to column values.\n\nParameters\n----------\ndata : Mapping[str, Any] | None\n    The data. If None, an empty row is created.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row({\"a\": 1, \"b\": 2})",
          "full_docstring": "Create a row from a mapping of column names to column values.\n\nParameters\n----------\ndata : Mapping[str, Any] | None\n    The data. If None, an empty row is created.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row({\"a\": 1, \"b\": 2})"
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/data/tabular/containers"
        ],
        "parameters": [
          "safeds/data/tabular/containers/_row/Row/__init__/self",
          "safeds/data/tabular/containers/_row/Row/__init__/data"
        ]
      },
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "attributes": [
        "safeds/data/tabular/containers/_row/Row/_data",
        "safeds/data/tabular/containers/_row/Row/_schema"
      ],
      "methods": [
        "safeds/data/tabular/containers/_row/Row/from_dict",
        "safeds/data/tabular/containers/_row/Row/_from_pandas_dataframe",
        "safeds/data/tabular/containers/_row/Row/__contains__",
        "safeds/data/tabular/containers/_row/Row/__eq__",
        "safeds/data/tabular/containers/_row/Row/__getitem__",
        "safeds/data/tabular/containers/_row/Row/__iter__",
        "safeds/data/tabular/containers/_row/Row/__len__",
        "safeds/data/tabular/containers/_row/Row/__repr__",
        "safeds/data/tabular/containers/_row/Row/__sizeof__",
        "safeds/data/tabular/containers/_row/Row/__str__",
        "safeds/data/tabular/containers/_row/Row/column_names",
        "safeds/data/tabular/containers/_row/Row/number_of_column",
        "safeds/data/tabular/containers/_row/Row/schema",
        "safeds/data/tabular/containers/_row/Row/get_value",
        "safeds/data/tabular/containers/_row/Row/has_column",
        "safeds/data/tabular/containers/_row/Row/get_column_type",
        "safeds/data/tabular/containers/_row/Row/sort_columns",
        "safeds/data/tabular/containers/_row/Row/to_dict",
        "safeds/data/tabular/containers/_row/Row/to_html",
        "safeds/data/tabular/containers/_row/Row/_repr_html_"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table",
      "name": "Table",
      "docstring": {
        "description": "A table is a two-dimensional collection of data. It can either be seen as a list of rows or as a list of columns.\n\nTo create a `Table` call the constructor or use one of the following static methods:\n\n| Method                                                                       | Description                            |\n| ---------------------------------------------------------------------------- | -------------------------------------- |\n| [from_csv_file][safeds.data.tabular.containers._table.Table.from_csv_file]   | Create a table from a CSV file.        |\n| [from_json_file][safeds.data.tabular.containers._table.Table.from_json_file] | Create a table from a JSON file.       |\n| [from_dict][safeds.data.tabular.containers._table.Table.from_dict]           | Create a table from a dictionary.      |\n| [from_columns][safeds.data.tabular.containers._table.Table.from_columns]     | Create a table from a list of columns. |\n| [from_rows][safeds.data.tabular.containers._table.Table.from_rows]           | Create a table from a list of rows.    |\n\nNote: When removing the last column of the table, the `number_of_columns` property will be set to 0.\n\nParameters\n----------\ndata : Mapping[str, Sequence[Any]] | None\n    The data. If None, an empty table is created.\n\nRaises\n------\nColumnLengthMismatchError\n    If columns have different lengths.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table({\"a\": [1, 2, 3], \"b\": [4, 5, 6]})",
        "full_docstring": "A table is a two-dimensional collection of data. It can either be seen as a list of rows or as a list of columns.\n\nTo create a `Table` call the constructor or use one of the following static methods:\n\n| Method                                                                       | Description                            |\n| ---------------------------------------------------------------------------- | -------------------------------------- |\n| [from_csv_file][safeds.data.tabular.containers._table.Table.from_csv_file]   | Create a table from a CSV file.        |\n| [from_json_file][safeds.data.tabular.containers._table.Table.from_json_file] | Create a table from a JSON file.       |\n| [from_dict][safeds.data.tabular.containers._table.Table.from_dict]           | Create a table from a dictionary.      |\n| [from_columns][safeds.data.tabular.containers._table.Table.from_columns]     | Create a table from a list of columns. |\n| [from_rows][safeds.data.tabular.containers._table.Table.from_rows]           | Create a table from a list of rows.    |\n\nNote: When removing the last column of the table, the `number_of_columns` property will be set to 0.\n\nParameters\n----------\ndata : Mapping[str, Sequence[Any]] | None\n    The data. If None, an empty table is created.\n\nRaises\n------\nColumnLengthMismatchError\n    If columns have different lengths.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table({\"a\": [1, 2, 3], \"b\": [4, 5, 6]})"
      },
      "is_public": true,
      "superclasses": [],
      "constructor": {
        "id": "safeds/data/tabular/containers/_table/Table/__init__",
        "name": "__init__",
        "docstring": {
          "description": "Create a table from a mapping of column names to their values.\n\nParameters\n----------\ndata : Mapping[str, Sequence[Any]] | None\n    The data. If None, an empty table is created.\n\nRaises\n------\nColumnLengthMismatchError\n    If columns have different lengths.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> Table({\"a\": [1, 2, 3], \"b\": [4, 5, 6]})\n   a  b\n0  1  4\n1  2  5\n2  3  6",
          "full_docstring": "Create a table from a mapping of column names to their values.\n\nParameters\n----------\ndata : Mapping[str, Sequence[Any]] | None\n    The data. If None, an empty table is created.\n\nRaises\n------\nColumnLengthMismatchError\n    If columns have different lengths.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> Table({\"a\": [1, 2, 3], \"b\": [4, 5, 6]})\n   a  b\n0  1  4\n1  2  5\n2  3  6"
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/data/tabular/containers"
        ],
        "parameters": [
          "safeds/data/tabular/containers/_table/Table/__init__/self",
          "safeds/data/tabular/containers/_table/Table/__init__/data"
        ]
      },
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "attributes": [
        "safeds/data/tabular/containers/_table/Table/_data",
        "safeds/data/tabular/containers/_table/Table/_schema",
        "safeds/data/tabular/containers/_table/Table/_T"
      ],
      "methods": [
        "safeds/data/tabular/containers/_table/Table/from_csv_file",
        "safeds/data/tabular/containers/_table/Table/from_excel_file",
        "safeds/data/tabular/containers/_table/Table/from_json_file",
        "safeds/data/tabular/containers/_table/Table/from_dict",
        "safeds/data/tabular/containers/_table/Table/from_columns",
        "safeds/data/tabular/containers/_table/Table/from_rows",
        "safeds/data/tabular/containers/_table/Table/_from_pandas_dataframe",
        "safeds/data/tabular/containers/_table/Table/__eq__",
        "safeds/data/tabular/containers/_table/Table/__repr__",
        "safeds/data/tabular/containers/_table/Table/__sizeof__",
        "safeds/data/tabular/containers/_table/Table/__str__",
        "safeds/data/tabular/containers/_table/Table/column_names",
        "safeds/data/tabular/containers/_table/Table/number_of_columns",
        "safeds/data/tabular/containers/_table/Table/number_of_rows",
        "safeds/data/tabular/containers/_table/Table/schema",
        "safeds/data/tabular/containers/_table/Table/get_column",
        "safeds/data/tabular/containers/_table/Table/has_column",
        "safeds/data/tabular/containers/_table/Table/get_column_type",
        "safeds/data/tabular/containers/_table/Table/get_row",
        "safeds/data/tabular/containers/_table/Table/_get_similar_columns",
        "safeds/data/tabular/containers/_table/Table/summarize_statistics",
        "safeds/data/tabular/containers/_table/Table/_as_table",
        "safeds/data/tabular/containers/_table/Table/add_column",
        "safeds/data/tabular/containers/_table/Table/add_columns",
        "safeds/data/tabular/containers/_table/Table/add_row",
        "safeds/data/tabular/containers/_table/Table/add_rows",
        "safeds/data/tabular/containers/_table/Table/filter_rows",
        "safeds/data/tabular/containers/_table/Table/group_rows_by",
        "safeds/data/tabular/containers/_table/Table/keep_only_columns",
        "safeds/data/tabular/containers/_table/Table/remove_columns",
        "safeds/data/tabular/containers/_table/Table/remove_columns_with_missing_values",
        "safeds/data/tabular/containers/_table/Table/remove_columns_with_non_numerical_values",
        "safeds/data/tabular/containers/_table/Table/remove_duplicate_rows",
        "safeds/data/tabular/containers/_table/Table/remove_rows_with_missing_values",
        "safeds/data/tabular/containers/_table/Table/remove_rows_with_outliers",
        "safeds/data/tabular/containers/_table/Table/rename_column",
        "safeds/data/tabular/containers/_table/Table/replace_column",
        "safeds/data/tabular/containers/_table/Table/shuffle_rows",
        "safeds/data/tabular/containers/_table/Table/slice_rows",
        "safeds/data/tabular/containers/_table/Table/sort_columns",
        "safeds/data/tabular/containers/_table/Table/sort_rows",
        "safeds/data/tabular/containers/_table/Table/split_rows",
        "safeds/data/tabular/containers/_table/Table/tag_columns",
        "safeds/data/tabular/containers/_table/Table/time_columns",
        "safeds/data/tabular/containers/_table/Table/transform_column",
        "safeds/data/tabular/containers/_table/Table/transform_table",
        "safeds/data/tabular/containers/_table/Table/inverse_transform_table",
        "safeds/data/tabular/containers/_table/Table/plot_correlation_heatmap",
        "safeds/data/tabular/containers/_table/Table/plot_lineplot",
        "safeds/data/tabular/containers/_table/Table/plot_scatterplot",
        "safeds/data/tabular/containers/_table/Table/plot_boxplots",
        "safeds/data/tabular/containers/_table/Table/plot_histograms",
        "safeds/data/tabular/containers/_table/Table/to_csv_file",
        "safeds/data/tabular/containers/_table/Table/to_excel_file",
        "safeds/data/tabular/containers/_table/Table/to_json_file",
        "safeds/data/tabular/containers/_table/Table/to_dict",
        "safeds/data/tabular/containers/_table/Table/to_html",
        "safeds/data/tabular/containers/_table/Table/to_columns",
        "safeds/data/tabular/containers/_table/Table/to_rows",
        "safeds/data/tabular/containers/_table/Table/_repr_html_",
        "safeds/data/tabular/containers/_table/Table/__dataframe__"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable",
      "name": "TaggedTable",
      "docstring": {
        "description": "A tagged table is a table that additionally knows which columns are features and which are the target to predict.\n\nParameters\n----------\ndata : Mapping[str, Sequence[Any]]\n    The data.\ntarget_name : str\n    Name of the target column.\nfeature_names : list[str] | None\n    Names of the feature columns. If None, all columns except the target column are used.\n\nRaises\n------\nColumnLengthMismatchError\n    If columns have different lengths.\nValueError\n    If the target column is also a feature column.\nValueError\n    If no feature columns are specified.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table, TaggedTable\n>>> table = Table({\"col1\": [\"a\", \"b\"], \"col2\": [1, 2]})\n>>> tagged_table = table.tag_columns(\"col2\", [\"col1\"])",
        "full_docstring": "A tagged table is a table that additionally knows which columns are features and which are the target to predict.\n\nParameters\n----------\ndata : Mapping[str, Sequence[Any]]\n    The data.\ntarget_name : str\n    Name of the target column.\nfeature_names : list[str] | None\n    Names of the feature columns. If None, all columns except the target column are used.\n\nRaises\n------\nColumnLengthMismatchError\n    If columns have different lengths.\nValueError\n    If the target column is also a feature column.\nValueError\n    If no feature columns are specified.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table, TaggedTable\n>>> table = Table({\"col1\": [\"a\", \"b\"], \"col2\": [1, 2]})\n>>> tagged_table = table.tag_columns(\"col2\", [\"col1\"])"
      },
      "is_public": true,
      "superclasses": [
        "safeds.data.tabular.containers._table.Table"
      ],
      "constructor": {
        "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/__init__",
        "name": "__init__",
        "docstring": {
          "description": "Create a tagged table from a mapping of column names to their values.\n\nParameters\n----------\ndata : Mapping[str, Sequence[Any]]\n    The data.\ntarget_name : str\n    Name of the target column.\nfeature_names : list[str] | None\n    Names of the feature columns. If None, all columns except the target column are used.\n\nRaises\n------\nColumnLengthMismatchError\n    If columns have different lengths.\nValueError\n    If the target column is also a feature column.\nValueError\n    If no feature columns are specified.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import TaggedTable\n>>> table = TaggedTable({\"a\": [1, 2, 3], \"b\": [4, 5, 6]}, \"b\", [\"a\"])",
          "full_docstring": "Create a tagged table from a mapping of column names to their values.\n\nParameters\n----------\ndata : Mapping[str, Sequence[Any]]\n    The data.\ntarget_name : str\n    Name of the target column.\nfeature_names : list[str] | None\n    Names of the feature columns. If None, all columns except the target column are used.\n\nRaises\n------\nColumnLengthMismatchError\n    If columns have different lengths.\nValueError\n    If the target column is also a feature column.\nValueError\n    If no feature columns are specified.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import TaggedTable\n>>> table = TaggedTable({\"a\": [1, 2, 3], \"b\": [4, 5, 6]}, \"b\", [\"a\"])"
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/data/tabular/containers"
        ],
        "parameters": [
          "safeds/data/tabular/containers/_tagged_table/TaggedTable/__init__/self",
          "safeds/data/tabular/containers/_tagged_table/TaggedTable/__init__/data",
          "safeds/data/tabular/containers/_tagged_table/TaggedTable/__init__/target_name",
          "safeds/data/tabular/containers/_tagged_table/TaggedTable/__init__/feature_names"
        ]
      },
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "attributes": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/_features",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/_target"
      ],
      "methods": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/_from_table",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/__sizeof__",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/features",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/target",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_column_as_feature",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_columns_as_features",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/_as_table",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_column",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_columns",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_row",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_rows",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/filter_rows",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/keep_only_columns",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_columns",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_columns_with_missing_values",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_columns_with_non_numerical_values",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_duplicate_rows",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_rows_with_missing_values",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_rows_with_outliers",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/rename_column",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/replace_column",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/shuffle_rows",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/slice_rows",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/sort_columns",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/sort_rows",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/transform_column"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries",
      "name": "TimeSeries",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "superclasses": [
        "safeds.data.tabular.containers._tagged_table.TaggedTable"
      ],
      "constructor": {
        "id": "safeds/data/tabular/containers/_time_series/TimeSeries/__init__",
        "name": "__init__",
        "docstring": {
          "description": "Create a time series from a mapping of column names to their values.\n\nParameters\n----------\ndata : Mapping[str, Sequence[Any]]\n    The data.\ntarget_name : str\n    Name of the target column.\ntime_name : str\n    Name of the time column\nfeature_names : list[str] | None\n    Names of the feature columns. If None, all columns except the target and time columns are used.\n\nRaises\n------\nColumnLengthMismatchError\n    If columns have different lengths.\nValueError\n    If the target column is also a feature column.\nValueError\n    If no feature columns are specified.\nValueError\n    If time column is also a feature column\nUnknownColumnNameError\n    If time column does not exist\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import TaggedTable\n>>> table = TaggedTable({\"a\": [1, 2, 3], \"b\": [4, 5, 6]}, \"b\", [\"a\"])",
          "full_docstring": "Create a time series from a mapping of column names to their values.\n\nParameters\n----------\ndata : Mapping[str, Sequence[Any]]\n    The data.\ntarget_name : str\n    Name of the target column.\ntime_name : str\n    Name of the time column\nfeature_names : list[str] | None\n    Names of the feature columns. If None, all columns except the target and time columns are used.\n\nRaises\n------\nColumnLengthMismatchError\n    If columns have different lengths.\nValueError\n    If the target column is also a feature column.\nValueError\n    If no feature columns are specified.\nValueError\n    If time column is also a feature column\nUnknownColumnNameError\n    If time column does not exist\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import TaggedTable\n>>> table = TaggedTable({\"a\": [1, 2, 3], \"b\": [4, 5, 6]}, \"b\", [\"a\"])"
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/data/tabular/containers"
        ],
        "parameters": [
          "safeds/data/tabular/containers/_time_series/TimeSeries/__init__/self",
          "safeds/data/tabular/containers/_time_series/TimeSeries/__init__/data",
          "safeds/data/tabular/containers/_time_series/TimeSeries/__init__/target_name",
          "safeds/data/tabular/containers/_time_series/TimeSeries/__init__/time_name",
          "safeds/data/tabular/containers/_time_series/TimeSeries/__init__/feature_names"
        ]
      },
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "attributes": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/_time"
      ],
      "methods": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/_from_tagged_table",
        "safeds/data/tabular/containers/_time_series/TimeSeries/_from_table_to_time_series",
        "safeds/data/tabular/containers/_time_series/TimeSeries/__sizeof__",
        "safeds/data/tabular/containers/_time_series/TimeSeries/time",
        "safeds/data/tabular/containers/_time_series/TimeSeries/_as_table",
        "safeds/data/tabular/containers/_time_series/TimeSeries/add_column",
        "safeds/data/tabular/containers/_time_series/TimeSeries/add_column_as_feature",
        "safeds/data/tabular/containers/_time_series/TimeSeries/add_columns_as_features",
        "safeds/data/tabular/containers/_time_series/TimeSeries/add_columns",
        "safeds/data/tabular/containers/_time_series/TimeSeries/add_row",
        "safeds/data/tabular/containers/_time_series/TimeSeries/add_rows",
        "safeds/data/tabular/containers/_time_series/TimeSeries/filter_rows",
        "safeds/data/tabular/containers/_time_series/TimeSeries/keep_only_columns",
        "safeds/data/tabular/containers/_time_series/TimeSeries/remove_columns",
        "safeds/data/tabular/containers/_time_series/TimeSeries/remove_columns_with_missing_values",
        "safeds/data/tabular/containers/_time_series/TimeSeries/remove_columns_with_non_numerical_values",
        "safeds/data/tabular/containers/_time_series/TimeSeries/remove_duplicate_rows",
        "safeds/data/tabular/containers/_time_series/TimeSeries/remove_rows_with_missing_values",
        "safeds/data/tabular/containers/_time_series/TimeSeries/remove_rows_with_outliers",
        "safeds/data/tabular/containers/_time_series/TimeSeries/rename_column",
        "safeds/data/tabular/containers/_time_series/TimeSeries/replace_column",
        "safeds/data/tabular/containers/_time_series/TimeSeries/slice_rows",
        "safeds/data/tabular/containers/_time_series/TimeSeries/sort_columns",
        "safeds/data/tabular/containers/_time_series/TimeSeries/transform_column",
        "safeds/data/tabular/containers/_time_series/TimeSeries/plot_lagplot"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/data/tabular/transformation/_discretizer/Discretizer",
      "name": "Discretizer",
      "docstring": {
        "description": "The Discretizer bins continuous data into intervals.\n\nParameters\n----------\nnumber_of_bins: float\n    The number of bins to be created.\n\nRaises\n------\nOutOfBoundsError\n    If the given number_of_bins is less than 2.",
        "full_docstring": "The Discretizer bins continuous data into intervals.\n\nParameters\n----------\nnumber_of_bins: float\n    The number of bins to be created.\n\nRaises\n------\nOutOfBoundsError\n    If the given number_of_bins is less than 2."
      },
      "is_public": true,
      "superclasses": [
        "safeds.data.tabular.transformation._table_transformer.TableTransformer"
      ],
      "constructor": {
        "id": "safeds/data/tabular/transformation/_discretizer/Discretizer/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/data/tabular/transformation"
        ],
        "parameters": [
          "safeds/data/tabular/transformation/_discretizer/Discretizer/__init__/self",
          "safeds/data/tabular/transformation/_discretizer/Discretizer/__init__/number_of_bins"
        ]
      },
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "attributes": [
        "safeds/data/tabular/transformation/_discretizer/Discretizer/_column_names",
        "safeds/data/tabular/transformation/_discretizer/Discretizer/_wrapped_transformer",
        "safeds/data/tabular/transformation/_discretizer/Discretizer/_number_of_bins"
      ],
      "methods": [
        "safeds/data/tabular/transformation/_discretizer/Discretizer/fit",
        "safeds/data/tabular/transformation/_discretizer/Discretizer/transform",
        "safeds/data/tabular/transformation/_discretizer/Discretizer/is_fitted",
        "safeds/data/tabular/transformation/_discretizer/Discretizer/get_names_of_added_columns",
        "safeds/data/tabular/transformation/_discretizer/Discretizer/get_names_of_changed_columns",
        "safeds/data/tabular/transformation/_discretizer/Discretizer/get_names_of_removed_columns"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer",
      "name": "Imputer",
      "docstring": {
        "description": "Replace missing values with the given strategy.\n\nParameters\n----------\nstrategy : ImputerStrategy\n    The strategy used to impute missing values. Use the classes nested inside `Imputer.Strategy` to specify it.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column, Table\n>>> from safeds.data.tabular.transformation import Imputer\n>>>\n>>> table = Table.from_columns(\n...     [\n...         Column(\"a\", [1, 3, None]),\n...         Column(\"b\", [None, 2, 3]),\n...     ],\n... )\n>>> transformer = Imputer(Imputer.Strategy.Constant(0))\n>>> transformed_table = transformer.fit_and_transform(table)",
        "full_docstring": "Replace missing values with the given strategy.\n\nParameters\n----------\nstrategy : ImputerStrategy\n    The strategy used to impute missing values. Use the classes nested inside `Imputer.Strategy` to specify it.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column, Table\n>>> from safeds.data.tabular.transformation import Imputer\n>>>\n>>> table = Table.from_columns(\n...     [\n...         Column(\"a\", [1, 3, None]),\n...         Column(\"b\", [None, 2, 3]),\n...     ],\n... )\n>>> transformer = Imputer(Imputer.Strategy.Constant(0))\n>>> transformed_table = transformer.fit_and_transform(table)"
      },
      "is_public": true,
      "superclasses": [
        "safeds.data.tabular.transformation._table_transformer.TableTransformer"
      ],
      "constructor": {
        "id": "safeds/data/tabular/transformation/_imputer/Imputer/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/data/tabular/transformation"
        ],
        "parameters": [
          "safeds/data/tabular/transformation/_imputer/Imputer/__init__/self",
          "safeds/data/tabular/transformation/_imputer/Imputer/__init__/strategy"
        ]
      },
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "attributes": [
        "safeds/data/tabular/transformation/_imputer/Imputer/_strategy",
        "safeds/data/tabular/transformation/_imputer/Imputer/_wrapped_transformer",
        "safeds/data/tabular/transformation/_imputer/Imputer/_column_names"
      ],
      "methods": [
        "safeds/data/tabular/transformation/_imputer/Imputer/fit",
        "safeds/data/tabular/transformation/_imputer/Imputer/transform",
        "safeds/data/tabular/transformation/_imputer/Imputer/is_fitted",
        "safeds/data/tabular/transformation/_imputer/Imputer/get_names_of_added_columns",
        "safeds/data/tabular/transformation/_imputer/Imputer/get_names_of_changed_columns",
        "safeds/data/tabular/transformation/_imputer/Imputer/get_names_of_removed_columns"
      ],
      "classes": [
        "safeds/data/tabular/transformation/_imputer/Imputer/Strategy"
      ],
      "type_parameters": []
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/Strategy",
      "name": "Strategy",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "superclasses": [],
      "constructor": null,
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "attributes": [],
      "methods": [],
      "classes": [
        "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Constant",
        "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Mean",
        "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Median",
        "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Mode"
      ],
      "type_parameters": []
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Constant",
      "name": "Constant",
      "docstring": {
        "description": "An imputation strategy for imputing missing data with given constant values.\n\nParameters\n----------\nvalue :\n    The given value to impute missing values.",
        "full_docstring": "An imputation strategy for imputing missing data with given constant values.\n\nParameters\n----------\nvalue :\n    The given value to impute missing values."
      },
      "is_public": true,
      "superclasses": [
        "safeds.data.tabular.typing._imputer_strategy.ImputerStrategy"
      ],
      "constructor": {
        "id": "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Constant/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/data/tabular/transformation"
        ],
        "parameters": [
          "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Constant/__init__/self",
          "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Constant/__init__/value"
        ]
      },
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "attributes": [
        "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Constant/_value"
      ],
      "methods": [
        "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Constant/__str__",
        "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Constant/_augment_imputer"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Mean",
      "name": "Mean",
      "docstring": {
        "description": "An imputation strategy for imputing missing data with mean values.",
        "full_docstring": "An imputation strategy for imputing missing data with mean values."
      },
      "is_public": true,
      "superclasses": [
        "safeds.data.tabular.typing._imputer_strategy.ImputerStrategy"
      ],
      "constructor": null,
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "attributes": [],
      "methods": [
        "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Mean/__str__",
        "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Mean/_augment_imputer"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Median",
      "name": "Median",
      "docstring": {
        "description": "An imputation strategy for imputing missing data with median values.",
        "full_docstring": "An imputation strategy for imputing missing data with median values."
      },
      "is_public": true,
      "superclasses": [
        "safeds.data.tabular.typing._imputer_strategy.ImputerStrategy"
      ],
      "constructor": null,
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "attributes": [],
      "methods": [
        "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Median/__str__",
        "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Median/_augment_imputer"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Mode",
      "name": "Mode",
      "docstring": {
        "description": "An imputation strategy for imputing missing data with mode values. The lowest value will be used if there are multiple values with the same highest count.",
        "full_docstring": "An imputation strategy for imputing missing data with mode values. The lowest value will be used if there are multiple values with the same highest count."
      },
      "is_public": true,
      "superclasses": [
        "safeds.data.tabular.typing._imputer_strategy.ImputerStrategy"
      ],
      "constructor": null,
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "attributes": [],
      "methods": [
        "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Mode/__str__",
        "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Mode/_augment_imputer"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/data/tabular/transformation/_label_encoder/LabelEncoder",
      "name": "LabelEncoder",
      "docstring": {
        "description": "The LabelEncoder encodes one or more given columns into labels.",
        "full_docstring": "The LabelEncoder encodes one or more given columns into labels."
      },
      "is_public": true,
      "superclasses": [
        "safeds.data.tabular.transformation._table_transformer.InvertibleTableTransformer"
      ],
      "constructor": {
        "id": "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/data/tabular/transformation"
        ],
        "parameters": [
          "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/__init__/self"
        ]
      },
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "attributes": [
        "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/_wrapped_transformer",
        "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/_column_names"
      ],
      "methods": [
        "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/fit",
        "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/transform",
        "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/inverse_transform",
        "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/is_fitted",
        "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/get_names_of_added_columns",
        "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/get_names_of_changed_columns",
        "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/get_names_of_removed_columns"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder",
      "name": "OneHotEncoder",
      "docstring": {
        "description": "A way to deal with categorical features that is particularly useful for unordered (i.e. nominal) data.\n\nIt replaces a column with a set of columns, each representing a unique value in the original column. The value of\neach new column is 1 if the original column had that value, and 0 otherwise. Take the following table as an\nexample:\n\n| col1 |\n|------|\n| \"a\"  |\n| \"b\"  |\n| \"c\"  |\n| \"a\"  |\n\nThe one-hot encoding of this table is:\n\n| col1__a | col1__b | col1__c |\n|---------|---------|---------|\n| 1       | 0       | 0       |\n| 0       | 1       | 0       |\n| 0       | 0       | 1       |\n| 1       | 0       | 0       |\n\nThe name \"one-hot\" comes from the fact that each row has exactly one 1 in it, and the rest of the values are 0s.\nOne-hot encoding is closely related to dummy variable / indicator variables, which are used in statistics.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> from safeds.data.tabular.transformation import OneHotEncoder\n>>> table = Table({\"col1\": [\"a\", \"b\", \"c\", \"a\"]})\n>>> transformer = OneHotEncoder()\n>>> transformer.fit_and_transform(table, [\"col1\"])\n   col1__a  col1__b  col1__c\n0      1.0      0.0      0.0\n1      0.0      1.0      0.0\n2      0.0      0.0      1.0\n3      1.0      0.0      0.0",
        "full_docstring": "A way to deal with categorical features that is particularly useful for unordered (i.e. nominal) data.\n\nIt replaces a column with a set of columns, each representing a unique value in the original column. The value of\neach new column is 1 if the original column had that value, and 0 otherwise. Take the following table as an\nexample:\n\n| col1 |\n|------|\n| \"a\"  |\n| \"b\"  |\n| \"c\"  |\n| \"a\"  |\n\nThe one-hot encoding of this table is:\n\n| col1__a | col1__b | col1__c |\n|---------|---------|---------|\n| 1       | 0       | 0       |\n| 0       | 1       | 0       |\n| 0       | 0       | 1       |\n| 1       | 0       | 0       |\n\nThe name \"one-hot\" comes from the fact that each row has exactly one 1 in it, and the rest of the values are 0s.\nOne-hot encoding is closely related to dummy variable / indicator variables, which are used in statistics.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> from safeds.data.tabular.transformation import OneHotEncoder\n>>> table = Table({\"col1\": [\"a\", \"b\", \"c\", \"a\"]})\n>>> transformer = OneHotEncoder()\n>>> transformer.fit_and_transform(table, [\"col1\"])\n   col1__a  col1__b  col1__c\n0      1.0      0.0      0.0\n1      0.0      1.0      0.0\n2      0.0      0.0      1.0\n3      1.0      0.0      0.0"
      },
      "is_public": true,
      "superclasses": [
        "safeds.data.tabular.transformation._table_transformer.InvertibleTableTransformer"
      ],
      "constructor": {
        "id": "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/data/tabular/transformation"
        ],
        "parameters": [
          "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/__init__/self"
        ]
      },
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "attributes": [
        "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/_column_names",
        "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/_value_to_column",
        "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/_value_to_column_nans"
      ],
      "methods": [
        "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/fit",
        "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/transform",
        "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/inverse_transform",
        "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/is_fitted",
        "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/get_names_of_added_columns",
        "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/get_names_of_changed_columns",
        "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/get_names_of_removed_columns"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler",
      "name": "RangeScaler",
      "docstring": {
        "description": "The RangeScaler transforms column values by scaling each value to a given range.\n\nParameters\n----------\nminimum : float\n    The minimum of the new range after the transformation\nmaximum : float\n    The maximum of the new range after the transformation\n\nRaises\n------\nValueError\n    If the given minimum is greater or equal to the given maximum",
        "full_docstring": "The RangeScaler transforms column values by scaling each value to a given range.\n\nParameters\n----------\nminimum : float\n    The minimum of the new range after the transformation\nmaximum : float\n    The maximum of the new range after the transformation\n\nRaises\n------\nValueError\n    If the given minimum is greater or equal to the given maximum"
      },
      "is_public": true,
      "superclasses": [
        "safeds.data.tabular.transformation._table_transformer.InvertibleTableTransformer"
      ],
      "constructor": {
        "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/data/tabular/transformation"
        ],
        "parameters": [
          "safeds/data/tabular/transformation/_range_scaler/RangeScaler/__init__/self",
          "safeds/data/tabular/transformation/_range_scaler/RangeScaler/__init__/minimum",
          "safeds/data/tabular/transformation/_range_scaler/RangeScaler/__init__/maximum"
        ]
      },
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "attributes": [
        "safeds/data/tabular/transformation/_range_scaler/RangeScaler/_column_names",
        "safeds/data/tabular/transformation/_range_scaler/RangeScaler/_wrapped_transformer",
        "safeds/data/tabular/transformation/_range_scaler/RangeScaler/_minimum",
        "safeds/data/tabular/transformation/_range_scaler/RangeScaler/_maximum"
      ],
      "methods": [
        "safeds/data/tabular/transformation/_range_scaler/RangeScaler/fit",
        "safeds/data/tabular/transformation/_range_scaler/RangeScaler/transform",
        "safeds/data/tabular/transformation/_range_scaler/RangeScaler/inverse_transform",
        "safeds/data/tabular/transformation/_range_scaler/RangeScaler/is_fitted",
        "safeds/data/tabular/transformation/_range_scaler/RangeScaler/get_names_of_added_columns",
        "safeds/data/tabular/transformation/_range_scaler/RangeScaler/get_names_of_changed_columns",
        "safeds/data/tabular/transformation/_range_scaler/RangeScaler/get_names_of_removed_columns"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/data/tabular/transformation/_standard_scaler/StandardScaler",
      "name": "StandardScaler",
      "docstring": {
        "description": "The StandardScaler transforms column values to a range by removing the mean and scaling to unit variance.",
        "full_docstring": "The StandardScaler transforms column values to a range by removing the mean and scaling to unit variance."
      },
      "is_public": true,
      "superclasses": [
        "safeds.data.tabular.transformation._table_transformer.InvertibleTableTransformer"
      ],
      "constructor": {
        "id": "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/data/tabular/transformation"
        ],
        "parameters": [
          "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/__init__/self"
        ]
      },
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "attributes": [
        "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/_column_names",
        "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/_wrapped_transformer"
      ],
      "methods": [
        "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/fit",
        "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/transform",
        "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/inverse_transform",
        "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/is_fitted",
        "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/get_names_of_added_columns",
        "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/get_names_of_changed_columns",
        "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/get_names_of_removed_columns"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/InvertibleTableTransformer",
      "name": "InvertibleTableTransformer",
      "docstring": {
        "description": "A `TableTransformer` that can also undo the learned transformation after it has been applied.",
        "full_docstring": "A `TableTransformer` that can also undo the learned transformation after it has been applied."
      },
      "is_public": true,
      "superclasses": [
        "safeds.data.tabular.transformation._table_transformer.TableTransformer"
      ],
      "constructor": null,
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "attributes": [],
      "methods": [
        "safeds/data/tabular/transformation/_table_transformer/InvertibleTableTransformer/fit",
        "safeds/data/tabular/transformation/_table_transformer/InvertibleTableTransformer/inverse_transform"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/TableTransformer",
      "name": "TableTransformer",
      "docstring": {
        "description": "Learn a transformation for a set of columns in a `Table` and transform another `Table` with the same columns.",
        "full_docstring": "Learn a transformation for a set of columns in a `Table` and transform another `Table` with the same columns."
      },
      "is_public": true,
      "superclasses": [
        "abc.ABC"
      ],
      "constructor": null,
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "attributes": [],
      "methods": [
        "safeds/data/tabular/transformation/_table_transformer/TableTransformer/fit",
        "safeds/data/tabular/transformation/_table_transformer/TableTransformer/transform",
        "safeds/data/tabular/transformation/_table_transformer/TableTransformer/get_names_of_added_columns",
        "safeds/data/tabular/transformation/_table_transformer/TableTransformer/get_names_of_changed_columns",
        "safeds/data/tabular/transformation/_table_transformer/TableTransformer/get_names_of_removed_columns",
        "safeds/data/tabular/transformation/_table_transformer/TableTransformer/is_fitted",
        "safeds/data/tabular/transformation/_table_transformer/TableTransformer/fit_and_transform"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Anything",
      "name": "Anything",
      "docstring": {
        "description": "Type for a column that contains anything.\n\nParameters\n----------\nis_nullable : bool\n    Whether the type also allows null values.",
        "full_docstring": "Type for a column that contains anything.\n\nParameters\n----------\nis_nullable : bool\n    Whether the type also allows null values."
      },
      "is_public": true,
      "superclasses": [
        "safeds.data.tabular.typing._column_type.ColumnType"
      ],
      "constructor": {
        "id": "safeds/data/tabular/typing/_column_type/Anything/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/data/tabular/typing"
        ],
        "parameters": [
          "safeds/data/tabular/typing/_column_type/Anything/__init__/self",
          "safeds/data/tabular/typing/_column_type/Anything/__init__/is_nullable"
        ]
      },
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "attributes": [
        "safeds/data/tabular/typing/_column_type/Anything/_is_nullable"
      ],
      "methods": [
        "safeds/data/tabular/typing/_column_type/Anything/__repr__",
        "safeds/data/tabular/typing/_column_type/Anything/is_nullable",
        "safeds/data/tabular/typing/_column_type/Anything/is_numeric",
        "safeds/data/tabular/typing/_column_type/Anything/__mypy-replace"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Boolean",
      "name": "Boolean",
      "docstring": {
        "description": "Type for a column that only contains booleans.\n\nParameters\n----------\nis_nullable : bool\n    Whether the type also allows null values.",
        "full_docstring": "Type for a column that only contains booleans.\n\nParameters\n----------\nis_nullable : bool\n    Whether the type also allows null values."
      },
      "is_public": true,
      "superclasses": [
        "safeds.data.tabular.typing._column_type.ColumnType"
      ],
      "constructor": {
        "id": "safeds/data/tabular/typing/_column_type/Boolean/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/data/tabular/typing"
        ],
        "parameters": [
          "safeds/data/tabular/typing/_column_type/Boolean/__init__/self",
          "safeds/data/tabular/typing/_column_type/Boolean/__init__/is_nullable"
        ]
      },
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "attributes": [
        "safeds/data/tabular/typing/_column_type/Boolean/_is_nullable"
      ],
      "methods": [
        "safeds/data/tabular/typing/_column_type/Boolean/__repr__",
        "safeds/data/tabular/typing/_column_type/Boolean/is_nullable",
        "safeds/data/tabular/typing/_column_type/Boolean/is_numeric",
        "safeds/data/tabular/typing/_column_type/Boolean/__mypy-replace"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/ColumnType",
      "name": "ColumnType",
      "docstring": {
        "description": "Abstract base class for column types.",
        "full_docstring": "Abstract base class for column types."
      },
      "is_public": true,
      "superclasses": [
        "abc.ABC"
      ],
      "constructor": {
        "id": "safeds/data/tabular/typing/_column_type/ColumnType/__init__",
        "name": "__init__",
        "docstring": {
          "description": "Abstract initializer for ColumnType.\n\nParameters\n----------\nis_nullable\n    Whether the columntype is nullable.",
          "full_docstring": "Abstract initializer for ColumnType.\n\nParameters\n----------\nis_nullable\n    Whether the columntype is nullable."
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/data/tabular/typing"
        ],
        "parameters": [
          "safeds/data/tabular/typing/_column_type/ColumnType/__init__/self",
          "safeds/data/tabular/typing/_column_type/ColumnType/__init__/is_nullable"
        ]
      },
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "attributes": [
        "safeds/data/tabular/typing/_column_type/ColumnType/_is_nullable"
      ],
      "methods": [
        "safeds/data/tabular/typing/_column_type/ColumnType/_data_type",
        "safeds/data/tabular/typing/_column_type/ColumnType/is_nullable",
        "safeds/data/tabular/typing/_column_type/ColumnType/is_numeric"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Integer",
      "name": "Integer",
      "docstring": {
        "description": "Type for a column that only contains integers.\n\nParameters\n----------\nis_nullable : bool\n    Whether the type also allows null values.",
        "full_docstring": "Type for a column that only contains integers.\n\nParameters\n----------\nis_nullable : bool\n    Whether the type also allows null values."
      },
      "is_public": true,
      "superclasses": [
        "safeds.data.tabular.typing._column_type.ColumnType"
      ],
      "constructor": {
        "id": "safeds/data/tabular/typing/_column_type/Integer/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/data/tabular/typing"
        ],
        "parameters": [
          "safeds/data/tabular/typing/_column_type/Integer/__init__/self",
          "safeds/data/tabular/typing/_column_type/Integer/__init__/is_nullable"
        ]
      },
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "attributes": [
        "safeds/data/tabular/typing/_column_type/Integer/_is_nullable"
      ],
      "methods": [
        "safeds/data/tabular/typing/_column_type/Integer/__repr__",
        "safeds/data/tabular/typing/_column_type/Integer/is_nullable",
        "safeds/data/tabular/typing/_column_type/Integer/is_numeric",
        "safeds/data/tabular/typing/_column_type/Integer/__mypy-replace"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Nothing",
      "name": "Nothing",
      "docstring": {
        "description": "Type for a column that contains None Values only.",
        "full_docstring": "Type for a column that contains None Values only."
      },
      "is_public": true,
      "superclasses": [
        "safeds.data.tabular.typing._column_type.ColumnType"
      ],
      "constructor": {
        "id": "safeds/data/tabular/typing/_column_type/Nothing/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/data/tabular/typing"
        ],
        "parameters": [
          "safeds/data/tabular/typing/_column_type/Nothing/__init__/self"
        ]
      },
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "attributes": [
        "safeds/data/tabular/typing/_column_type/Nothing/_is_nullable"
      ],
      "methods": [
        "safeds/data/tabular/typing/_column_type/Nothing/__repr__",
        "safeds/data/tabular/typing/_column_type/Nothing/is_nullable",
        "safeds/data/tabular/typing/_column_type/Nothing/is_numeric",
        "safeds/data/tabular/typing/_column_type/Nothing/__mypy-replace"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/RealNumber",
      "name": "RealNumber",
      "docstring": {
        "description": "Type for a column that only contains real numbers.\n\nParameters\n----------\nis_nullable : bool\n    Whether the type also allows null values.",
        "full_docstring": "Type for a column that only contains real numbers.\n\nParameters\n----------\nis_nullable : bool\n    Whether the type also allows null values."
      },
      "is_public": true,
      "superclasses": [
        "safeds.data.tabular.typing._column_type.ColumnType"
      ],
      "constructor": {
        "id": "safeds/data/tabular/typing/_column_type/RealNumber/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/data/tabular/typing"
        ],
        "parameters": [
          "safeds/data/tabular/typing/_column_type/RealNumber/__init__/self",
          "safeds/data/tabular/typing/_column_type/RealNumber/__init__/is_nullable"
        ]
      },
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "attributes": [
        "safeds/data/tabular/typing/_column_type/RealNumber/_is_nullable"
      ],
      "methods": [
        "safeds/data/tabular/typing/_column_type/RealNumber/__repr__",
        "safeds/data/tabular/typing/_column_type/RealNumber/is_nullable",
        "safeds/data/tabular/typing/_column_type/RealNumber/is_numeric",
        "safeds/data/tabular/typing/_column_type/RealNumber/__mypy-replace"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/String",
      "name": "String",
      "docstring": {
        "description": "Type for a column that only contains strings.\n\nParameters\n----------\nis_nullable : bool\n    Whether the type also allows null values.",
        "full_docstring": "Type for a column that only contains strings.\n\nParameters\n----------\nis_nullable : bool\n    Whether the type also allows null values."
      },
      "is_public": true,
      "superclasses": [
        "safeds.data.tabular.typing._column_type.ColumnType"
      ],
      "constructor": {
        "id": "safeds/data/tabular/typing/_column_type/String/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/data/tabular/typing"
        ],
        "parameters": [
          "safeds/data/tabular/typing/_column_type/String/__init__/self",
          "safeds/data/tabular/typing/_column_type/String/__init__/is_nullable"
        ]
      },
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "attributes": [
        "safeds/data/tabular/typing/_column_type/String/_is_nullable"
      ],
      "methods": [
        "safeds/data/tabular/typing/_column_type/String/__repr__",
        "safeds/data/tabular/typing/_column_type/String/is_nullable",
        "safeds/data/tabular/typing/_column_type/String/is_numeric",
        "safeds/data/tabular/typing/_column_type/String/__mypy-replace"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/data/tabular/typing/_imputer_strategy/ImputerStrategy",
      "name": "ImputerStrategy",
      "docstring": {
        "description": "The abstract base class of the different imputation strategies supported by the `Imputer`.\n\nThis class is only needed for type annotations. Use the subclasses nested inside `Imputer.Strategy` instead.",
        "full_docstring": "The abstract base class of the different imputation strategies supported by the `Imputer`.\n\nThis class is only needed for type annotations. Use the subclasses nested inside `Imputer.Strategy` instead."
      },
      "is_public": true,
      "superclasses": [
        "abc.ABC"
      ],
      "constructor": null,
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "attributes": [],
      "methods": [
        "safeds/data/tabular/typing/_imputer_strategy/ImputerStrategy/_augment_imputer"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema",
      "name": "Schema",
      "docstring": {
        "description": "Store column names and corresponding data types for a `Table` or `Row`.\n\nParameters\n----------\nschema : dict[str, ColumnType]\n    Map from column names to data types.\n\nExamples\n--------\n>>> from safeds.data.tabular.typing import Integer, Schema, String\n>>> schema = Schema({\"A\": Integer(), \"B\": String()})",
        "full_docstring": "Store column names and corresponding data types for a `Table` or `Row`.\n\nParameters\n----------\nschema : dict[str, ColumnType]\n    Map from column names to data types.\n\nExamples\n--------\n>>> from safeds.data.tabular.typing import Integer, Schema, String\n>>> schema = Schema({\"A\": Integer(), \"B\": String()})"
      },
      "is_public": true,
      "superclasses": [],
      "constructor": {
        "id": "safeds/data/tabular/typing/_schema/Schema/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/data/tabular/typing"
        ],
        "parameters": [
          "safeds/data/tabular/typing/_schema/Schema/__init__/self",
          "safeds/data/tabular/typing/_schema/Schema/__init__/schema"
        ]
      },
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "attributes": [
        "safeds/data/tabular/typing/_schema/Schema/_schema"
      ],
      "methods": [
        "safeds/data/tabular/typing/_schema/Schema/_from_pandas_dataframe",
        "safeds/data/tabular/typing/_schema/Schema/__hash__",
        "safeds/data/tabular/typing/_schema/Schema/__repr__",
        "safeds/data/tabular/typing/_schema/Schema/__sizeof__",
        "safeds/data/tabular/typing/_schema/Schema/__str__",
        "safeds/data/tabular/typing/_schema/Schema/column_names",
        "safeds/data/tabular/typing/_schema/Schema/has_column",
        "safeds/data/tabular/typing/_schema/Schema/get_column_type",
        "safeds/data/tabular/typing/_schema/Schema/to_dict",
        "safeds/data/tabular/typing/_schema/Schema/merge_multiple_schemas",
        "safeds/data/tabular/typing/_schema/Schema/_repr_markdown_",
        "safeds/data/tabular/typing/_schema/Schema/__mypy-replace"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/exceptions/_data/ColumnIsTargetError",
      "name": "ColumnIsTargetError",
      "docstring": {
        "description": "Exception raised in overriden methods of the Table class when removing tagged Columns from a TaggedTable.",
        "full_docstring": "Exception raised in overriden methods of the Table class when removing tagged Columns from a TaggedTable."
      },
      "is_public": true,
      "superclasses": [
        "safeds.exceptions._data.IllegalSchemaModificationError"
      ],
      "constructor": {
        "id": "safeds/exceptions/_data/ColumnIsTargetError/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [],
        "parameters": [
          "safeds/exceptions/_data/ColumnIsTargetError/__init__/self",
          "safeds/exceptions/_data/ColumnIsTargetError/__init__/column_name"
        ]
      },
      "reexported_by": [],
      "attributes": [],
      "methods": [],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/exceptions/_data/ColumnIsTimeError",
      "name": "ColumnIsTimeError",
      "docstring": {
        "description": "Exception raised in overriden methods of the Table class when removing Time Columns from a TimeSeries.",
        "full_docstring": "Exception raised in overriden methods of the Table class when removing Time Columns from a TimeSeries."
      },
      "is_public": true,
      "superclasses": [
        "safeds.exceptions._data.IllegalSchemaModificationError"
      ],
      "constructor": {
        "id": "safeds/exceptions/_data/ColumnIsTimeError/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [],
        "parameters": [
          "safeds/exceptions/_data/ColumnIsTimeError/__init__/self",
          "safeds/exceptions/_data/ColumnIsTimeError/__init__/column_name"
        ]
      },
      "reexported_by": [],
      "attributes": [],
      "methods": [],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/exceptions/_data/ColumnLengthMismatchError",
      "name": "ColumnLengthMismatchError",
      "docstring": {
        "description": "Exception raised when the lengths of two or more columns do not match.",
        "full_docstring": "Exception raised when the lengths of two or more columns do not match."
      },
      "is_public": true,
      "superclasses": [
        "builtins.Exception"
      ],
      "constructor": {
        "id": "safeds/exceptions/_data/ColumnLengthMismatchError/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [],
        "parameters": [
          "safeds/exceptions/_data/ColumnLengthMismatchError/__init__/self",
          "safeds/exceptions/_data/ColumnLengthMismatchError/__init__/column_info"
        ]
      },
      "reexported_by": [],
      "attributes": [],
      "methods": [],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/exceptions/_data/ColumnSizeError",
      "name": "ColumnSizeError",
      "docstring": {
        "description": "Exception raised for trying to use a column of unsupported size.\n\nParameters\n----------\nexpected_size : str\n    The expected size of the column as an expression (e.g. 2, >0, !=0).\nactual_size : str\n    The actual size of the column as an expression (e.g. 2, >0, !=0).",
        "full_docstring": "Exception raised for trying to use a column of unsupported size.\n\nParameters\n----------\nexpected_size : str\n    The expected size of the column as an expression (e.g. 2, >0, !=0).\nactual_size : str\n    The actual size of the column as an expression (e.g. 2, >0, !=0)."
      },
      "is_public": true,
      "superclasses": [
        "builtins.Exception"
      ],
      "constructor": {
        "id": "safeds/exceptions/_data/ColumnSizeError/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [],
        "parameters": [
          "safeds/exceptions/_data/ColumnSizeError/__init__/self",
          "safeds/exceptions/_data/ColumnSizeError/__init__/expected_size",
          "safeds/exceptions/_data/ColumnSizeError/__init__/actual_size"
        ]
      },
      "reexported_by": [],
      "attributes": [],
      "methods": [],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/exceptions/_data/DuplicateColumnNameError",
      "name": "DuplicateColumnNameError",
      "docstring": {
        "description": "Exception raised for trying to modify a table resulting in a duplicate column name.\n\nParameters\n----------\ncolumn_name : str\n    The name of the column that resulted in a duplicate.",
        "full_docstring": "Exception raised for trying to modify a table resulting in a duplicate column name.\n\nParameters\n----------\ncolumn_name : str\n    The name of the column that resulted in a duplicate."
      },
      "is_public": true,
      "superclasses": [
        "builtins.Exception"
      ],
      "constructor": {
        "id": "safeds/exceptions/_data/DuplicateColumnNameError/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [],
        "parameters": [
          "safeds/exceptions/_data/DuplicateColumnNameError/__init__/self",
          "safeds/exceptions/_data/DuplicateColumnNameError/__init__/column_name"
        ]
      },
      "reexported_by": [],
      "attributes": [],
      "methods": [],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/exceptions/_data/IllegalFormatError",
      "name": "IllegalFormatError",
      "docstring": {
        "description": "Exception raised when a format is not legal.",
        "full_docstring": "Exception raised when a format is not legal."
      },
      "is_public": true,
      "superclasses": [
        "builtins.Exception"
      ],
      "constructor": {
        "id": "safeds/exceptions/_data/IllegalFormatError/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [],
        "parameters": [
          "safeds/exceptions/_data/IllegalFormatError/__init__/self",
          "safeds/exceptions/_data/IllegalFormatError/__init__/formats"
        ]
      },
      "reexported_by": [],
      "attributes": [],
      "methods": [],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/exceptions/_data/IllegalSchemaModificationError",
      "name": "IllegalSchemaModificationError",
      "docstring": {
        "description": "Exception raised when modifying a schema in a way that is inconsistent with the subclass's requirements.",
        "full_docstring": "Exception raised when modifying a schema in a way that is inconsistent with the subclass's requirements."
      },
      "is_public": true,
      "superclasses": [
        "builtins.Exception"
      ],
      "constructor": {
        "id": "safeds/exceptions/_data/IllegalSchemaModificationError/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [],
        "parameters": [
          "safeds/exceptions/_data/IllegalSchemaModificationError/__init__/self",
          "safeds/exceptions/_data/IllegalSchemaModificationError/__init__/msg"
        ]
      },
      "reexported_by": [],
      "attributes": [],
      "methods": [],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/exceptions/_data/IndexOutOfBoundsError",
      "name": "IndexOutOfBoundsError",
      "docstring": {
        "description": "Exception raised for trying to access an element by an index that does not exist in the underlying data.\n\nParameters\n----------\nindex : int | slice\n    The wrongly used index.",
        "full_docstring": "Exception raised for trying to access an element by an index that does not exist in the underlying data.\n\nParameters\n----------\nindex : int | slice\n    The wrongly used index."
      },
      "is_public": true,
      "superclasses": [
        "builtins.IndexError"
      ],
      "constructor": {
        "id": "safeds/exceptions/_data/IndexOutOfBoundsError/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [],
        "parameters": [
          "safeds/exceptions/_data/IndexOutOfBoundsError/__init__/self",
          "safeds/exceptions/_data/IndexOutOfBoundsError/__init__/index"
        ]
      },
      "reexported_by": [],
      "attributes": [],
      "methods": [],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/exceptions/_data/MissingValuesColumnError",
      "name": "MissingValuesColumnError",
      "docstring": {
        "description": "Exception raised for trying to do operations on columns containing missing values.",
        "full_docstring": "Exception raised for trying to do operations on columns containing missing values."
      },
      "is_public": true,
      "superclasses": [
        "builtins.Exception"
      ],
      "constructor": {
        "id": "safeds/exceptions/_data/MissingValuesColumnError/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [],
        "parameters": [
          "safeds/exceptions/_data/MissingValuesColumnError/__init__/self",
          "safeds/exceptions/_data/MissingValuesColumnError/__init__/column_info",
          "safeds/exceptions/_data/MissingValuesColumnError/__init__/help_msg"
        ]
      },
      "reexported_by": [],
      "attributes": [],
      "methods": [],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/exceptions/_data/NonNumericColumnError",
      "name": "NonNumericColumnError",
      "docstring": {
        "description": "Exception raised for trying to do numerical operations on a non-numerical column.",
        "full_docstring": "Exception raised for trying to do numerical operations on a non-numerical column."
      },
      "is_public": true,
      "superclasses": [
        "builtins.Exception"
      ],
      "constructor": {
        "id": "safeds/exceptions/_data/NonNumericColumnError/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [],
        "parameters": [
          "safeds/exceptions/_data/NonNumericColumnError/__init__/self",
          "safeds/exceptions/_data/NonNumericColumnError/__init__/column_info",
          "safeds/exceptions/_data/NonNumericColumnError/__init__/help_msg"
        ]
      },
      "reexported_by": [],
      "attributes": [],
      "methods": [],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/exceptions/_data/TransformerNotFittedError",
      "name": "TransformerNotFittedError",
      "docstring": {
        "description": "Raised when a transformer is used before fitting it.",
        "full_docstring": "Raised when a transformer is used before fitting it."
      },
      "is_public": true,
      "superclasses": [
        "builtins.Exception"
      ],
      "constructor": {
        "id": "safeds/exceptions/_data/TransformerNotFittedError/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [],
        "parameters": [
          "safeds/exceptions/_data/TransformerNotFittedError/__init__/self"
        ]
      },
      "reexported_by": [],
      "attributes": [],
      "methods": [],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/exceptions/_data/UnknownColumnNameError",
      "name": "UnknownColumnNameError",
      "docstring": {
        "description": "Exception raised for trying to access an invalid column name.\n\nParameters\n----------\ncolumn_names : list[str]\n    The name of the column that was tried to be accessed.",
        "full_docstring": "Exception raised for trying to access an invalid column name.\n\nParameters\n----------\ncolumn_names : list[str]\n    The name of the column that was tried to be accessed."
      },
      "is_public": true,
      "superclasses": [
        "builtins.KeyError"
      ],
      "constructor": {
        "id": "safeds/exceptions/_data/UnknownColumnNameError/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [],
        "parameters": [
          "safeds/exceptions/_data/UnknownColumnNameError/__init__/self",
          "safeds/exceptions/_data/UnknownColumnNameError/__init__/column_names",
          "safeds/exceptions/_data/UnknownColumnNameError/__init__/similar_columns"
        ]
      },
      "reexported_by": [],
      "attributes": [],
      "methods": [],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/exceptions/_data/ValueNotPresentWhenFittedError",
      "name": "ValueNotPresentWhenFittedError",
      "docstring": {
        "description": "Exception raised when attempting to one-hot-encode a table containing values not present in the fitting phase.",
        "full_docstring": "Exception raised when attempting to one-hot-encode a table containing values not present in the fitting phase."
      },
      "is_public": true,
      "superclasses": [
        "builtins.Exception"
      ],
      "constructor": {
        "id": "safeds/exceptions/_data/ValueNotPresentWhenFittedError/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [],
        "parameters": [
          "safeds/exceptions/_data/ValueNotPresentWhenFittedError/__init__/self",
          "safeds/exceptions/_data/ValueNotPresentWhenFittedError/__init__/values"
        ]
      },
      "reexported_by": [],
      "attributes": [],
      "methods": [],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/exceptions/_data/WrongFileExtensionError",
      "name": "WrongFileExtensionError",
      "docstring": {
        "description": "Exception raised when the file has the wrong file extension.",
        "full_docstring": "Exception raised when the file has the wrong file extension."
      },
      "is_public": true,
      "superclasses": [
        "builtins.Exception"
      ],
      "constructor": {
        "id": "safeds/exceptions/_data/WrongFileExtensionError/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [],
        "parameters": [
          "safeds/exceptions/_data/WrongFileExtensionError/__init__/self",
          "safeds/exceptions/_data/WrongFileExtensionError/__init__/file",
          "safeds/exceptions/_data/WrongFileExtensionError/__init__/file_extension"
        ]
      },
      "reexported_by": [],
      "attributes": [],
      "methods": [],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/exceptions/_generic/Bound",
      "name": "Bound",
      "docstring": {
        "description": "Abstract base class for (lower or upper) Bounds on a float value.\n\nParameters\n----------\nvalue: float\n    The value of the Bound.",
        "full_docstring": "Abstract base class for (lower or upper) Bounds on a float value.\n\nParameters\n----------\nvalue: float\n    The value of the Bound."
      },
      "is_public": true,
      "superclasses": [
        "abc.ABC"
      ],
      "constructor": {
        "id": "safeds/exceptions/_generic/Bound/__init__",
        "name": "__init__",
        "docstring": {
          "description": "Initialize a Bound.\n\nParameters\n----------\nvalue: float\n    The value of the Bound.\n\nRaises\n------\nValueError\n    If value is nan or if value is +/-inf and the Bound type does not allow for infinite Bounds.",
          "full_docstring": "Initialize a Bound.\n\nParameters\n----------\nvalue: float\n    The value of the Bound.\n\nRaises\n------\nValueError\n    If value is nan or if value is +/-inf and the Bound type does not allow for infinite Bounds."
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [],
        "parameters": [
          "safeds/exceptions/_generic/Bound/__init__/self",
          "safeds/exceptions/_generic/Bound/__init__/value"
        ]
      },
      "reexported_by": [],
      "attributes": [
        "safeds/exceptions/_generic/Bound/_value"
      ],
      "methods": [
        "safeds/exceptions/_generic/Bound/__str__",
        "safeds/exceptions/_generic/Bound/value",
        "safeds/exceptions/_generic/Bound/_str_lower_bound",
        "safeds/exceptions/_generic/Bound/_str_upper_bound",
        "safeds/exceptions/_generic/Bound/_check_lower_bound",
        "safeds/exceptions/_generic/Bound/_check_upper_bound"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/exceptions/_generic/ClosedBound",
      "name": "ClosedBound",
      "docstring": {
        "description": "A closed Bound, i.e. the value on the border belongs to the range.\n\nParameters\n----------\nvalue: float\n    The value of the Bound.",
        "full_docstring": "A closed Bound, i.e. the value on the border belongs to the range.\n\nParameters\n----------\nvalue: float\n    The value of the Bound."
      },
      "is_public": true,
      "superclasses": [
        "safeds.exceptions._generic.Bound"
      ],
      "constructor": {
        "id": "safeds/exceptions/_generic/ClosedBound/__init__",
        "name": "__init__",
        "docstring": {
          "description": "Initialize a ClosedBound.\n\nParameters\n----------\nvalue: float\n    The value of the ClosedBound.\n\nRaises\n------\nValueError\n    If value is nan or if value is +/-inf.",
          "full_docstring": "Initialize a ClosedBound.\n\nParameters\n----------\nvalue: float\n    The value of the ClosedBound.\n\nRaises\n------\nValueError\n    If value is nan or if value is +/-inf."
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [],
        "parameters": [
          "safeds/exceptions/_generic/ClosedBound/__init__/self",
          "safeds/exceptions/_generic/ClosedBound/__init__/value"
        ]
      },
      "reexported_by": [],
      "attributes": [],
      "methods": [
        "safeds/exceptions/_generic/ClosedBound/_str_lower_bound",
        "safeds/exceptions/_generic/ClosedBound/_str_upper_bound",
        "safeds/exceptions/_generic/ClosedBound/_check_lower_bound",
        "safeds/exceptions/_generic/ClosedBound/_check_upper_bound"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/exceptions/_generic/OpenBound",
      "name": "OpenBound",
      "docstring": {
        "description": "An open Bound, i.e. the value on the border does not belong to the range.\n\nParameters\n----------\nvalue: float\n    The value of the OpenBound.",
        "full_docstring": "An open Bound, i.e. the value on the border does not belong to the range.\n\nParameters\n----------\nvalue: float\n    The value of the OpenBound."
      },
      "is_public": true,
      "superclasses": [
        "safeds.exceptions._generic.Bound"
      ],
      "constructor": {
        "id": "safeds/exceptions/_generic/OpenBound/__init__",
        "name": "__init__",
        "docstring": {
          "description": "Initialize an OpenBound.\n\nParameters\n----------\nvalue: float\n    The value of the OpenBound.\n\nRaises\n------\nValueError\n    If value is nan.",
          "full_docstring": "Initialize an OpenBound.\n\nParameters\n----------\nvalue: float\n    The value of the OpenBound.\n\nRaises\n------\nValueError\n    If value is nan."
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [],
        "parameters": [
          "safeds/exceptions/_generic/OpenBound/__init__/self",
          "safeds/exceptions/_generic/OpenBound/__init__/value"
        ]
      },
      "reexported_by": [],
      "attributes": [],
      "methods": [
        "safeds/exceptions/_generic/OpenBound/__str__",
        "safeds/exceptions/_generic/OpenBound/_str_lower_bound",
        "safeds/exceptions/_generic/OpenBound/_str_upper_bound",
        "safeds/exceptions/_generic/OpenBound/_check_lower_bound",
        "safeds/exceptions/_generic/OpenBound/_check_upper_bound"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/exceptions/_generic/OutOfBoundsError",
      "name": "OutOfBoundsError",
      "docstring": {
        "description": "A generic exception that can be used to signal that a (float) value is outside its expected range.\n\nParameters\n----------\nactual: float\n    The actual value that is outside its expected range.\nname: str | None\n    The name of the offending variable.\nlower_bound: Bound | None\n    The lower bound of the expected range. Use None if there is no lower Bound.\nupper_bound: Bound | None\n    The upper bound of the expected range. Use None if there is no upper Bound.",
        "full_docstring": "A generic exception that can be used to signal that a (float) value is outside its expected range.\n\nParameters\n----------\nactual: float\n    The actual value that is outside its expected range.\nname: str | None\n    The name of the offending variable.\nlower_bound: Bound | None\n    The lower bound of the expected range. Use None if there is no lower Bound.\nupper_bound: Bound | None\n    The upper bound of the expected range. Use None if there is no upper Bound."
      },
      "is_public": true,
      "superclasses": [
        "builtins.ValueError"
      ],
      "constructor": {
        "id": "safeds/exceptions/_generic/OutOfBoundsError/__init__",
        "name": "__init__",
        "docstring": {
          "description": "Initialize an OutOfBoundsError.\n\nParameters\n----------\nactual: float\n    The actual value that is outside its expected range.\nname: str | None\n    The name of the offending variable.\nlower_bound: Bound | None\n    The lower bound of the expected range. Use None if there is no lower Bound.\nupper_bound: Bound | None\n    The upper bound of the expected range. Use None if there is no upper Bound.\n\nRaises\n------\nValueError\n    * If one of the given Bounds is +/-inf. (For infinite Bounds, pass None instead.)\n    * If one of the given Bounds is nan.\n    * If upper_bound < lower_bound.\n    * If actual does not lie outside the given interval.\n    * If actual is not a real number.",
          "full_docstring": "Initialize an OutOfBoundsError.\n\nParameters\n----------\nactual: float\n    The actual value that is outside its expected range.\nname: str | None\n    The name of the offending variable.\nlower_bound: Bound | None\n    The lower bound of the expected range. Use None if there is no lower Bound.\nupper_bound: Bound | None\n    The upper bound of the expected range. Use None if there is no upper Bound.\n\nRaises\n------\nValueError\n    * If one of the given Bounds is +/-inf. (For infinite Bounds, pass None instead.)\n    * If one of the given Bounds is nan.\n    * If upper_bound < lower_bound.\n    * If actual does not lie outside the given interval.\n    * If actual is not a real number."
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [],
        "parameters": [
          "safeds/exceptions/_generic/OutOfBoundsError/__init__/self",
          "safeds/exceptions/_generic/OutOfBoundsError/__init__/actual",
          "safeds/exceptions/_generic/OutOfBoundsError/__init__/name",
          "safeds/exceptions/_generic/OutOfBoundsError/__init__/lower_bound",
          "safeds/exceptions/_generic/OutOfBoundsError/__init__/upper_bound"
        ]
      },
      "reexported_by": [],
      "attributes": [],
      "methods": [],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/exceptions/_ml/DatasetContainsTargetError",
      "name": "DatasetContainsTargetError",
      "docstring": {
        "description": "Raised when a dataset contains the target column already.\n\nParameters\n----------\ntarget_name: str\n    The name of the target column.",
        "full_docstring": "Raised when a dataset contains the target column already.\n\nParameters\n----------\ntarget_name: str\n    The name of the target column."
      },
      "is_public": true,
      "superclasses": [
        "builtins.ValueError"
      ],
      "constructor": {
        "id": "safeds/exceptions/_ml/DatasetContainsTargetError/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [],
        "parameters": [
          "safeds/exceptions/_ml/DatasetContainsTargetError/__init__/self",
          "safeds/exceptions/_ml/DatasetContainsTargetError/__init__/target_name"
        ]
      },
      "reexported_by": [],
      "attributes": [],
      "methods": [],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/exceptions/_ml/DatasetMissesDataError",
      "name": "DatasetMissesDataError",
      "docstring": {
        "description": "Raised when a dataset contains no rows.",
        "full_docstring": "Raised when a dataset contains no rows."
      },
      "is_public": true,
      "superclasses": [
        "builtins.ValueError"
      ],
      "constructor": {
        "id": "safeds/exceptions/_ml/DatasetMissesDataError/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [],
        "parameters": [
          "safeds/exceptions/_ml/DatasetMissesDataError/__init__/self"
        ]
      },
      "reexported_by": [],
      "attributes": [],
      "methods": [],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/exceptions/_ml/DatasetMissesFeaturesError",
      "name": "DatasetMissesFeaturesError",
      "docstring": {
        "description": "Raised when a dataset misses feature columns.\n\nParameters\n----------\nmissing_feature_names: list[str]\n    The names of the missing feature columns.",
        "full_docstring": "Raised when a dataset misses feature columns.\n\nParameters\n----------\nmissing_feature_names: list[str]\n    The names of the missing feature columns."
      },
      "is_public": true,
      "superclasses": [
        "builtins.ValueError"
      ],
      "constructor": {
        "id": "safeds/exceptions/_ml/DatasetMissesFeaturesError/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [],
        "parameters": [
          "safeds/exceptions/_ml/DatasetMissesFeaturesError/__init__/self",
          "safeds/exceptions/_ml/DatasetMissesFeaturesError/__init__/missing_feature_names"
        ]
      },
      "reexported_by": [],
      "attributes": [],
      "methods": [],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/exceptions/_ml/LearningError",
      "name": "LearningError",
      "docstring": {
        "description": "Raised when an error occurred while training a model.\n\nParameters\n----------\nreason: str\n    The reason for the error.",
        "full_docstring": "Raised when an error occurred while training a model.\n\nParameters\n----------\nreason: str\n    The reason for the error."
      },
      "is_public": true,
      "superclasses": [
        "builtins.Exception"
      ],
      "constructor": {
        "id": "safeds/exceptions/_ml/LearningError/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [],
        "parameters": [
          "safeds/exceptions/_ml/LearningError/__init__/self",
          "safeds/exceptions/_ml/LearningError/__init__/reason"
        ]
      },
      "reexported_by": [],
      "attributes": [],
      "methods": [],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/exceptions/_ml/ModelNotFittedError",
      "name": "ModelNotFittedError",
      "docstring": {
        "description": "Raised when a model is used before fitting it.",
        "full_docstring": "Raised when a model is used before fitting it."
      },
      "is_public": true,
      "superclasses": [
        "builtins.Exception"
      ],
      "constructor": {
        "id": "safeds/exceptions/_ml/ModelNotFittedError/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [],
        "parameters": [
          "safeds/exceptions/_ml/ModelNotFittedError/__init__/self"
        ]
      },
      "reexported_by": [],
      "attributes": [],
      "methods": [],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/exceptions/_ml/PredictionError",
      "name": "PredictionError",
      "docstring": {
        "description": "Raised when an error occurred while prediction a target vector using a model.\n\nParameters\n----------\nreason: str\n    The reason for the error.",
        "full_docstring": "Raised when an error occurred while prediction a target vector using a model.\n\nParameters\n----------\nreason: str\n    The reason for the error."
      },
      "is_public": true,
      "superclasses": [
        "builtins.Exception"
      ],
      "constructor": {
        "id": "safeds/exceptions/_ml/PredictionError/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [],
        "parameters": [
          "safeds/exceptions/_ml/PredictionError/__init__/self",
          "safeds/exceptions/_ml/PredictionError/__init__/reason"
        ]
      },
      "reexported_by": [],
      "attributes": [],
      "methods": [],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/exceptions/_ml/UntaggedTableError",
      "name": "UntaggedTableError",
      "docstring": {
        "description": "Raised when an untagged table is used instead of a TaggedTable in a regression or classification.",
        "full_docstring": "Raised when an untagged table is used instead of a TaggedTable in a regression or classification."
      },
      "is_public": true,
      "superclasses": [
        "builtins.Exception"
      ],
      "constructor": {
        "id": "safeds/exceptions/_ml/UntaggedTableError/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [],
        "parameters": [
          "safeds/exceptions/_ml/UntaggedTableError/__init__/self"
        ]
      },
      "reexported_by": [],
      "attributes": [],
      "methods": [],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost",
      "name": "AdaBoost",
      "docstring": {
        "description": "Ada Boost classification.\n\nParameters\n----------\nlearner: Classifier | None\n    The learner from which the boosted ensemble is built.\nmaximum_number_of_learners: int\n    The maximum number of learners at which boosting is terminated. In case of perfect fit, the learning procedure\n    is stopped early. Has to be greater than 0.\nlearning_rate : float\n    Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution\n    of each classifier. Has to be greater than 0.\n\nRaises\n------\nOutOfBoundsError\n    If `maximum_number_of_learners` or `learning_rate` are less than or equal to 0.",
        "full_docstring": "Ada Boost classification.\n\nParameters\n----------\nlearner: Classifier | None\n    The learner from which the boosted ensemble is built.\nmaximum_number_of_learners: int\n    The maximum number of learners at which boosting is terminated. In case of perfect fit, the learning procedure\n    is stopped early. Has to be greater than 0.\nlearning_rate : float\n    Weight applied to each classifier at each boosting iteration. A higher learning rate increases the contribution\n    of each classifier. Has to be greater than 0.\n\nRaises\n------\nOutOfBoundsError\n    If `maximum_number_of_learners` or `learning_rate` are less than or equal to 0."
      },
      "is_public": true,
      "superclasses": [
        "safeds.ml.classical.classification._classifier.Classifier"
      ],
      "constructor": {
        "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/ml/classical/regression",
          "safeds/ml/classical/classification"
        ],
        "parameters": [
          "safeds/ml/classical/classification/_ada_boost/AdaBoost/__init__/self",
          "safeds/ml/classical/classification/_ada_boost/AdaBoost/__init__/learner",
          "safeds/ml/classical/classification/_ada_boost/AdaBoost/__init__/maximum_number_of_learners",
          "safeds/ml/classical/classification/_ada_boost/AdaBoost/__init__/learning_rate"
        ]
      },
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "attributes": [
        "safeds/ml/classical/classification/_ada_boost/AdaBoost/_learner",
        "safeds/ml/classical/classification/_ada_boost/AdaBoost/_maximum_number_of_learners",
        "safeds/ml/classical/classification/_ada_boost/AdaBoost/_learning_rate",
        "safeds/ml/classical/classification/_ada_boost/AdaBoost/_wrapped_classifier",
        "safeds/ml/classical/classification/_ada_boost/AdaBoost/_feature_names",
        "safeds/ml/classical/classification/_ada_boost/AdaBoost/_target_name"
      ],
      "methods": [
        "safeds/ml/classical/classification/_ada_boost/AdaBoost/learner",
        "safeds/ml/classical/classification/_ada_boost/AdaBoost/maximum_number_of_learners",
        "safeds/ml/classical/classification/_ada_boost/AdaBoost/learning_rate",
        "safeds/ml/classical/classification/_ada_boost/AdaBoost/fit",
        "safeds/ml/classical/classification/_ada_boost/AdaBoost/predict",
        "safeds/ml/classical/classification/_ada_boost/AdaBoost/is_fitted",
        "safeds/ml/classical/classification/_ada_boost/AdaBoost/_get_sklearn_classifier"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/ml/classical/classification/_classifier/Classifier",
      "name": "Classifier",
      "docstring": {
        "description": "Abstract base class for all classifiers.",
        "full_docstring": "Abstract base class for all classifiers."
      },
      "is_public": true,
      "superclasses": [
        "abc.ABC"
      ],
      "constructor": null,
      "reexported_by": [
        "safeds/ml/classical/classification"
      ],
      "attributes": [],
      "methods": [
        "safeds/ml/classical/classification/_classifier/Classifier/fit",
        "safeds/ml/classical/classification/_classifier/Classifier/predict",
        "safeds/ml/classical/classification/_classifier/Classifier/is_fitted",
        "safeds/ml/classical/classification/_classifier/Classifier/_get_sklearn_classifier",
        "safeds/ml/classical/classification/_classifier/Classifier/accuracy",
        "safeds/ml/classical/classification/_classifier/Classifier/precision",
        "safeds/ml/classical/classification/_classifier/Classifier/recall",
        "safeds/ml/classical/classification/_classifier/Classifier/f1_score"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/ml/classical/classification/_decision_tree/DecisionTree",
      "name": "DecisionTree",
      "docstring": {
        "description": "Decision tree classification.",
        "full_docstring": "Decision tree classification."
      },
      "is_public": true,
      "superclasses": [
        "safeds.ml.classical.classification._classifier.Classifier"
      ],
      "constructor": {
        "id": "safeds/ml/classical/classification/_decision_tree/DecisionTree/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/ml/classical/regression",
          "safeds/ml/classical/classification"
        ],
        "parameters": [
          "safeds/ml/classical/classification/_decision_tree/DecisionTree/__init__/self"
        ]
      },
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "attributes": [
        "safeds/ml/classical/classification/_decision_tree/DecisionTree/_wrapped_classifier",
        "safeds/ml/classical/classification/_decision_tree/DecisionTree/_feature_names",
        "safeds/ml/classical/classification/_decision_tree/DecisionTree/_target_name"
      ],
      "methods": [
        "safeds/ml/classical/classification/_decision_tree/DecisionTree/fit",
        "safeds/ml/classical/classification/_decision_tree/DecisionTree/predict",
        "safeds/ml/classical/classification/_decision_tree/DecisionTree/is_fitted",
        "safeds/ml/classical/classification/_decision_tree/DecisionTree/_get_sklearn_classifier"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting",
      "name": "GradientBoosting",
      "docstring": {
        "description": "Gradient boosting classification.\n\nParameters\n----------\nnumber_of_trees: int\n    The number of boosting stages to perform. Gradient boosting is fairly robust to over-fitting so a large\n    number usually results in better performance.\nlearning_rate : float\n    The larger the value, the more the model is influenced by each additional tree. If the learning rate is too\n    low, the model might underfit. If the learning rate is too high, the model might overfit.\n\nRaises\n------\nOutOfBoundsError\n    If `number_of_trees` or `learning_rate` is less than or equal to 0.",
        "full_docstring": "Gradient boosting classification.\n\nParameters\n----------\nnumber_of_trees: int\n    The number of boosting stages to perform. Gradient boosting is fairly robust to over-fitting so a large\n    number usually results in better performance.\nlearning_rate : float\n    The larger the value, the more the model is influenced by each additional tree. If the learning rate is too\n    low, the model might underfit. If the learning rate is too high, the model might overfit.\n\nRaises\n------\nOutOfBoundsError\n    If `number_of_trees` or `learning_rate` is less than or equal to 0."
      },
      "is_public": true,
      "superclasses": [
        "safeds.ml.classical.classification._classifier.Classifier"
      ],
      "constructor": {
        "id": "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/ml/classical/regression",
          "safeds/ml/classical/classification"
        ],
        "parameters": [
          "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/__init__/self",
          "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/__init__/number_of_trees",
          "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/__init__/learning_rate"
        ]
      },
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "attributes": [
        "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/_number_of_trees",
        "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/_learning_rate",
        "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/_wrapped_classifier",
        "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/_feature_names",
        "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/_target_name"
      ],
      "methods": [
        "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/number_of_trees",
        "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/learning_rate",
        "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/fit",
        "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/predict",
        "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/is_fitted",
        "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/_get_sklearn_classifier"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors",
      "name": "KNearestNeighbors",
      "docstring": {
        "description": "K-nearest-neighbors classification.\n\nParameters\n----------\nnumber_of_neighbors : int\n    The number of neighbors to use for interpolation. Has to be greater than 0 (validated in the constructor) and\n    less than or equal to the sample size (validated when calling `fit`).\n\nRaises\n------\nOutOfBoundsError\n    If `number_of_neighbors` is less than 1.",
        "full_docstring": "K-nearest-neighbors classification.\n\nParameters\n----------\nnumber_of_neighbors : int\n    The number of neighbors to use for interpolation. Has to be greater than 0 (validated in the constructor) and\n    less than or equal to the sample size (validated when calling `fit`).\n\nRaises\n------\nOutOfBoundsError\n    If `number_of_neighbors` is less than 1."
      },
      "is_public": true,
      "superclasses": [
        "safeds.ml.classical.classification._classifier.Classifier"
      ],
      "constructor": {
        "id": "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/ml/classical/regression",
          "safeds/ml/classical/classification"
        ],
        "parameters": [
          "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/__init__/self",
          "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/__init__/number_of_neighbors"
        ]
      },
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "attributes": [
        "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/_number_of_neighbors",
        "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/_wrapped_classifier",
        "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/_feature_names",
        "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/_target_name"
      ],
      "methods": [
        "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/number_of_neighbors",
        "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/fit",
        "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/predict",
        "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/is_fitted",
        "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/_get_sklearn_classifier"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/ml/classical/classification/_logistic_regression/LogisticRegression",
      "name": "LogisticRegression",
      "docstring": {
        "description": "Regularized logistic regression.",
        "full_docstring": "Regularized logistic regression."
      },
      "is_public": true,
      "superclasses": [
        "safeds.ml.classical.classification._classifier.Classifier"
      ],
      "constructor": {
        "id": "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/ml/classical/classification"
        ],
        "parameters": [
          "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/__init__/self"
        ]
      },
      "reexported_by": [
        "safeds/ml/classical/classification"
      ],
      "attributes": [
        "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/_wrapped_classifier",
        "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/_feature_names",
        "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/_target_name"
      ],
      "methods": [
        "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/fit",
        "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/predict",
        "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/is_fitted",
        "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/_get_sklearn_classifier"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/ml/classical/classification/_random_forest/RandomForest",
      "name": "RandomForest",
      "docstring": {
        "description": "Random forest classification.\n\nParameters\n----------\nnumber_of_trees : int\n    The number of trees to be used in the random forest. Has to be greater than 0.\n\nRaises\n------\nOutOfBoundsError\n    If `number_of_trees` is less than 1.",
        "full_docstring": "Random forest classification.\n\nParameters\n----------\nnumber_of_trees : int\n    The number of trees to be used in the random forest. Has to be greater than 0.\n\nRaises\n------\nOutOfBoundsError\n    If `number_of_trees` is less than 1."
      },
      "is_public": true,
      "superclasses": [
        "safeds.ml.classical.classification._classifier.Classifier"
      ],
      "constructor": {
        "id": "safeds/ml/classical/classification/_random_forest/RandomForest/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/ml/classical/regression",
          "safeds/ml/classical/classification"
        ],
        "parameters": [
          "safeds/ml/classical/classification/_random_forest/RandomForest/__init__/self",
          "safeds/ml/classical/classification/_random_forest/RandomForest/__init__/number_of_trees"
        ]
      },
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "attributes": [
        "safeds/ml/classical/classification/_random_forest/RandomForest/_number_of_trees",
        "safeds/ml/classical/classification/_random_forest/RandomForest/_wrapped_classifier",
        "safeds/ml/classical/classification/_random_forest/RandomForest/_feature_names",
        "safeds/ml/classical/classification/_random_forest/RandomForest/_target_name"
      ],
      "methods": [
        "safeds/ml/classical/classification/_random_forest/RandomForest/number_of_trees",
        "safeds/ml/classical/classification/_random_forest/RandomForest/fit",
        "safeds/ml/classical/classification/_random_forest/RandomForest/predict",
        "safeds/ml/classical/classification/_random_forest/RandomForest/is_fitted",
        "safeds/ml/classical/classification/_random_forest/RandomForest/_get_sklearn_classifier"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine",
      "name": "SupportVectorMachine",
      "docstring": {
        "description": "Support vector machine.\n\nParameters\n----------\nc: float\n    The strength of regularization. Must be strictly positive.\nkernel: SupportVectorMachineKernel | None\n    The type of kernel to be used. Defaults to None.\n\nRaises\n------\nOutOfBoundsError\n    If `c` is less than or equal to 0.",
        "full_docstring": "Support vector machine.\n\nParameters\n----------\nc: float\n    The strength of regularization. Must be strictly positive.\nkernel: SupportVectorMachineKernel | None\n    The type of kernel to be used. Defaults to None.\n\nRaises\n------\nOutOfBoundsError\n    If `c` is less than or equal to 0."
      },
      "is_public": true,
      "superclasses": [
        "safeds.ml.classical.classification._classifier.Classifier"
      ],
      "constructor": {
        "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/ml/classical/regression",
          "safeds/ml/classical/classification"
        ],
        "parameters": [
          "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/__init__/self",
          "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/__init__/c",
          "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/__init__/kernel"
        ]
      },
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "attributes": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/_wrapped_classifier",
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/_feature_names",
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/_target_name",
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/_c",
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/_kernel"
      ],
      "methods": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/c",
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/kernel",
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/_get_kernel_name",
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/fit",
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/predict",
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/is_fitted",
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/_get_sklearn_classifier"
      ],
      "classes": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel"
      ],
      "type_parameters": []
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel",
      "name": "Kernel",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "superclasses": [],
      "constructor": null,
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "attributes": [],
      "methods": [],
      "classes": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/Linear",
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial",
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/Sigmoid",
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/RadialBasisFunction"
      ],
      "type_parameters": []
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/Linear",
      "name": "Linear",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "superclasses": [
        "safeds.ml.classical.classification._support_vector_machine.SupportVectorMachineKernel"
      ],
      "constructor": null,
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "attributes": [],
      "methods": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/Linear/get_sklearn_kernel"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial",
      "name": "Polynomial",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "superclasses": [
        "safeds.ml.classical.classification._support_vector_machine.SupportVectorMachineKernel"
      ],
      "constructor": {
        "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/ml/classical/regression",
          "safeds/ml/classical/classification"
        ],
        "parameters": [
          "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial/__init__/self",
          "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial/__init__/degree"
        ]
      },
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "attributes": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial/_degree"
      ],
      "methods": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial/get_sklearn_kernel"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/RadialBasisFunction",
      "name": "RadialBasisFunction",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "superclasses": [
        "safeds.ml.classical.classification._support_vector_machine.SupportVectorMachineKernel"
      ],
      "constructor": null,
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "attributes": [],
      "methods": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/RadialBasisFunction/get_sklearn_kernel"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/Sigmoid",
      "name": "Sigmoid",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "superclasses": [
        "safeds.ml.classical.classification._support_vector_machine.SupportVectorMachineKernel"
      ],
      "constructor": null,
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "attributes": [],
      "methods": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/Sigmoid/get_sklearn_kernel"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachineKernel",
      "name": "SupportVectorMachineKernel",
      "docstring": {
        "description": "The abstract base class of the different subclasses supported by the `Kernel`.",
        "full_docstring": "The abstract base class of the different subclasses supported by the `Kernel`."
      },
      "is_public": true,
      "superclasses": [
        "abc.ABC"
      ],
      "constructor": null,
      "reexported_by": [],
      "attributes": [],
      "methods": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachineKernel/get_sklearn_kernel"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost",
      "name": "AdaBoost",
      "docstring": {
        "description": "Ada Boost regression.\n\nParameters\n----------\nlearner: Regressor | None\n    The learner from which the boosted ensemble is built.\nmaximum_number_of_learners: int\n    The maximum number of learners at which boosting is terminated. In case of perfect fit, the learning procedure\n    is stopped early. Has to be greater than 0.\nlearning_rate : float\n    Weight applied to each regressor at each boosting iteration. A higher learning rate increases the contribution\n    of each regressor. Has to be greater than 0.\n\nRaises\n------\nOutOfBoundsError\n    If `maximum_number_of_learners` or `learning_rate` are less than or equal to 0.",
        "full_docstring": "Ada Boost regression.\n\nParameters\n----------\nlearner: Regressor | None\n    The learner from which the boosted ensemble is built.\nmaximum_number_of_learners: int\n    The maximum number of learners at which boosting is terminated. In case of perfect fit, the learning procedure\n    is stopped early. Has to be greater than 0.\nlearning_rate : float\n    Weight applied to each regressor at each boosting iteration. A higher learning rate increases the contribution\n    of each regressor. Has to be greater than 0.\n\nRaises\n------\nOutOfBoundsError\n    If `maximum_number_of_learners` or `learning_rate` are less than or equal to 0."
      },
      "is_public": true,
      "superclasses": [
        "safeds.ml.classical.regression._regressor.Regressor"
      ],
      "constructor": {
        "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/ml/classical/regression",
          "safeds/ml/classical/classification"
        ],
        "parameters": [
          "safeds/ml/classical/regression/_ada_boost/AdaBoost/__init__/self",
          "safeds/ml/classical/regression/_ada_boost/AdaBoost/__init__/learner",
          "safeds/ml/classical/regression/_ada_boost/AdaBoost/__init__/maximum_number_of_learners",
          "safeds/ml/classical/regression/_ada_boost/AdaBoost/__init__/learning_rate"
        ]
      },
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "attributes": [
        "safeds/ml/classical/regression/_ada_boost/AdaBoost/_learner",
        "safeds/ml/classical/regression/_ada_boost/AdaBoost/_maximum_number_of_learners",
        "safeds/ml/classical/regression/_ada_boost/AdaBoost/_learning_rate",
        "safeds/ml/classical/regression/_ada_boost/AdaBoost/_wrapped_regressor",
        "safeds/ml/classical/regression/_ada_boost/AdaBoost/_feature_names",
        "safeds/ml/classical/regression/_ada_boost/AdaBoost/_target_name"
      ],
      "methods": [
        "safeds/ml/classical/regression/_ada_boost/AdaBoost/learner",
        "safeds/ml/classical/regression/_ada_boost/AdaBoost/maximum_number_of_learners",
        "safeds/ml/classical/regression/_ada_boost/AdaBoost/learning_rate",
        "safeds/ml/classical/regression/_ada_boost/AdaBoost/fit",
        "safeds/ml/classical/regression/_ada_boost/AdaBoost/predict",
        "safeds/ml/classical/regression/_ada_boost/AdaBoost/is_fitted",
        "safeds/ml/classical/regression/_ada_boost/AdaBoost/_get_sklearn_regressor"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/ml/classical/regression/_decision_tree/DecisionTree",
      "name": "DecisionTree",
      "docstring": {
        "description": "Decision tree regression.",
        "full_docstring": "Decision tree regression."
      },
      "is_public": true,
      "superclasses": [
        "safeds.ml.classical.regression._regressor.Regressor"
      ],
      "constructor": {
        "id": "safeds/ml/classical/regression/_decision_tree/DecisionTree/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/ml/classical/regression",
          "safeds/ml/classical/classification"
        ],
        "parameters": [
          "safeds/ml/classical/regression/_decision_tree/DecisionTree/__init__/self"
        ]
      },
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "attributes": [
        "safeds/ml/classical/regression/_decision_tree/DecisionTree/_wrapped_regressor",
        "safeds/ml/classical/regression/_decision_tree/DecisionTree/_feature_names",
        "safeds/ml/classical/regression/_decision_tree/DecisionTree/_target_name"
      ],
      "methods": [
        "safeds/ml/classical/regression/_decision_tree/DecisionTree/fit",
        "safeds/ml/classical/regression/_decision_tree/DecisionTree/predict",
        "safeds/ml/classical/regression/_decision_tree/DecisionTree/is_fitted",
        "safeds/ml/classical/regression/_decision_tree/DecisionTree/_get_sklearn_regressor"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression",
      "name": "ElasticNetRegression",
      "docstring": {
        "description": "Elastic net regression.\n\nParameters\n----------\nalpha : float\n    Controls the regularization of the model. The higher the value, the more regularized it becomes.\nlasso_ratio: float\n    Number between 0 and 1 that controls the ratio between Lasso and Ridge regularization. If 0, only Ridge\n    regularization is used. If 1, only Lasso regularization is used.\n\nRaises\n------\nOutOfBoundsError\n    If `alpha` is negative or `lasso_ratio` is not between 0 and 1.",
        "full_docstring": "Elastic net regression.\n\nParameters\n----------\nalpha : float\n    Controls the regularization of the model. The higher the value, the more regularized it becomes.\nlasso_ratio: float\n    Number between 0 and 1 that controls the ratio between Lasso and Ridge regularization. If 0, only Ridge\n    regularization is used. If 1, only Lasso regularization is used.\n\nRaises\n------\nOutOfBoundsError\n    If `alpha` is negative or `lasso_ratio` is not between 0 and 1."
      },
      "is_public": true,
      "superclasses": [
        "safeds.ml.classical.regression._regressor.Regressor"
      ],
      "constructor": {
        "id": "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/ml/classical/regression"
        ],
        "parameters": [
          "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/__init__/self",
          "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/__init__/alpha",
          "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/__init__/lasso_ratio"
        ]
      },
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "attributes": [
        "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/_alpha",
        "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/_lasso_ratio",
        "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/_wrapped_regressor",
        "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/_feature_names",
        "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/_target_name"
      ],
      "methods": [
        "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/alpha",
        "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/lasso_ratio",
        "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/fit",
        "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/predict",
        "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/is_fitted",
        "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/_get_sklearn_regressor"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting",
      "name": "GradientBoosting",
      "docstring": {
        "description": "Gradient boosting regression.\n\nParameters\n----------\nnumber_of_trees: int\n    The number of boosting stages to perform. Gradient boosting is fairly robust to over-fitting so a large\n    number usually results in better performance.\nlearning_rate : float\n    The larger the value, the more the model is influenced by each additional tree. If the learning rate is too\n    low, the model might underfit. If the learning rate is too high, the model might overfit.\n\nRaises\n------\nOutOfBoundsError\n    If `number_of_trees` or `learning_rate` are less than or equal to 0.",
        "full_docstring": "Gradient boosting regression.\n\nParameters\n----------\nnumber_of_trees: int\n    The number of boosting stages to perform. Gradient boosting is fairly robust to over-fitting so a large\n    number usually results in better performance.\nlearning_rate : float\n    The larger the value, the more the model is influenced by each additional tree. If the learning rate is too\n    low, the model might underfit. If the learning rate is too high, the model might overfit.\n\nRaises\n------\nOutOfBoundsError\n    If `number_of_trees` or `learning_rate` are less than or equal to 0."
      },
      "is_public": true,
      "superclasses": [
        "safeds.ml.classical.regression._regressor.Regressor"
      ],
      "constructor": {
        "id": "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/ml/classical/regression",
          "safeds/ml/classical/classification"
        ],
        "parameters": [
          "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/__init__/self",
          "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/__init__/number_of_trees",
          "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/__init__/learning_rate"
        ]
      },
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "attributes": [
        "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/_number_of_trees",
        "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/_learning_rate",
        "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/_wrapped_regressor",
        "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/_feature_names",
        "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/_target_name"
      ],
      "methods": [
        "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/number_of_trees",
        "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/learning_rate",
        "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/fit",
        "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/predict",
        "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/is_fitted",
        "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/_get_sklearn_regressor"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors",
      "name": "KNearestNeighbors",
      "docstring": {
        "description": "K-nearest-neighbors regression.\n\nParameters\n----------\nnumber_of_neighbors : int\n    The number of neighbors to use for interpolation. Has to be greater than 0 (validated in the constructor) and\n    less than or equal to the sample size (validated when calling `fit`).\n\nRaises\n------\nOutOfBoundsError\n    If `number_of_neighbors` is less than 1.",
        "full_docstring": "K-nearest-neighbors regression.\n\nParameters\n----------\nnumber_of_neighbors : int\n    The number of neighbors to use for interpolation. Has to be greater than 0 (validated in the constructor) and\n    less than or equal to the sample size (validated when calling `fit`).\n\nRaises\n------\nOutOfBoundsError\n    If `number_of_neighbors` is less than 1."
      },
      "is_public": true,
      "superclasses": [
        "safeds.ml.classical.regression._regressor.Regressor"
      ],
      "constructor": {
        "id": "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/ml/classical/regression",
          "safeds/ml/classical/classification"
        ],
        "parameters": [
          "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/__init__/self",
          "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/__init__/number_of_neighbors"
        ]
      },
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "attributes": [
        "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/_number_of_neighbors",
        "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/_wrapped_regressor",
        "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/_feature_names",
        "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/_target_name"
      ],
      "methods": [
        "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/number_of_neighbors",
        "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/fit",
        "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/predict",
        "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/is_fitted",
        "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/_get_sklearn_regressor"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/ml/classical/regression/_lasso_regression/LassoRegression",
      "name": "LassoRegression",
      "docstring": {
        "description": "Lasso regression.\n\nParameters\n----------\nalpha : float\n    Controls the regularization of the model. The higher the value, the more regularized it becomes.\n\nRaises\n------\nOutOfBoundsError\n    If `alpha` is negative.",
        "full_docstring": "Lasso regression.\n\nParameters\n----------\nalpha : float\n    Controls the regularization of the model. The higher the value, the more regularized it becomes.\n\nRaises\n------\nOutOfBoundsError\n    If `alpha` is negative."
      },
      "is_public": true,
      "superclasses": [
        "safeds.ml.classical.regression._regressor.Regressor"
      ],
      "constructor": {
        "id": "safeds/ml/classical/regression/_lasso_regression/LassoRegression/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/ml/classical/regression"
        ],
        "parameters": [
          "safeds/ml/classical/regression/_lasso_regression/LassoRegression/__init__/self",
          "safeds/ml/classical/regression/_lasso_regression/LassoRegression/__init__/alpha"
        ]
      },
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "attributes": [
        "safeds/ml/classical/regression/_lasso_regression/LassoRegression/_alpha",
        "safeds/ml/classical/regression/_lasso_regression/LassoRegression/_wrapped_regressor",
        "safeds/ml/classical/regression/_lasso_regression/LassoRegression/_feature_names",
        "safeds/ml/classical/regression/_lasso_regression/LassoRegression/_target_name"
      ],
      "methods": [
        "safeds/ml/classical/regression/_lasso_regression/LassoRegression/alpha",
        "safeds/ml/classical/regression/_lasso_regression/LassoRegression/fit",
        "safeds/ml/classical/regression/_lasso_regression/LassoRegression/predict",
        "safeds/ml/classical/regression/_lasso_regression/LassoRegression/is_fitted",
        "safeds/ml/classical/regression/_lasso_regression/LassoRegression/_get_sklearn_regressor"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/ml/classical/regression/_linear_regression/LinearRegression",
      "name": "LinearRegression",
      "docstring": {
        "description": "Linear regression.",
        "full_docstring": "Linear regression."
      },
      "is_public": true,
      "superclasses": [
        "safeds.ml.classical.regression._regressor.Regressor"
      ],
      "constructor": {
        "id": "safeds/ml/classical/regression/_linear_regression/LinearRegression/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/ml/classical/regression"
        ],
        "parameters": [
          "safeds/ml/classical/regression/_linear_regression/LinearRegression/__init__/self"
        ]
      },
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "attributes": [
        "safeds/ml/classical/regression/_linear_regression/LinearRegression/_wrapped_regressor",
        "safeds/ml/classical/regression/_linear_regression/LinearRegression/_feature_names",
        "safeds/ml/classical/regression/_linear_regression/LinearRegression/_target_name"
      ],
      "methods": [
        "safeds/ml/classical/regression/_linear_regression/LinearRegression/fit",
        "safeds/ml/classical/regression/_linear_regression/LinearRegression/predict",
        "safeds/ml/classical/regression/_linear_regression/LinearRegression/is_fitted",
        "safeds/ml/classical/regression/_linear_regression/LinearRegression/_get_sklearn_regressor"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/ml/classical/regression/_random_forest/RandomForest",
      "name": "RandomForest",
      "docstring": {
        "description": "Random forest regression.\n\nParameters\n----------\nnumber_of_trees : int\n    The number of trees to be used in the random forest. Has to be greater than 0.\n\nRaises\n------\nOutOfBoundsError\n    If `number_of_trees` is less than 1.",
        "full_docstring": "Random forest regression.\n\nParameters\n----------\nnumber_of_trees : int\n    The number of trees to be used in the random forest. Has to be greater than 0.\n\nRaises\n------\nOutOfBoundsError\n    If `number_of_trees` is less than 1."
      },
      "is_public": true,
      "superclasses": [
        "safeds.ml.classical.regression._regressor.Regressor"
      ],
      "constructor": {
        "id": "safeds/ml/classical/regression/_random_forest/RandomForest/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/ml/classical/regression",
          "safeds/ml/classical/classification"
        ],
        "parameters": [
          "safeds/ml/classical/regression/_random_forest/RandomForest/__init__/self",
          "safeds/ml/classical/regression/_random_forest/RandomForest/__init__/number_of_trees"
        ]
      },
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "attributes": [
        "safeds/ml/classical/regression/_random_forest/RandomForest/_number_of_trees",
        "safeds/ml/classical/regression/_random_forest/RandomForest/_wrapped_regressor",
        "safeds/ml/classical/regression/_random_forest/RandomForest/_feature_names",
        "safeds/ml/classical/regression/_random_forest/RandomForest/_target_name"
      ],
      "methods": [
        "safeds/ml/classical/regression/_random_forest/RandomForest/number_of_trees",
        "safeds/ml/classical/regression/_random_forest/RandomForest/fit",
        "safeds/ml/classical/regression/_random_forest/RandomForest/predict",
        "safeds/ml/classical/regression/_random_forest/RandomForest/is_fitted",
        "safeds/ml/classical/regression/_random_forest/RandomForest/_get_sklearn_regressor"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/ml/classical/regression/_regressor/Regressor",
      "name": "Regressor",
      "docstring": {
        "description": "Abstract base class for all regressors.",
        "full_docstring": "Abstract base class for all regressors."
      },
      "is_public": true,
      "superclasses": [
        "abc.ABC"
      ],
      "constructor": null,
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "attributes": [],
      "methods": [
        "safeds/ml/classical/regression/_regressor/Regressor/fit",
        "safeds/ml/classical/regression/_regressor/Regressor/predict",
        "safeds/ml/classical/regression/_regressor/Regressor/is_fitted",
        "safeds/ml/classical/regression/_regressor/Regressor/_get_sklearn_regressor",
        "safeds/ml/classical/regression/_regressor/Regressor/mean_squared_error",
        "safeds/ml/classical/regression/_regressor/Regressor/mean_absolute_error"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/ml/classical/regression/_ridge_regression/RidgeRegression",
      "name": "RidgeRegression",
      "docstring": {
        "description": "Ridge regression.\n\nParameters\n----------\nalpha : float\n    Controls the regularization of the model. The higher the value, the more regularized it becomes.\n\nRaises\n------\nOutOfBoundsError\n    If `alpha` is negative.",
        "full_docstring": "Ridge regression.\n\nParameters\n----------\nalpha : float\n    Controls the regularization of the model. The higher the value, the more regularized it becomes.\n\nRaises\n------\nOutOfBoundsError\n    If `alpha` is negative."
      },
      "is_public": true,
      "superclasses": [
        "safeds.ml.classical.regression._regressor.Regressor"
      ],
      "constructor": {
        "id": "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/ml/classical/regression"
        ],
        "parameters": [
          "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/__init__/self",
          "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/__init__/alpha"
        ]
      },
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "attributes": [
        "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/_alpha",
        "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/_wrapped_regressor",
        "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/_feature_names",
        "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/_target_name"
      ],
      "methods": [
        "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/alpha",
        "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/fit",
        "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/predict",
        "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/is_fitted",
        "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/_get_sklearn_regressor"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine",
      "name": "SupportVectorMachine",
      "docstring": {
        "description": "Support vector machine.\n\nParameters\n----------\nc: float\n    The strength of regularization. Must be strictly positive.\nkernel: SupportVectorMachineKernel | None\n    The type of kernel to be used. Defaults to None.\n\nRaises\n------\nOutOfBoundsError\n    If `c` is less than or equal to 0.",
        "full_docstring": "Support vector machine.\n\nParameters\n----------\nc: float\n    The strength of regularization. Must be strictly positive.\nkernel: SupportVectorMachineKernel | None\n    The type of kernel to be used. Defaults to None.\n\nRaises\n------\nOutOfBoundsError\n    If `c` is less than or equal to 0."
      },
      "is_public": true,
      "superclasses": [
        "safeds.ml.classical.regression._regressor.Regressor"
      ],
      "constructor": {
        "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/ml/classical/regression",
          "safeds/ml/classical/classification"
        ],
        "parameters": [
          "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/__init__/self",
          "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/__init__/c",
          "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/__init__/kernel"
        ]
      },
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "attributes": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/_wrapped_regressor",
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/_feature_names",
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/_target_name",
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/_c",
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/_kernel"
      ],
      "methods": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/c",
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/kernel",
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/_get_kernel_name",
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/fit",
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/predict",
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/is_fitted",
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/_get_sklearn_regressor"
      ],
      "classes": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel"
      ],
      "type_parameters": []
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel",
      "name": "Kernel",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "superclasses": [],
      "constructor": null,
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "attributes": [],
      "methods": [],
      "classes": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/Linear",
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial",
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/Sigmoid",
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/RadialBasisFunction"
      ],
      "type_parameters": []
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/Linear",
      "name": "Linear",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "superclasses": [
        "safeds.ml.classical.regression._support_vector_machine.SupportVectorMachineKernel"
      ],
      "constructor": null,
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "attributes": [],
      "methods": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/Linear/get_sklearn_kernel"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial",
      "name": "Polynomial",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "superclasses": [
        "safeds.ml.classical.regression._support_vector_machine.SupportVectorMachineKernel"
      ],
      "constructor": {
        "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial/__init__",
        "name": "__init__",
        "docstring": {
          "description": "",
          "full_docstring": ""
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/ml/classical/regression",
          "safeds/ml/classical/classification"
        ],
        "parameters": [
          "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial/__init__/self",
          "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial/__init__/degree"
        ]
      },
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "attributes": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial/_degree"
      ],
      "methods": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial/get_sklearn_kernel"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/RadialBasisFunction",
      "name": "RadialBasisFunction",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "superclasses": [
        "safeds.ml.classical.regression._support_vector_machine.SupportVectorMachineKernel"
      ],
      "constructor": null,
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "attributes": [],
      "methods": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/RadialBasisFunction/get_sklearn_kernel"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/Sigmoid",
      "name": "Sigmoid",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "superclasses": [
        "safeds.ml.classical.regression._support_vector_machine.SupportVectorMachineKernel"
      ],
      "constructor": null,
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "attributes": [],
      "methods": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/Sigmoid/get_sklearn_kernel"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachineKernel",
      "name": "SupportVectorMachineKernel",
      "docstring": {
        "description": "The abstract base class of the different subclasses supported by the `Kernel`.",
        "full_docstring": "The abstract base class of the different subclasses supported by the `Kernel`."
      },
      "is_public": true,
      "superclasses": [
        "abc.ABC"
      ],
      "constructor": null,
      "reexported_by": [],
      "attributes": [],
      "methods": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachineKernel/get_sklearn_kernel"
      ],
      "classes": [],
      "type_parameters": []
    },
    {
      "id": "safeds/ml/hyperparameters/_choice/Choice",
      "name": "Choice",
      "docstring": {
        "description": "A list of values to choose from in a hyperparameter search.",
        "full_docstring": "A list of values to choose from in a hyperparameter search."
      },
      "is_public": true,
      "superclasses": [],
      "constructor": {
        "id": "safeds/ml/hyperparameters/_choice/Choice/__init__",
        "name": "__init__",
        "docstring": {
          "description": "Create a new choice.\n\nParameters\n----------\n*args: tuple[T, ...]\n    The values to choose from.",
          "full_docstring": "Create a new choice.\n\nParameters\n----------\n*args: tuple[T, ...]\n    The values to choose from."
        },
        "is_public": true,
        "is_static": false,
        "is_class_method": false,
        "is_property": false,
        "results": [],
        "reexported_by": [
          "safeds/ml/hyperparameters"
        ],
        "parameters": [
          "safeds/ml/hyperparameters/_choice/Choice/__init__/self",
          "safeds/ml/hyperparameters/_choice/Choice/__init__/args"
        ]
      },
      "reexported_by": [
        "safeds/ml/hyperparameters"
      ],
      "attributes": [
        "safeds/ml/hyperparameters/_choice/Choice/elements"
      ],
      "methods": [
        "safeds/ml/hyperparameters/_choice/Choice/__contains__",
        "safeds/ml/hyperparameters/_choice/Choice/__iter__",
        "safeds/ml/hyperparameters/_choice/Choice/__len__"
      ],
      "classes": [],
      "type_parameters": []
    }
  ],
  "functions": [
    {
      "id": "reference/generate_reference_pages/list_class_and_function_names_in_module",
      "name": "list_class_and_function_names_in_module",
      "docstring": {
        "description": "Return a list with the names of all classes and function names in the given module.",
        "full_docstring": "Return a list with the names of all classes and function names in the given module."
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "reference/generate_reference_pages/list_class_and_function_names_in_module/result_1"
      ],
      "reexported_by": [],
      "parameters": [
        "reference/generate_reference_pages/list_class_and_function_names_in_module/module_name"
      ]
    },
    {
      "id": "safeds/config/_device/_get_device",
      "name": "_get_device",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/config/_device/_get_device/result_1"
      ],
      "reexported_by": [
        "safeds/config"
      ],
      "parameters": []
    },
    {
      "id": "safeds/data/image/containers/_image/Image/__eq__",
      "name": "__eq__",
      "docstring": {
        "description": "Compare two images.\n\nParameters\n----------\nother: The image to compare to.\n\nReturns\n-------\nequals : bool\n    Whether the two images contain equal pixel data.",
        "full_docstring": "Compare two images.\n\nParameters\n----------\nother: The image to compare to.\n\nReturns\n-------\nequals : bool\n    Whether the two images contain equal pixel data."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/image/containers/_image/Image/__eq__/result_1"
      ],
      "reexported_by": [
        "safeds/data/image/containers"
      ],
      "parameters": [
        "safeds/data/image/containers/_image/Image/__eq__/self",
        "safeds/data/image/containers/_image/Image/__eq__/other"
      ]
    },
    {
      "id": "safeds/data/image/containers/_image/Image/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/image/containers"
      ],
      "parameters": [
        "safeds/data/image/containers/_image/Image/__init__/self",
        "safeds/data/image/containers/_image/Image/__init__/image_tensor",
        "safeds/data/image/containers/_image/Image/__init__/device"
      ]
    },
    {
      "id": "safeds/data/image/containers/_image/Image/__sizeof__",
      "name": "__sizeof__",
      "docstring": {
        "description": "Return the complete size of this object.\n\nReturns\n-------\nSize of this object in bytes.",
        "full_docstring": "Return the complete size of this object.\n\nReturns\n-------\nSize of this object in bytes."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/image/containers/_image/Image/__sizeof__/result_1"
      ],
      "reexported_by": [
        "safeds/data/image/containers"
      ],
      "parameters": [
        "safeds/data/image/containers/_image/Image/__sizeof__/self"
      ]
    },
    {
      "id": "safeds/data/image/containers/_image/Image/_repr_jpeg_",
      "name": "_repr_jpeg_",
      "docstring": {
        "description": "Return a JPEG image as bytes.\n\nIf the image has an alpha channel return None.\n\nReturns\n-------\njpeg : bytes\n    The image as JPEG.",
        "full_docstring": "Return a JPEG image as bytes.\n\nIf the image has an alpha channel return None.\n\nReturns\n-------\njpeg : bytes\n    The image as JPEG."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/image/containers/_image/Image/_repr_jpeg_/result_1"
      ],
      "reexported_by": [
        "safeds/data/image/containers"
      ],
      "parameters": [
        "safeds/data/image/containers/_image/Image/_repr_jpeg_/self"
      ]
    },
    {
      "id": "safeds/data/image/containers/_image/Image/_repr_png_",
      "name": "_repr_png_",
      "docstring": {
        "description": "Return a PNG image as bytes.\n\nReturns\n-------\npng : bytes\n    The image as PNG.",
        "full_docstring": "Return a PNG image as bytes.\n\nReturns\n-------\npng : bytes\n    The image as PNG."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/image/containers/_image/Image/_repr_png_/result_1"
      ],
      "reexported_by": [
        "safeds/data/image/containers"
      ],
      "parameters": [
        "safeds/data/image/containers/_image/Image/_repr_png_/self"
      ]
    },
    {
      "id": "safeds/data/image/containers/_image/Image/_set_device",
      "name": "_set_device",
      "docstring": {
        "description": "Set the device where the image will be saved on.\n\nReturns\n-------\nresult : Image\n    The image on the given device",
        "full_docstring": "Set the device where the image will be saved on.\n\nReturns\n-------\nresult : Image\n    The image on the given device"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/image/containers/_image/Image/_set_device/result_1"
      ],
      "reexported_by": [
        "safeds/data/image/containers"
      ],
      "parameters": [
        "safeds/data/image/containers/_image/Image/_set_device/self",
        "safeds/data/image/containers/_image/Image/_set_device/device"
      ]
    },
    {
      "id": "safeds/data/image/containers/_image/Image/add_noise",
      "name": "add_noise",
      "docstring": {
        "description": "Return a new `Image` with noise added to the image.\n\nThe original image is not modified.\n\nParameters\n----------\nstandard_deviation : float\n    The standard deviation of the normal distribution. Has to be bigger than or equal to 0.\n\nReturns\n-------\nresult : Image\n    The image with added noise.\n\nRaises\n------\nOutOfBoundsError\n    If standard_deviation is smaller than 0.",
        "full_docstring": "Return a new `Image` with noise added to the image.\n\nThe original image is not modified.\n\nParameters\n----------\nstandard_deviation : float\n    The standard deviation of the normal distribution. Has to be bigger than or equal to 0.\n\nReturns\n-------\nresult : Image\n    The image with added noise.\n\nRaises\n------\nOutOfBoundsError\n    If standard_deviation is smaller than 0."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/image/containers/_image/Image/add_noise/result_1"
      ],
      "reexported_by": [
        "safeds/data/image/containers"
      ],
      "parameters": [
        "safeds/data/image/containers/_image/Image/add_noise/self",
        "safeds/data/image/containers/_image/Image/add_noise/standard_deviation"
      ]
    },
    {
      "id": "safeds/data/image/containers/_image/Image/adjust_brightness",
      "name": "adjust_brightness",
      "docstring": {
        "description": "Return a new `Image` with an adjusted brightness.\n\nThe original image is not modified.\n\nParameters\n----------\nfactor: float\n    The brightness factor.\n    1.0 will not change the brightness.\n    Below 1.0 will result in a darker image.\n    Above 1.0 will resolut in a brighter image.\n    Has to be bigger than or equal to 0 (black).\n\nReturns\n-------\nresult: Image\n    The Image with adjusted brightness.\n\nRaises\n------\nOutOfBoundsError\n    If factor is smaller than 0.",
        "full_docstring": "Return a new `Image` with an adjusted brightness.\n\nThe original image is not modified.\n\nParameters\n----------\nfactor: float\n    The brightness factor.\n    1.0 will not change the brightness.\n    Below 1.0 will result in a darker image.\n    Above 1.0 will resolut in a brighter image.\n    Has to be bigger than or equal to 0 (black).\n\nReturns\n-------\nresult: Image\n    The Image with adjusted brightness.\n\nRaises\n------\nOutOfBoundsError\n    If factor is smaller than 0."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/image/containers/_image/Image/adjust_brightness/result_1"
      ],
      "reexported_by": [
        "safeds/data/image/containers"
      ],
      "parameters": [
        "safeds/data/image/containers/_image/Image/adjust_brightness/self",
        "safeds/data/image/containers/_image/Image/adjust_brightness/factor"
      ]
    },
    {
      "id": "safeds/data/image/containers/_image/Image/adjust_color_balance",
      "name": "adjust_color_balance",
      "docstring": {
        "description": "Return a new `Image` with adjusted color balance.\n\nThe original image is not modified.\n\nParameters\n----------\nfactor: float\n    Has to be bigger than or equal to 0.\n    If 0 <= factor < 1, make image greyer.\n    If factor = 1, no changes will be made.\n    If factor > 1, increase color balance of image.\n\nReturns\n-------\nimage: Image\n    The new, adjusted image.",
        "full_docstring": "Return a new `Image` with adjusted color balance.\n\nThe original image is not modified.\n\nParameters\n----------\nfactor: float\n    Has to be bigger than or equal to 0.\n    If 0 <= factor < 1, make image greyer.\n    If factor = 1, no changes will be made.\n    If factor > 1, increase color balance of image.\n\nReturns\n-------\nimage: Image\n    The new, adjusted image."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/image/containers/_image/Image/adjust_color_balance/result_1"
      ],
      "reexported_by": [
        "safeds/data/image/containers"
      ],
      "parameters": [
        "safeds/data/image/containers/_image/Image/adjust_color_balance/self",
        "safeds/data/image/containers/_image/Image/adjust_color_balance/factor"
      ]
    },
    {
      "id": "safeds/data/image/containers/_image/Image/adjust_contrast",
      "name": "adjust_contrast",
      "docstring": {
        "description": "Return a new `Image` with adjusted contrast.\n\nThe original image is not modified.\n\nParameters\n----------\nfactor: float\n    If factor > 1, increase contrast of image.\n    If factor = 1, no changes will be made.\n    If factor < 1, make image greyer.\n    Has to be bigger than or equal to 0 (gray).\n\nReturns\n-------\nimage: Image\n    New image with adjusted contrast.\n\nRaises\n------\nOutOfBoundsError\n    If factor is smaller than 0.",
        "full_docstring": "Return a new `Image` with adjusted contrast.\n\nThe original image is not modified.\n\nParameters\n----------\nfactor: float\n    If factor > 1, increase contrast of image.\n    If factor = 1, no changes will be made.\n    If factor < 1, make image greyer.\n    Has to be bigger than or equal to 0 (gray).\n\nReturns\n-------\nimage: Image\n    New image with adjusted contrast.\n\nRaises\n------\nOutOfBoundsError\n    If factor is smaller than 0."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/image/containers/_image/Image/adjust_contrast/result_1"
      ],
      "reexported_by": [
        "safeds/data/image/containers"
      ],
      "parameters": [
        "safeds/data/image/containers/_image/Image/adjust_contrast/self",
        "safeds/data/image/containers/_image/Image/adjust_contrast/factor"
      ]
    },
    {
      "id": "safeds/data/image/containers/_image/Image/blur",
      "name": "blur",
      "docstring": {
        "description": "Return a blurred version of the image.\n\nThe original image is not modified.\n\nParameters\n----------\nradius : int\n     Radius is directly proportional to the blur value. The radius is equal to the amount of pixels united in\n     each direction. A radius of 1 will result in a united box of 9 pixels.\n\nReturns\n-------\nresult : Image\n    The blurred image.",
        "full_docstring": "Return a blurred version of the image.\n\nThe original image is not modified.\n\nParameters\n----------\nradius : int\n     Radius is directly proportional to the blur value. The radius is equal to the amount of pixels united in\n     each direction. A radius of 1 will result in a united box of 9 pixels.\n\nReturns\n-------\nresult : Image\n    The blurred image."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/image/containers/_image/Image/blur/result_1"
      ],
      "reexported_by": [
        "safeds/data/image/containers"
      ],
      "parameters": [
        "safeds/data/image/containers/_image/Image/blur/self",
        "safeds/data/image/containers/_image/Image/blur/radius"
      ]
    },
    {
      "id": "safeds/data/image/containers/_image/Image/channel",
      "name": "channel",
      "docstring": {
        "description": "Get the number of channels of the image.\n\nReturns\n-------\nchannel : int\n    The number of channels of the image.",
        "full_docstring": "Get the number of channels of the image.\n\nReturns\n-------\nchannel : int\n    The number of channels of the image."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/data/image/containers/_image/Image/channel/result_1"
      ],
      "reexported_by": [
        "safeds/data/image/containers"
      ],
      "parameters": [
        "safeds/data/image/containers/_image/Image/channel/self"
      ]
    },
    {
      "id": "safeds/data/image/containers/_image/Image/convert_to_grayscale",
      "name": "convert_to_grayscale",
      "docstring": {
        "description": "Return a new `Image` that is converted to grayscale.\n\nThe original image is not modified.\n\nReturns\n-------\nresult : Image\n    The grayscale image.",
        "full_docstring": "Return a new `Image` that is converted to grayscale.\n\nThe original image is not modified.\n\nReturns\n-------\nresult : Image\n    The grayscale image."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/image/containers/_image/Image/convert_to_grayscale/result_1"
      ],
      "reexported_by": [
        "safeds/data/image/containers"
      ],
      "parameters": [
        "safeds/data/image/containers/_image/Image/convert_to_grayscale/self"
      ]
    },
    {
      "id": "safeds/data/image/containers/_image/Image/crop",
      "name": "crop",
      "docstring": {
        "description": "Return a new `Image` that has been cropped to a given bounding rectangle.\n\nThe original image is not modified.\n\nParameters\n----------\nx: the x coordinate of the top-left corner of the bounding rectangle\ny: the y coordinate of the top-left corner of the bounding rectangle\nwidth:  the width of the bounding rectangle\nheight:  the height of the bounding rectangle\n\nReturns\n-------\nresult : Image\n    The cropped image.",
        "full_docstring": "Return a new `Image` that has been cropped to a given bounding rectangle.\n\nThe original image is not modified.\n\nParameters\n----------\nx: the x coordinate of the top-left corner of the bounding rectangle\ny: the y coordinate of the top-left corner of the bounding rectangle\nwidth:  the width of the bounding rectangle\nheight:  the height of the bounding rectangle\n\nReturns\n-------\nresult : Image\n    The cropped image."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/image/containers/_image/Image/crop/result_1"
      ],
      "reexported_by": [
        "safeds/data/image/containers"
      ],
      "parameters": [
        "safeds/data/image/containers/_image/Image/crop/self",
        "safeds/data/image/containers/_image/Image/crop/x",
        "safeds/data/image/containers/_image/Image/crop/y",
        "safeds/data/image/containers/_image/Image/crop/width",
        "safeds/data/image/containers/_image/Image/crop/height"
      ]
    },
    {
      "id": "safeds/data/image/containers/_image/Image/device",
      "name": "device",
      "docstring": {
        "description": "Get the device where the image is saved on.\n\nReturns\n-------\ndevice : Device\n    The device of the image",
        "full_docstring": "Get the device where the image is saved on.\n\nReturns\n-------\ndevice : Device\n    The device of the image"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/data/image/containers/_image/Image/device/result_1"
      ],
      "reexported_by": [
        "safeds/data/image/containers"
      ],
      "parameters": [
        "safeds/data/image/containers/_image/Image/device/self"
      ]
    },
    {
      "id": "safeds/data/image/containers/_image/Image/find_edges",
      "name": "find_edges",
      "docstring": {
        "description": "Return a grayscale version of the image with the edges highlighted.\n\nThe original image is not modified.\n\nReturns\n-------\nresult : Image\n    The image with edges found.",
        "full_docstring": "Return a grayscale version of the image with the edges highlighted.\n\nThe original image is not modified.\n\nReturns\n-------\nresult : Image\n    The image with edges found."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/image/containers/_image/Image/find_edges/result_1"
      ],
      "reexported_by": [
        "safeds/data/image/containers"
      ],
      "parameters": [
        "safeds/data/image/containers/_image/Image/find_edges/self"
      ]
    },
    {
      "id": "safeds/data/image/containers/_image/Image/flip_horizontally",
      "name": "flip_horizontally",
      "docstring": {
        "description": "Return a new `\u00ccmage` that is flipped horizontally (vertical axis, flips left-right and vice versa).\n\nThe original image is not modified.\n\nReturns\n-------\nresult : Image\n    The flipped image.",
        "full_docstring": "Return a new `\u00ccmage` that is flipped horizontally (vertical axis, flips left-right and vice versa).\n\nThe original image is not modified.\n\nReturns\n-------\nresult : Image\n    The flipped image."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/image/containers/_image/Image/flip_horizontally/result_1"
      ],
      "reexported_by": [
        "safeds/data/image/containers"
      ],
      "parameters": [
        "safeds/data/image/containers/_image/Image/flip_horizontally/self"
      ]
    },
    {
      "id": "safeds/data/image/containers/_image/Image/flip_vertically",
      "name": "flip_vertically",
      "docstring": {
        "description": "Return a new `Image` that is flipped vertically (horizontal axis, flips up-down and vice versa).\n\nThe original image is not modified.\n\nReturns\n-------\nresult : Image\n    The flipped image.",
        "full_docstring": "Return a new `Image` that is flipped vertically (horizontal axis, flips up-down and vice versa).\n\nThe original image is not modified.\n\nReturns\n-------\nresult : Image\n    The flipped image."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/image/containers/_image/Image/flip_vertically/result_1"
      ],
      "reexported_by": [
        "safeds/data/image/containers"
      ],
      "parameters": [
        "safeds/data/image/containers/_image/Image/flip_vertically/self"
      ]
    },
    {
      "id": "safeds/data/image/containers/_image/Image/from_bytes",
      "name": "from_bytes",
      "docstring": {
        "description": "Create an image from bytes.\n\nParameters\n----------\ndata : bytes\n    The data of the image.\ndevice: Device\n    The device where the tensor will be saved on. Defaults to the default device\n\nReturns\n-------\nimage : Image\n    The image.",
        "full_docstring": "Create an image from bytes.\n\nParameters\n----------\ndata : bytes\n    The data of the image.\ndevice: Device\n    The device where the tensor will be saved on. Defaults to the default device\n\nReturns\n-------\nimage : Image\n    The image."
      },
      "is_public": false,
      "is_static": true,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/image/containers/_image/Image/from_bytes/result_1"
      ],
      "reexported_by": [
        "safeds/data/image/containers"
      ],
      "parameters": [
        "safeds/data/image/containers/_image/Image/from_bytes/data",
        "safeds/data/image/containers/_image/Image/from_bytes/device"
      ]
    },
    {
      "id": "safeds/data/image/containers/_image/Image/from_file",
      "name": "from_file",
      "docstring": {
        "description": "Create an image from a file.\n\nParameters\n----------\npath : str | Path\n    The path to the image file.\ndevice: Device\n    The device where the tensor will be saved on. Defaults to the default device\n\nReturns\n-------\nimage : Image\n    The image.",
        "full_docstring": "Create an image from a file.\n\nParameters\n----------\npath : str | Path\n    The path to the image file.\ndevice: Device\n    The device where the tensor will be saved on. Defaults to the default device\n\nReturns\n-------\nimage : Image\n    The image."
      },
      "is_public": false,
      "is_static": true,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/image/containers/_image/Image/from_file/result_1"
      ],
      "reexported_by": [
        "safeds/data/image/containers"
      ],
      "parameters": [
        "safeds/data/image/containers/_image/Image/from_file/path",
        "safeds/data/image/containers/_image/Image/from_file/device"
      ]
    },
    {
      "id": "safeds/data/image/containers/_image/Image/height",
      "name": "height",
      "docstring": {
        "description": "Get the height of the image in pixels.\n\nReturns\n-------\nheight : int\n    The height of the image.",
        "full_docstring": "Get the height of the image in pixels.\n\nReturns\n-------\nheight : int\n    The height of the image."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/data/image/containers/_image/Image/height/result_1"
      ],
      "reexported_by": [
        "safeds/data/image/containers"
      ],
      "parameters": [
        "safeds/data/image/containers/_image/Image/height/self"
      ]
    },
    {
      "id": "safeds/data/image/containers/_image/Image/invert_colors",
      "name": "invert_colors",
      "docstring": {
        "description": "Return a new `Image` with colors inverted.\n\nThe original image is not modified.\n\nReturns\n-------\nresult : Image\n    The image with inverted colors.",
        "full_docstring": "Return a new `Image` with colors inverted.\n\nThe original image is not modified.\n\nReturns\n-------\nresult : Image\n    The image with inverted colors."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/image/containers/_image/Image/invert_colors/result_1"
      ],
      "reexported_by": [
        "safeds/data/image/containers"
      ],
      "parameters": [
        "safeds/data/image/containers/_image/Image/invert_colors/self"
      ]
    },
    {
      "id": "safeds/data/image/containers/_image/Image/resize",
      "name": "resize",
      "docstring": {
        "description": "Return a new `Image` that has been resized to a given size.\n\nThe original image is not modified.\n\nReturns\n-------\nresult : Image\n    The image with the given width and height.",
        "full_docstring": "Return a new `Image` that has been resized to a given size.\n\nThe original image is not modified.\n\nReturns\n-------\nresult : Image\n    The image with the given width and height."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/image/containers/_image/Image/resize/result_1"
      ],
      "reexported_by": [
        "safeds/data/image/containers"
      ],
      "parameters": [
        "safeds/data/image/containers/_image/Image/resize/self",
        "safeds/data/image/containers/_image/Image/resize/new_width",
        "safeds/data/image/containers/_image/Image/resize/new_height"
      ]
    },
    {
      "id": "safeds/data/image/containers/_image/Image/rotate_left",
      "name": "rotate_left",
      "docstring": {
        "description": "Return a new `Image` that is rotated 90 degrees counter-clockwise.\n\nThe original image is not modified.\n\nReturns\n-------\nresult : Image\n    The image rotated 90 degrees counter-clockwise.",
        "full_docstring": "Return a new `Image` that is rotated 90 degrees counter-clockwise.\n\nThe original image is not modified.\n\nReturns\n-------\nresult : Image\n    The image rotated 90 degrees counter-clockwise."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/image/containers/_image/Image/rotate_left/result_1"
      ],
      "reexported_by": [
        "safeds/data/image/containers"
      ],
      "parameters": [
        "safeds/data/image/containers/_image/Image/rotate_left/self"
      ]
    },
    {
      "id": "safeds/data/image/containers/_image/Image/rotate_right",
      "name": "rotate_right",
      "docstring": {
        "description": "Return a new `Image` that is rotated 90 degrees clockwise.\n\nThe original image is not modified.\n\nReturns\n-------\nresult : Image\n    The image rotated 90 degrees clockwise.",
        "full_docstring": "Return a new `Image` that is rotated 90 degrees clockwise.\n\nThe original image is not modified.\n\nReturns\n-------\nresult : Image\n    The image rotated 90 degrees clockwise."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/image/containers/_image/Image/rotate_right/result_1"
      ],
      "reexported_by": [
        "safeds/data/image/containers"
      ],
      "parameters": [
        "safeds/data/image/containers/_image/Image/rotate_right/self"
      ]
    },
    {
      "id": "safeds/data/image/containers/_image/Image/sharpen",
      "name": "sharpen",
      "docstring": {
        "description": "Return a sharpened version of the image.\n\nThe original image is not modified.\n\nParameters\n----------\nfactor : float\n    If factor > 1, increase the sharpness of the image.\n    If factor = 1, no changes will be made.\n    If factor < 1, blur the image.\n    Has to be bigger than or equal to 0 (blurred).\n\nReturns\n-------\nresult : Image\n    The image sharpened by the given factor.\n\nRaises\n------\nOutOfBoundsError\n    If factor is smaller than 0.",
        "full_docstring": "Return a sharpened version of the image.\n\nThe original image is not modified.\n\nParameters\n----------\nfactor : float\n    If factor > 1, increase the sharpness of the image.\n    If factor = 1, no changes will be made.\n    If factor < 1, blur the image.\n    Has to be bigger than or equal to 0 (blurred).\n\nReturns\n-------\nresult : Image\n    The image sharpened by the given factor.\n\nRaises\n------\nOutOfBoundsError\n    If factor is smaller than 0."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/image/containers/_image/Image/sharpen/result_1"
      ],
      "reexported_by": [
        "safeds/data/image/containers"
      ],
      "parameters": [
        "safeds/data/image/containers/_image/Image/sharpen/self",
        "safeds/data/image/containers/_image/Image/sharpen/factor"
      ]
    },
    {
      "id": "safeds/data/image/containers/_image/Image/to_jpeg_file",
      "name": "to_jpeg_file",
      "docstring": {
        "description": "Save the image as a JPEG file.\n\nParameters\n----------\npath : str | Path\n    The path to the JPEG file.",
        "full_docstring": "Save the image as a JPEG file.\n\nParameters\n----------\npath : str | Path\n    The path to the JPEG file."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/image/containers"
      ],
      "parameters": [
        "safeds/data/image/containers/_image/Image/to_jpeg_file/self",
        "safeds/data/image/containers/_image/Image/to_jpeg_file/path"
      ]
    },
    {
      "id": "safeds/data/image/containers/_image/Image/to_png_file",
      "name": "to_png_file",
      "docstring": {
        "description": "Save the image as a PNG file.\n\nParameters\n----------\npath : str | Path\n    The path to the PNG file.",
        "full_docstring": "Save the image as a PNG file.\n\nParameters\n----------\npath : str | Path\n    The path to the PNG file."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/image/containers"
      ],
      "parameters": [
        "safeds/data/image/containers/_image/Image/to_png_file/self",
        "safeds/data/image/containers/_image/Image/to_png_file/path"
      ]
    },
    {
      "id": "safeds/data/image/containers/_image/Image/width",
      "name": "width",
      "docstring": {
        "description": "Get the width of the image in pixels.\n\nReturns\n-------\nwidth : int\n    The width of the image.",
        "full_docstring": "Get the width of the image in pixels.\n\nReturns\n-------\nwidth : int\n    The width of the image."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/data/image/containers/_image/Image/width/result_1"
      ],
      "reexported_by": [
        "safeds/data/image/containers"
      ],
      "parameters": [
        "safeds/data/image/containers/_image/Image/width/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/__contains__",
      "name": "__contains__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_column/Column/__contains__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/__contains__/self",
        "safeds/data/tabular/containers/_column/Column/__contains__/item"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/__eq__",
      "name": "__eq__",
      "docstring": {
        "description": "Check whether this column is equal to another object.\n\nParameters\n----------\nother : object\n    The other object.\n\nReturns\n-------\nequal : bool\n    True if the other object is an identical column. False if the other object is a different column.\n    NotImplemented if the other object is not a column.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column1 = Column(\"test\", [1, 2, 3])\n>>> column2 = Column(\"test\", [1, 2, 3])\n>>> column1 == column2\nTrue\n\n>>> column3 = Column(\"test\", [3, 4, 5])\n>>> column1 == column3\nFalse",
        "full_docstring": "Check whether this column is equal to another object.\n\nParameters\n----------\nother : object\n    The other object.\n\nReturns\n-------\nequal : bool\n    True if the other object is an identical column. False if the other object is a different column.\n    NotImplemented if the other object is not a column.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column1 = Column(\"test\", [1, 2, 3])\n>>> column2 = Column(\"test\", [1, 2, 3])\n>>> column1 == column2\nTrue\n\n>>> column3 = Column(\"test\", [3, 4, 5])\n>>> column1 == column3\nFalse"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_column/Column/__eq__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/__eq__/self",
        "safeds/data/tabular/containers/_column/Column/__eq__/other"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/__init__",
      "name": "__init__",
      "docstring": {
        "description": "Create a column.\n\nParameters\n----------\nname : str\n    The name of the column.\ndata : Sequence[T] | None\n    The data. If None, an empty column is created.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])",
        "full_docstring": "Create a column.\n\nParameters\n----------\nname : str\n    The name of the column.\ndata : Sequence[T] | None\n    The data. If None, an empty column is created.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])"
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/__init__/self",
        "safeds/data/tabular/containers/_column/Column/__init__/name",
        "safeds/data/tabular/containers/_column/Column/__init__/data"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/__iter__",
      "name": "__iter__",
      "docstring": {
        "description": "Create an iterator for the data of this column. This way e.g. for-each loops can be used on it.\n\nReturns\n-------\niterator : Iterator[Any]\n    The iterator.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [\"A\", \"B\", \"C\"])\n>>> string = \"\"\n>>> for val in column:\n...     string += val + \", \"\n>>> string\n'A, B, C, '",
        "full_docstring": "Create an iterator for the data of this column. This way e.g. for-each loops can be used on it.\n\nReturns\n-------\niterator : Iterator[Any]\n    The iterator.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [\"A\", \"B\", \"C\"])\n>>> string = \"\"\n>>> for val in column:\n...     string += val + \", \"\n>>> string\n'A, B, C, '"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_column/Column/__iter__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/__iter__/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/__len__",
      "name": "__len__",
      "docstring": {
        "description": "Return the size of the column.\n\nReturns\n-------\nn_rows : int\n    The size of the column.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])\n>>> len(column)\n3",
        "full_docstring": "Return the size of the column.\n\nReturns\n-------\nn_rows : int\n    The size of the column.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])\n>>> len(column)\n3"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_column/Column/__len__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/__len__/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/__repr__",
      "name": "__repr__",
      "docstring": {
        "description": "Return an unambiguous string representation of this column.\n\nReturns\n-------\nrepresentation : str\n    The string representation.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])\n>>> repr(column)\n\"Column('test', [1, 2, 3])\"",
        "full_docstring": "Return an unambiguous string representation of this column.\n\nReturns\n-------\nrepresentation : str\n    The string representation.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])\n>>> repr(column)\n\"Column('test', [1, 2, 3])\""
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_column/Column/__repr__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/__repr__/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/__sizeof__",
      "name": "__sizeof__",
      "docstring": {
        "description": "Return the complete size of this object.\n\nReturns\n-------\nSize of this object in bytes.",
        "full_docstring": "Return the complete size of this object.\n\nReturns\n-------\nSize of this object in bytes."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_column/Column/__sizeof__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/__sizeof__/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/__str__",
      "name": "__str__",
      "docstring": {
        "description": "Return a user-friendly string representation of this column.\n\nReturns\n-------\nrepresentation : str\n    The string representation.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])\n>>> str(column)\n\"'test': [1, 2, 3]\"",
        "full_docstring": "Return a user-friendly string representation of this column.\n\nReturns\n-------\nrepresentation : str\n    The string representation.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])\n>>> str(column)\n\"'test': [1, 2, 3]\""
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_column/Column/__str__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/__str__/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/_count_missing_values",
      "name": "_count_missing_values",
      "docstring": {
        "description": "Return the number of null values in the column.\n\nReturns\n-------\ncount : int\n    The number of null values.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"col_1\", [None, 'a', None])\n>>> column._count_missing_values()\n2",
        "full_docstring": "Return the number of null values in the column.\n\nReturns\n-------\ncount : int\n    The number of null values.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"col_1\", [None, 'a', None])\n>>> column._count_missing_values()\n2"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_column/Column/_count_missing_values/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/_count_missing_values/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/_from_pandas_series",
      "name": "_from_pandas_series",
      "docstring": {
        "description": "Create a column from a `pandas.Series`.\n\nParameters\n----------\ndata : pd.Series\n    The data.\ntype_ : ColumnType | None\n    The type. If None, the type is inferred from the data.\n\nReturns\n-------\ncolumn : Column\n    The created column.\n\nExamples\n--------\n>>> import pandas as pd\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column._from_pandas_series(pd.Series([1, 2, 3], name=\"test\"))",
        "full_docstring": "Create a column from a `pandas.Series`.\n\nParameters\n----------\ndata : pd.Series\n    The data.\ntype_ : ColumnType | None\n    The type. If None, the type is inferred from the data.\n\nReturns\n-------\ncolumn : Column\n    The created column.\n\nExamples\n--------\n>>> import pandas as pd\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column._from_pandas_series(pd.Series([1, 2, 3], name=\"test\"))"
      },
      "is_public": false,
      "is_static": true,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_column/Column/_from_pandas_series/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/_from_pandas_series/data",
        "safeds/data/tabular/containers/_column/Column/_from_pandas_series/type_"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/_repr_html_",
      "name": "_repr_html_",
      "docstring": {
        "description": "Return an HTML representation of the column.\n\nReturns\n-------\noutput : str\n    The generated HTML.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"col_1\", ['a', 'b', 'c'])\n>>> column._repr_html_()\n'<div>\\n<style scoped>\\n    .dataframe tbody tr th:only-of-type {\\n        vertical-align: middle;\\n    }\\n\\n    .dataframe tbody tr th {\\n        vertical-align: top;\\n    }\\n\\n    .dataframe thead th {\\n        text-align: right;\\n    }\\n</style>\\n<table border=\"1\" class=\"dataframe\">\\n  <thead>\\n    <tr style=\"text-align: right;\">\\n      <th></th>\\n      <th>col_1</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr>\\n      <th>0</th>\\n      <td>a</td>\\n    </tr>\\n    <tr>\\n      <th>1</th>\\n      <td>b</td>\\n    </tr>\\n    <tr>\\n      <th>2</th>\\n      <td>c</td>\\n    </tr>\\n  </tbody>\\n</table>\\n</div>'",
        "full_docstring": "Return an HTML representation of the column.\n\nReturns\n-------\noutput : str\n    The generated HTML.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"col_1\", ['a', 'b', 'c'])\n>>> column._repr_html_()\n'<div>\\n<style scoped>\\n    .dataframe tbody tr th:only-of-type {\\n        vertical-align: middle;\\n    }\\n\\n    .dataframe tbody tr th {\\n        vertical-align: top;\\n    }\\n\\n    .dataframe thead th {\\n        text-align: right;\\n    }\\n</style>\\n<table border=\"1\" class=\"dataframe\">\\n  <thead>\\n    <tr style=\"text-align: right;\">\\n      <th></th>\\n      <th>col_1</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr>\\n      <th>0</th>\\n      <td>a</td>\\n    </tr>\\n    <tr>\\n      <th>1</th>\\n      <td>b</td>\\n    </tr>\\n    <tr>\\n      <th>2</th>\\n      <td>c</td>\\n    </tr>\\n  </tbody>\\n</table>\\n</div>'"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_column/Column/_repr_html_/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/_repr_html_/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/all",
      "name": "all",
      "docstring": {
        "description": "Check if all values have a given property.\n\nParameters\n----------\npredicate : Callable[[T], bool])\n    Callable that is used to find matches.\n\nReturns\n-------\nresult : bool\n    True if all match.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])\n>>> column.all(lambda x: x < 4)\nTrue\n\n>>> column.all(lambda x: x < 2)\nFalse",
        "full_docstring": "Check if all values have a given property.\n\nParameters\n----------\npredicate : Callable[[T], bool])\n    Callable that is used to find matches.\n\nReturns\n-------\nresult : bool\n    True if all match.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])\n>>> column.all(lambda x: x < 4)\nTrue\n\n>>> column.all(lambda x: x < 2)\nFalse"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_column/Column/all/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/all/self",
        "safeds/data/tabular/containers/_column/Column/all/predicate"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/any",
      "name": "any",
      "docstring": {
        "description": "Check if any value has a given property.\n\nParameters\n----------\npredicate : Callable[[T], bool])\n    Callable that is used to find matches.\n\nReturns\n-------\nresult : bool\n    True if any match.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])\n>>> column.any(lambda x: x < 2)\nTrue\n\n>>> column.any(lambda x: x < 1)\nFalse",
        "full_docstring": "Check if any value has a given property.\n\nParameters\n----------\npredicate : Callable[[T], bool])\n    Callable that is used to find matches.\n\nReturns\n-------\nresult : bool\n    True if any match.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])\n>>> column.any(lambda x: x < 2)\nTrue\n\n>>> column.any(lambda x: x < 1)\nFalse"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_column/Column/any/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/any/self",
        "safeds/data/tabular/containers/_column/Column/any/predicate"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/correlation_with",
      "name": "correlation_with",
      "docstring": {
        "description": "Calculate Pearson correlation between this and another column. Both columns have to be numerical.\n\nReturns\n-------\ncorrelation : float\n    Correlation between the two columns.\n\nRaises\n------\nNonNumericColumnError\n    If one of the columns is not numerical.\nColumnLengthMismatchError\n    If the columns have different lengths.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column1 = Column(\"test\", [1, 2, 3])\n>>> column2 = Column(\"test\", [2, 4, 6])\n>>> column1.correlation_with(column2)\n1.0\n\n>>> column1 = Column(\"test\", [1, 2, 3])\n>>> column2 = Column(\"test\", [0.5, 4, -6])\n>>> column1.correlation_with(column2)\n-0.6404640308067906",
        "full_docstring": "Calculate Pearson correlation between this and another column. Both columns have to be numerical.\n\nReturns\n-------\ncorrelation : float\n    Correlation between the two columns.\n\nRaises\n------\nNonNumericColumnError\n    If one of the columns is not numerical.\nColumnLengthMismatchError\n    If the columns have different lengths.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column1 = Column(\"test\", [1, 2, 3])\n>>> column2 = Column(\"test\", [2, 4, 6])\n>>> column1.correlation_with(column2)\n1.0\n\n>>> column1 = Column(\"test\", [1, 2, 3])\n>>> column2 = Column(\"test\", [0.5, 4, -6])\n>>> column1.correlation_with(column2)\n-0.6404640308067906"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_column/Column/correlation_with/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/correlation_with/self",
        "safeds/data/tabular/containers/_column/Column/correlation_with/other_column"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/get_unique_values",
      "name": "get_unique_values",
      "docstring": {
        "description": "Return a list of all unique values in the column.\n\nReturns\n-------\nunique_values : list[T]\n    List of unique values in the column.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3, 2, 4, 3])\n>>> column.get_unique_values()\n[1, 2, 3, 4]",
        "full_docstring": "Return a list of all unique values in the column.\n\nReturns\n-------\nunique_values : list[T]\n    List of unique values in the column.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3, 2, 4, 3])\n>>> column.get_unique_values()\n[1, 2, 3, 4]"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_column/Column/get_unique_values/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/get_unique_values/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/get_value",
      "name": "get_value",
      "docstring": {
        "description": "Return column value at specified index, starting at 0.\n\nParameters\n----------\nindex : int\n    Index of requested element.\n\nReturns\n-------\nvalue\n    Value at index in column.\n\nRaises\n------\nIndexOutOfBoundsError\n    If the given index does not exist in the column.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])\n>>> column.get_value(1)\n2",
        "full_docstring": "Return column value at specified index, starting at 0.\n\nParameters\n----------\nindex : int\n    Index of requested element.\n\nReturns\n-------\nvalue\n    Value at index in column.\n\nRaises\n------\nIndexOutOfBoundsError\n    If the given index does not exist in the column.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])\n>>> column.get_value(1)\n2"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_column/Column/get_value/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/get_value/self",
        "safeds/data/tabular/containers/_column/Column/get_value/index"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/has_missing_values",
      "name": "has_missing_values",
      "docstring": {
        "description": "Return whether the column has missing values.\n\nReturns\n-------\nmissing_values_exist : bool\n    True if missing values exist.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column1 = Column(\"test\", [1, 2, 3, None])\n>>> column1.has_missing_values()\nTrue\n\n>>> column2 = Column(\"test\", [1, 2, 3])\n>>> column2.has_missing_values()\nFalse",
        "full_docstring": "Return whether the column has missing values.\n\nReturns\n-------\nmissing_values_exist : bool\n    True if missing values exist.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column1 = Column(\"test\", [1, 2, 3, None])\n>>> column1.has_missing_values()\nTrue\n\n>>> column2 = Column(\"test\", [1, 2, 3])\n>>> column2.has_missing_values()\nFalse"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_column/Column/has_missing_values/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/has_missing_values/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/idness",
      "name": "idness",
      "docstring": {
        "description": "Calculate the idness of this column.\n\nWe define the idness as follows:\n\n$$\n\\frac{\\text{number of different values}}{\\text{number of rows}}\n$$\n\nReturns\n-------\nidness : float\n    The idness of the column.\n\nRaises\n------\nColumnSizeError\n    If this column is empty.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column1 = Column(\"test\", [1, 2, 3])\n>>> column1.idness()\n1.0\n\n>>> column2 = Column(\"test\", [1, 2, 3, 2])\n>>> column2.idness()\n0.75",
        "full_docstring": "Calculate the idness of this column.\n\nWe define the idness as follows:\n\n$$\n\\frac{\\text{number of different values}}{\\text{number of rows}}\n$$\n\nReturns\n-------\nidness : float\n    The idness of the column.\n\nRaises\n------\nColumnSizeError\n    If this column is empty.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column1 = Column(\"test\", [1, 2, 3])\n>>> column1.idness()\n1.0\n\n>>> column2 = Column(\"test\", [1, 2, 3, 2])\n>>> column2.idness()\n0.75"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_column/Column/idness/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/idness/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/maximum",
      "name": "maximum",
      "docstring": {
        "description": "Return the maximum value of the column. The column has to be numerical.\n\nReturns\n-------\nmax : float\n    The maximum value.\n\nRaises\n------\nNonNumericColumnError\n    If the data contains non-numerical data.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])\n>>> column.maximum()\n3",
        "full_docstring": "Return the maximum value of the column. The column has to be numerical.\n\nReturns\n-------\nmax : float\n    The maximum value.\n\nRaises\n------\nNonNumericColumnError\n    If the data contains non-numerical data.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])\n>>> column.maximum()\n3"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_column/Column/maximum/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/maximum/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/mean",
      "name": "mean",
      "docstring": {
        "description": "Return the mean value of the column. The column has to be numerical.\n\nReturns\n-------\nmean : float\n    The mean value.\n\nRaises\n------\nNonNumericColumnError\n    If the data contains non-numerical data.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])\n>>> column.mean()\n2.0",
        "full_docstring": "Return the mean value of the column. The column has to be numerical.\n\nReturns\n-------\nmean : float\n    The mean value.\n\nRaises\n------\nNonNumericColumnError\n    If the data contains non-numerical data.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])\n>>> column.mean()\n2.0"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_column/Column/mean/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/mean/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/median",
      "name": "median",
      "docstring": {
        "description": "Return the median value of the column. The column has to be numerical.\n\nReturns\n-------\nmedian : float\n    The median value.\n\nRaises\n------\nNonNumericColumnError\n    If the data contains non-numerical data.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3, 4])\n>>> column.median()\n2.5\n\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3, 4, 5])\n>>> column.median()\n3.0",
        "full_docstring": "Return the median value of the column. The column has to be numerical.\n\nReturns\n-------\nmedian : float\n    The median value.\n\nRaises\n------\nNonNumericColumnError\n    If the data contains non-numerical data.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3, 4])\n>>> column.median()\n2.5\n\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3, 4, 5])\n>>> column.median()\n3.0"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_column/Column/median/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/median/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/minimum",
      "name": "minimum",
      "docstring": {
        "description": "Return the minimum value of the column. The column has to be numerical.\n\nReturns\n-------\nmin : float\n    The minimum value.\n\nRaises\n------\nNonNumericColumnError\n    If the data contains non-numerical data.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3, 4])\n>>> column.minimum()\n1",
        "full_docstring": "Return the minimum value of the column. The column has to be numerical.\n\nReturns\n-------\nmin : float\n    The minimum value.\n\nRaises\n------\nNonNumericColumnError\n    If the data contains non-numerical data.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3, 4])\n>>> column.minimum()\n1"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_column/Column/minimum/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/minimum/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/missing_value_ratio",
      "name": "missing_value_ratio",
      "docstring": {
        "description": "Return the ratio of missing values to the total number of elements in the column.\n\nReturns\n-------\nratio : float\n    The ratio of missing values to the total number of elements in the column.\n\nRaises\n------\nColumnSizeError\n    If the column is empty.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column1 = Column(\"test\", [1, 2, 3, 4])\n>>> column1.missing_value_ratio()\n0.0\n\n>>> column2 = Column(\"test\", [1, 2, 3, None])\n>>> column2.missing_value_ratio()\n0.25",
        "full_docstring": "Return the ratio of missing values to the total number of elements in the column.\n\nReturns\n-------\nratio : float\n    The ratio of missing values to the total number of elements in the column.\n\nRaises\n------\nColumnSizeError\n    If the column is empty.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column1 = Column(\"test\", [1, 2, 3, 4])\n>>> column1.missing_value_ratio()\n0.0\n\n>>> column2 = Column(\"test\", [1, 2, 3, None])\n>>> column2.missing_value_ratio()\n0.25"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_column/Column/missing_value_ratio/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/missing_value_ratio/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/mode",
      "name": "mode",
      "docstring": {
        "description": "Return the mode of the column.\n\nReturns\n-------\nmode: list[T]\n    Returns a list with the most common values.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column1 = Column(\"test\", [1, 2, 3, 3, 4])\n>>> column1.mode()\n[3]\n\n>>> column2 = Column(\"test\", [1, 2, 3, 3, 4, 4])\n>>> column2.mode()\n[3, 4]",
        "full_docstring": "Return the mode of the column.\n\nReturns\n-------\nmode: list[T]\n    Returns a list with the most common values.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column1 = Column(\"test\", [1, 2, 3, 3, 4])\n>>> column1.mode()\n[3]\n\n>>> column2 = Column(\"test\", [1, 2, 3, 3, 4, 4])\n>>> column2.mode()\n[3, 4]"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_column/Column/mode/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/mode/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/name",
      "name": "name",
      "docstring": {
        "description": "Return the name of the column.\n\nReturns\n-------\nname : str\n    The name of the column.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])\n>>> column.name\n'test'",
        "full_docstring": "Return the name of the column.\n\nReturns\n-------\nname : str\n    The name of the column.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])\n>>> column.name\n'test'"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/data/tabular/containers/_column/Column/name/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/name/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/none",
      "name": "none",
      "docstring": {
        "description": "Check if no values has a given property.\n\nParameters\n----------\npredicate : Callable[[T], bool])\n    Callable that is used to find matches.\n\nReturns\n-------\nresult : bool\n    True if none match.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column1 = Column(\"test\", [1, 2, 3])\n>>> column1.none(lambda x: x < 1)\nTrue\n\n>>> column2 = Column(\"test\", [1, 2, 3])\n>>> column2.none(lambda x: x > 1)\nFalse",
        "full_docstring": "Check if no values has a given property.\n\nParameters\n----------\npredicate : Callable[[T], bool])\n    Callable that is used to find matches.\n\nReturns\n-------\nresult : bool\n    True if none match.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column1 = Column(\"test\", [1, 2, 3])\n>>> column1.none(lambda x: x < 1)\nTrue\n\n>>> column2 = Column(\"test\", [1, 2, 3])\n>>> column2.none(lambda x: x > 1)\nFalse"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_column/Column/none/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/none/self",
        "safeds/data/tabular/containers/_column/Column/none/predicate"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/number_of_rows",
      "name": "number_of_rows",
      "docstring": {
        "description": "Return the number of elements in the column.\n\nReturns\n-------\nnumber_of_rows : int\n    The number of elements.",
        "full_docstring": "Return the number of elements in the column.\n\nReturns\n-------\nnumber_of_rows : int\n    The number of elements."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/data/tabular/containers/_column/Column/number_of_rows/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/number_of_rows/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/plot_boxplot",
      "name": "plot_boxplot",
      "docstring": {
        "description": "Plot this column in a boxplot. This function can only plot real numerical data.\n\nReturns\n-------\nplot: Image\n    The plot as an image.\n\nRaises\n------\nNonNumericColumnError\n    If the data contains non-numerical data.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])\n>>> boxplot = column.plot_boxplot()",
        "full_docstring": "Plot this column in a boxplot. This function can only plot real numerical data.\n\nReturns\n-------\nplot: Image\n    The plot as an image.\n\nRaises\n------\nNonNumericColumnError\n    If the data contains non-numerical data.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])\n>>> boxplot = column.plot_boxplot()"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_column/Column/plot_boxplot/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/plot_boxplot/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/plot_histogram",
      "name": "plot_histogram",
      "docstring": {
        "description": "Plot a column in a histogram.\n\nReturns\n-------\nplot: Image\n    The plot as an image.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])\n>>> histogram = column.plot_histogram()",
        "full_docstring": "Plot a column in a histogram.\n\nReturns\n-------\nplot: Image\n    The plot as an image.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])\n>>> histogram = column.plot_histogram()"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_column/Column/plot_histogram/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/plot_histogram/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/rename",
      "name": "rename",
      "docstring": {
        "description": "Return a new column with a new name.\n\nThe original column is not modified.\n\nParameters\n----------\nnew_name : str\n    The new name of the column.\n\nReturns\n-------\ncolumn : Column\n    A new column with the new name.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])\n>>> column.rename(\"new name\")\nColumn('new name', [1, 2, 3])",
        "full_docstring": "Return a new column with a new name.\n\nThe original column is not modified.\n\nParameters\n----------\nnew_name : str\n    The new name of the column.\n\nReturns\n-------\ncolumn : Column\n    A new column with the new name.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])\n>>> column.rename(\"new name\")\nColumn('new name', [1, 2, 3])"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_column/Column/rename/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/rename/self",
        "safeds/data/tabular/containers/_column/Column/rename/new_name"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/stability",
      "name": "stability",
      "docstring": {
        "description": "Calculate the stability of this column.\n\nWe define the stability as follows:\n\n$$\n\\frac{\\text{number of occurrences of most common non-null value}}{\\text{number of non-null values}}\n$$\n\nThe stability is not definded for a column with only null values.\n\nReturns\n-------\nstability : float\n    The stability of the column.\n\nRaises\n------\nColumnSizeError\n    If the column is empty.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column1 = Column(\"test\", [1, 1, 2, 3])\n>>> column1.stability()\n0.5\n\n>>> column2 = Column(\"test\", [1, 2, 2, 2, 3])\n>>> column2.stability()\n0.6",
        "full_docstring": "Calculate the stability of this column.\n\nWe define the stability as follows:\n\n$$\n\\frac{\\text{number of occurrences of most common non-null value}}{\\text{number of non-null values}}\n$$\n\nThe stability is not definded for a column with only null values.\n\nReturns\n-------\nstability : float\n    The stability of the column.\n\nRaises\n------\nColumnSizeError\n    If the column is empty.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column1 = Column(\"test\", [1, 1, 2, 3])\n>>> column1.stability()\n0.5\n\n>>> column2 = Column(\"test\", [1, 2, 2, 2, 3])\n>>> column2.stability()\n0.6"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_column/Column/stability/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/stability/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/standard_deviation",
      "name": "standard_deviation",
      "docstring": {
        "description": "Return the standard deviation of the column. The column has to be numerical.\n\nReturns\n-------\nsum : float\n    The standard deviation of all values.\n\nRaises\n------\nNonNumericColumnError\n    If the data contains non-numerical data.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column1 = Column(\"test\", [1, 2, 3])\n>>> column1.standard_deviation()\n1.0\n\n>>> column2 = Column(\"test\", [1, 2, 4, 8, 16])\n>>> column2.standard_deviation()\n6.099180272790763",
        "full_docstring": "Return the standard deviation of the column. The column has to be numerical.\n\nReturns\n-------\nsum : float\n    The standard deviation of all values.\n\nRaises\n------\nNonNumericColumnError\n    If the data contains non-numerical data.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column1 = Column(\"test\", [1, 2, 3])\n>>> column1.standard_deviation()\n1.0\n\n>>> column2 = Column(\"test\", [1, 2, 4, 8, 16])\n>>> column2.standard_deviation()\n6.099180272790763"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_column/Column/standard_deviation/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/standard_deviation/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/sum",
      "name": "sum",
      "docstring": {
        "description": "Return the sum of the column. The column has to be numerical.\n\nReturns\n-------\nsum : float\n    The sum of all values.\n\nRaises\n------\nNonNumericColumnError\n    If the data contains non-numerical data.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])\n>>> column.sum()\n6",
        "full_docstring": "Return the sum of the column. The column has to be numerical.\n\nReturns\n-------\nsum : float\n    The sum of all values.\n\nRaises\n------\nNonNumericColumnError\n    If the data contains non-numerical data.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])\n>>> column.sum()\n6"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_column/Column/sum/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/sum/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/to_html",
      "name": "to_html",
      "docstring": {
        "description": "Return an HTML representation of the column.\n\nReturns\n-------\noutput : str\n    The generated HTML.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])\n>>> column.to_html()\n'<table border=\"1\" class=\"dataframe\">\\n  <thead>\\n    <tr style=\"text-align: right;\">\\n      <th></th>\\n      <th>test</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr>\\n      <th>0</th>\\n      <td>1</td>\\n    </tr>\\n    <tr>\\n      <th>1</th>\\n      <td>2</td>\\n    </tr>\\n    <tr>\\n      <th>2</th>\\n      <td>3</td>\\n    </tr>\\n  </tbody>\\n</table>'",
        "full_docstring": "Return an HTML representation of the column.\n\nReturns\n-------\noutput : str\n    The generated HTML.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])\n>>> column.to_html()\n'<table border=\"1\" class=\"dataframe\">\\n  <thead>\\n    <tr style=\"text-align: right;\">\\n      <th></th>\\n      <th>test</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr>\\n      <th>0</th>\\n      <td>1</td>\\n    </tr>\\n    <tr>\\n      <th>1</th>\\n      <td>2</td>\\n    </tr>\\n    <tr>\\n      <th>2</th>\\n      <td>3</td>\\n    </tr>\\n  </tbody>\\n</table>'"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_column/Column/to_html/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/to_html/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/transform",
      "name": "transform",
      "docstring": {
        "description": "Apply a transform method to every data point.\n\nThe original column is not modified.\n\nParameters\n----------\ntransformer : Callable[[T], R]\n    Function that will be applied to all data points.\n\nReturns\n-------\ntransformed_column: Column\n    The transformed column.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> price = Column(\"price\", [4.99, 5.99, 2.49])\n>>> sale = price.transform(lambda amount: amount * 0.8)",
        "full_docstring": "Apply a transform method to every data point.\n\nThe original column is not modified.\n\nParameters\n----------\ntransformer : Callable[[T], R]\n    Function that will be applied to all data points.\n\nReturns\n-------\ntransformed_column: Column\n    The transformed column.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> price = Column(\"price\", [4.99, 5.99, 2.49])\n>>> sale = price.transform(lambda amount: amount * 0.8)"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_column/Column/transform/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/transform/self",
        "safeds/data/tabular/containers/_column/Column/transform/transformer"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/type",
      "name": "type",
      "docstring": {
        "description": "Return the type of the column.\n\nReturns\n-------\ntype : ColumnType\n    The type of the column.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])\n>>> column.type\nInteger\n\n>>> column = Column(\"test\", ['a', 'b', 'c'])\n>>> column.type\nString",
        "full_docstring": "Return the type of the column.\n\nReturns\n-------\ntype : ColumnType\n    The type of the column.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3])\n>>> column.type\nInteger\n\n>>> column = Column(\"test\", ['a', 'b', 'c'])\n>>> column.type\nString"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/data/tabular/containers/_column/Column/type/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/type/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/variance",
      "name": "variance",
      "docstring": {
        "description": "Return the variance of the column. The column has to be numerical.\n\nReturns\n-------\nsum : float\n    The variance of all values.\n\nRaises\n------\nNonNumericColumnError\n    If the data contains non-numerical data.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3, 4, 5])\n>>> column.variance()\n2.5",
        "full_docstring": "Return the variance of the column. The column has to be numerical.\n\nReturns\n-------\nsum : float\n    The variance of all values.\n\nRaises\n------\nNonNumericColumnError\n    If the data contains non-numerical data.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column\n>>> column = Column(\"test\", [1, 2, 3, 4, 5])\n>>> column.variance()\n2.5"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_column/Column/variance/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_column/Column/variance/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/__contains__",
      "name": "__contains__",
      "docstring": {
        "description": "Check whether the row contains an object as key.\n\nParameters\n----------\nobj : Any\n    The object.\n\nReturns\n-------\nhas_column : bool\n    True, if the row contains the object as key, False otherwise.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row({\"a\": 1, \"b\": 2})\n>>> \"a\" in row\nTrue\n\n>>> \"c\" in row\nFalse",
        "full_docstring": "Check whether the row contains an object as key.\n\nParameters\n----------\nobj : Any\n    The object.\n\nReturns\n-------\nhas_column : bool\n    True, if the row contains the object as key, False otherwise.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row({\"a\": 1, \"b\": 2})\n>>> \"a\" in row\nTrue\n\n>>> \"c\" in row\nFalse"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_row/Row/__contains__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_row/Row/__contains__/self",
        "safeds/data/tabular/containers/_row/Row/__contains__/obj"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/__eq__",
      "name": "__eq__",
      "docstring": {
        "description": "Check whether this row is equal to another object.\n\nParameters\n----------\nother : Any\n    The other object.\n\nReturns\n-------\nequal : bool\n    True if the other object is an identical row. False if the other object is a different row. NotImplemented\n    if the other object is not a row.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row1 = Row({\"a\": 1, \"b\": 2})\n>>> row2 = Row({\"a\": 1, \"b\": 2})\n>>> row1 == row2\nTrue\n\n>>> row3 = Row({\"a\": 1, \"b\": 3})\n>>> row1 == row3\nFalse",
        "full_docstring": "Check whether this row is equal to another object.\n\nParameters\n----------\nother : Any\n    The other object.\n\nReturns\n-------\nequal : bool\n    True if the other object is an identical row. False if the other object is a different row. NotImplemented\n    if the other object is not a row.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row1 = Row({\"a\": 1, \"b\": 2})\n>>> row2 = Row({\"a\": 1, \"b\": 2})\n>>> row1 == row2\nTrue\n\n>>> row3 = Row({\"a\": 1, \"b\": 3})\n>>> row1 == row3\nFalse"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_row/Row/__eq__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_row/Row/__eq__/self",
        "safeds/data/tabular/containers/_row/Row/__eq__/other"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/__getitem__",
      "name": "__getitem__",
      "docstring": {
        "description": "Return the value of a specified column.\n\nParameters\n----------\ncolumn_name : str\n    The column name.\n\nReturns\n-------\nvalue : Any\n    The column value.\n\nRaises\n------\nUnknownColumnNameError\n    If the row does not contain the specified column.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row({\"a\": 1, \"b\": 2})\n>>> row[\"a\"]\n1",
        "full_docstring": "Return the value of a specified column.\n\nParameters\n----------\ncolumn_name : str\n    The column name.\n\nReturns\n-------\nvalue : Any\n    The column value.\n\nRaises\n------\nUnknownColumnNameError\n    If the row does not contain the specified column.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row({\"a\": 1, \"b\": 2})\n>>> row[\"a\"]\n1"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_row/Row/__getitem__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_row/Row/__getitem__/self",
        "safeds/data/tabular/containers/_row/Row/__getitem__/column_name"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/__init__",
      "name": "__init__",
      "docstring": {
        "description": "Create a row from a mapping of column names to column values.\n\nParameters\n----------\ndata : Mapping[str, Any] | None\n    The data. If None, an empty row is created.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row({\"a\": 1, \"b\": 2})",
        "full_docstring": "Create a row from a mapping of column names to column values.\n\nParameters\n----------\ndata : Mapping[str, Any] | None\n    The data. If None, an empty row is created.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row({\"a\": 1, \"b\": 2})"
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_row/Row/__init__/self",
        "safeds/data/tabular/containers/_row/Row/__init__/data"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/__iter__",
      "name": "__iter__",
      "docstring": {
        "description": "Create an iterator for the column names of this row.\n\nReturns\n-------\niterator : Iterator[Any]\n    The iterator.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row({\"a\": 1, \"b\": 2})\n>>> list(row)\n['a', 'b']",
        "full_docstring": "Create an iterator for the column names of this row.\n\nReturns\n-------\niterator : Iterator[Any]\n    The iterator.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row({\"a\": 1, \"b\": 2})\n>>> list(row)\n['a', 'b']"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_row/Row/__iter__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_row/Row/__iter__/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/__len__",
      "name": "__len__",
      "docstring": {
        "description": "Return the number of columns in this row.\n\nReturns\n-------\nnumber_of_columns : int\n    The number of columns.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row({\"a\": 1, \"b\": 2})\n>>> len(row)\n2",
        "full_docstring": "Return the number of columns in this row.\n\nReturns\n-------\nnumber_of_columns : int\n    The number of columns.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row({\"a\": 1, \"b\": 2})\n>>> len(row)\n2"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_row/Row/__len__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_row/Row/__len__/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/__repr__",
      "name": "__repr__",
      "docstring": {
        "description": "Return an unambiguous string representation of this row.\n\nReturns\n-------\nrepresentation : str\n    The string representation.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row({\"a\": 1})\n>>> repr(row)\n\"Row({'a': 1})\"",
        "full_docstring": "Return an unambiguous string representation of this row.\n\nReturns\n-------\nrepresentation : str\n    The string representation.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row({\"a\": 1})\n>>> repr(row)\n\"Row({'a': 1})\""
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_row/Row/__repr__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_row/Row/__repr__/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/__sizeof__",
      "name": "__sizeof__",
      "docstring": {
        "description": "Return the complete size of this object.\n\nReturns\n-------\nSize of this object in bytes.",
        "full_docstring": "Return the complete size of this object.\n\nReturns\n-------\nSize of this object in bytes."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_row/Row/__sizeof__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_row/Row/__sizeof__/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/__str__",
      "name": "__str__",
      "docstring": {
        "description": "Return a user-friendly string representation of this row.\n\nReturns\n-------\nrepresentation : str\n    The string representation.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row({\"a\": 1})\n>>> str(row)\n\"{'a': 1}\"",
        "full_docstring": "Return a user-friendly string representation of this row.\n\nReturns\n-------\nrepresentation : str\n    The string representation.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row({\"a\": 1})\n>>> str(row)\n\"{'a': 1}\""
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_row/Row/__str__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_row/Row/__str__/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/_from_pandas_dataframe",
      "name": "_from_pandas_dataframe",
      "docstring": {
        "description": "Create a row from a `pandas.DataFrame`.\n\nParameters\n----------\ndata : pd.DataFrame\n    The data.\nschema : Schema | None\n    The schema. If None, the schema is inferred from the data.\n\nReturns\n-------\nrow : Row\n    The created row.\n\nRaises\n------\nValueError\n    If the dataframe does not contain exactly one row.\n\nExamples\n--------\n>>> import pandas as pd\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row._from_pandas_dataframe(pd.DataFrame({\"a\": [1], \"b\": [2]}))",
        "full_docstring": "Create a row from a `pandas.DataFrame`.\n\nParameters\n----------\ndata : pd.DataFrame\n    The data.\nschema : Schema | None\n    The schema. If None, the schema is inferred from the data.\n\nReturns\n-------\nrow : Row\n    The created row.\n\nRaises\n------\nValueError\n    If the dataframe does not contain exactly one row.\n\nExamples\n--------\n>>> import pandas as pd\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row._from_pandas_dataframe(pd.DataFrame({\"a\": [1], \"b\": [2]}))"
      },
      "is_public": false,
      "is_static": true,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_row/Row/_from_pandas_dataframe/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_row/Row/_from_pandas_dataframe/data",
        "safeds/data/tabular/containers/_row/Row/_from_pandas_dataframe/schema"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/_repr_html_",
      "name": "_repr_html_",
      "docstring": {
        "description": "Return an HTML representation of the row.\n\nReturns\n-------\noutput : str\n    The generated HTML.",
        "full_docstring": "Return an HTML representation of the row.\n\nReturns\n-------\noutput : str\n    The generated HTML."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_row/Row/_repr_html_/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_row/Row/_repr_html_/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/column_names",
      "name": "column_names",
      "docstring": {
        "description": "Return a list of all column names in the row.\n\nReturns\n-------\ncolumn_names : list[str]\n    The column names.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row({\"a\": 1, \"b\": 2})\n>>> row.column_names\n['a', 'b']",
        "full_docstring": "Return a list of all column names in the row.\n\nReturns\n-------\ncolumn_names : list[str]\n    The column names.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row({\"a\": 1, \"b\": 2})\n>>> row.column_names\n['a', 'b']"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/data/tabular/containers/_row/Row/column_names/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_row/Row/column_names/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/from_dict",
      "name": "from_dict",
      "docstring": {
        "description": "Create a row from a dictionary that maps column names to column values.\n\nParameters\n----------\ndata : dict[str, Any]\n    The data.\n\nReturns\n-------\nrow : Row\n    The created row.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row.from_dict({\"a\": 1, \"b\": 2})",
        "full_docstring": "Create a row from a dictionary that maps column names to column values.\n\nParameters\n----------\ndata : dict[str, Any]\n    The data.\n\nReturns\n-------\nrow : Row\n    The created row.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row.from_dict({\"a\": 1, \"b\": 2})"
      },
      "is_public": false,
      "is_static": true,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_row/Row/from_dict/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_row/Row/from_dict/data"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/get_column_type",
      "name": "get_column_type",
      "docstring": {
        "description": "Return the type of the specified column.\n\nParameters\n----------\ncolumn_name : str\n    The column name.\n\nReturns\n-------\ntype : ColumnType\n    The type of the column.\n\nRaises\n------\nUnknownColumnNameError\n    If the row does not contain the specified column.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row({\"a\": 1, \"b\": 2})\n>>> row.get_column_type(\"a\")\nInteger",
        "full_docstring": "Return the type of the specified column.\n\nParameters\n----------\ncolumn_name : str\n    The column name.\n\nReturns\n-------\ntype : ColumnType\n    The type of the column.\n\nRaises\n------\nUnknownColumnNameError\n    If the row does not contain the specified column.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row({\"a\": 1, \"b\": 2})\n>>> row.get_column_type(\"a\")\nInteger"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_row/Row/get_column_type/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_row/Row/get_column_type/self",
        "safeds/data/tabular/containers/_row/Row/get_column_type/column_name"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/get_value",
      "name": "get_value",
      "docstring": {
        "description": "Return the value of a specified column.\n\nParameters\n----------\ncolumn_name : str\n    The column name.\n\nReturns\n-------\nvalue : Any\n    The column value.\n\nRaises\n------\nUnknownColumnNameError\n    If the row does not contain the specified column.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row({\"a\": 1, \"b\": 2})\n>>> row.get_value(\"a\")\n1",
        "full_docstring": "Return the value of a specified column.\n\nParameters\n----------\ncolumn_name : str\n    The column name.\n\nReturns\n-------\nvalue : Any\n    The column value.\n\nRaises\n------\nUnknownColumnNameError\n    If the row does not contain the specified column.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row({\"a\": 1, \"b\": 2})\n>>> row.get_value(\"a\")\n1"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_row/Row/get_value/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_row/Row/get_value/self",
        "safeds/data/tabular/containers/_row/Row/get_value/column_name"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/has_column",
      "name": "has_column",
      "docstring": {
        "description": "Check whether the row contains a given column.\n\nParameters\n----------\ncolumn_name : str\n    The column name.\n\nReturns\n-------\nhas_column : bool\n    True, if the row contains the column, False otherwise.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row({\"a\": 1, \"b\": 2})\n>>> row.has_column(\"a\")\nTrue\n\n>>> row.has_column(\"c\")\nFalse",
        "full_docstring": "Check whether the row contains a given column.\n\nParameters\n----------\ncolumn_name : str\n    The column name.\n\nReturns\n-------\nhas_column : bool\n    True, if the row contains the column, False otherwise.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row({\"a\": 1, \"b\": 2})\n>>> row.has_column(\"a\")\nTrue\n\n>>> row.has_column(\"c\")\nFalse"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_row/Row/has_column/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_row/Row/has_column/self",
        "safeds/data/tabular/containers/_row/Row/has_column/column_name"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/number_of_column",
      "name": "number_of_column",
      "docstring": {
        "description": "Return the number of columns in this row.\n\nReturns\n-------\nnumber_of_column : int\n    The number of columns.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row({\"a\": 1, \"b\": 2})\n>>> row.number_of_column\n2",
        "full_docstring": "Return the number of columns in this row.\n\nReturns\n-------\nnumber_of_column : int\n    The number of columns.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row({\"a\": 1, \"b\": 2})\n>>> row.number_of_column\n2"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/data/tabular/containers/_row/Row/number_of_column/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_row/Row/number_of_column/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/schema",
      "name": "schema",
      "docstring": {
        "description": "Return the schema of the row.\n\nReturns\n-------\nschema : Schema\n    The schema.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row({\"a\": 1, \"b\": 2})\n>>> schema = row.schema",
        "full_docstring": "Return the schema of the row.\n\nReturns\n-------\nschema : Schema\n    The schema.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row({\"a\": 1, \"b\": 2})\n>>> schema = row.schema"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/data/tabular/containers/_row/Row/schema/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_row/Row/schema/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/sort_columns",
      "name": "sort_columns",
      "docstring": {
        "description": "Sort the columns of a `Row` with the given comparator and return a new `Row`.\n\nThe original row is not modified. The comparator is a function that takes two tuples of (ColumnName,\nValue) `col1` and `col2` and returns an integer:\n\n* If `col1` should be ordered before `col2`, the function should return a negative number.\n* If `col1` should be ordered after `col2`, the function should return a positive number.\n* If the original order of `col1` and `col2` should be kept, the function should return 0.\n\nIf no comparator is given, the columns will be sorted alphabetically by their name.\n\nParameters\n----------\ncomparator : Callable[[tuple, tuple], int]\n    The function used to compare two tuples of (ColumnName, Value).\n\nReturns\n-------\nnew_row : Row\n    A new row with sorted columns.",
        "full_docstring": "Sort the columns of a `Row` with the given comparator and return a new `Row`.\n\nThe original row is not modified. The comparator is a function that takes two tuples of (ColumnName,\nValue) `col1` and `col2` and returns an integer:\n\n* If `col1` should be ordered before `col2`, the function should return a negative number.\n* If `col1` should be ordered after `col2`, the function should return a positive number.\n* If the original order of `col1` and `col2` should be kept, the function should return 0.\n\nIf no comparator is given, the columns will be sorted alphabetically by their name.\n\nParameters\n----------\ncomparator : Callable[[tuple, tuple], int]\n    The function used to compare two tuples of (ColumnName, Value).\n\nReturns\n-------\nnew_row : Row\n    A new row with sorted columns."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_row/Row/sort_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_row/Row/sort_columns/self",
        "safeds/data/tabular/containers/_row/Row/sort_columns/comparator"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/to_dict",
      "name": "to_dict",
      "docstring": {
        "description": "Return a dictionary that maps column names to column values.\n\nReturns\n-------\ndata : dict[str, Any]\n    Dictionary representation of the row.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row({\"a\": 1, \"b\": 2})\n>>> row.to_dict()\n{'a': 1, 'b': 2}",
        "full_docstring": "Return a dictionary that maps column names to column values.\n\nReturns\n-------\ndata : dict[str, Any]\n    Dictionary representation of the row.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row({\"a\": 1, \"b\": 2})\n>>> row.to_dict()\n{'a': 1, 'b': 2}"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_row/Row/to_dict/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_row/Row/to_dict/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/to_html",
      "name": "to_html",
      "docstring": {
        "description": "Return an HTML representation of the row.\n\nReturns\n-------\noutput : str\n    The generated HTML.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row({\"a\": 1, \"b\": 2})\n>>> html = row.to_html()",
        "full_docstring": "Return an HTML representation of the row.\n\nReturns\n-------\noutput : str\n    The generated HTML.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row\n>>> row = Row({\"a\": 1, \"b\": 2})\n>>> html = row.to_html()"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_row/Row/to_html/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_row/Row/to_html/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/__dataframe__",
      "name": "__dataframe__",
      "docstring": {
        "description": "Return a DataFrame exchange object that conforms to the dataframe interchange protocol.\n\nGenerally, there is no reason to call this method directly. The dataframe interchange protocol is designed to\nallow libraries to consume tabular data from different sources, such as `pandas` or `polars`. If you still\ndecide to call this method, you should not rely on any capabilities of the returned object beyond the dataframe\ninterchange protocol.\n\nThe specification of the dataframe interchange protocol can be found on\n[GitHub](https://github.com/data-apis/dataframe-api).\n\nParameters\n----------\nnan_as_null : bool\n    Whether to replace missing values in the data with `NaN`.\nallow_copy : bool\n    Whether memory may be copied to create the DataFrame exchange object.\n\nReturns\n-------\ndataframe\n    A DataFrame object that conforms to the dataframe interchange protocol.",
        "full_docstring": "Return a DataFrame exchange object that conforms to the dataframe interchange protocol.\n\nGenerally, there is no reason to call this method directly. The dataframe interchange protocol is designed to\nallow libraries to consume tabular data from different sources, such as `pandas` or `polars`. If you still\ndecide to call this method, you should not rely on any capabilities of the returned object beyond the dataframe\ninterchange protocol.\n\nThe specification of the dataframe interchange protocol can be found on\n[GitHub](https://github.com/data-apis/dataframe-api).\n\nParameters\n----------\nnan_as_null : bool\n    Whether to replace missing values in the data with `NaN`.\nallow_copy : bool\n    Whether memory may be copied to create the DataFrame exchange object.\n\nReturns\n-------\ndataframe\n    A DataFrame object that conforms to the dataframe interchange protocol."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/__dataframe__/self",
        "safeds/data/tabular/containers/_table/Table/__dataframe__/nan_as_null",
        "safeds/data/tabular/containers/_table/Table/__dataframe__/allow_copy"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/__eq__",
      "name": "__eq__",
      "docstring": {
        "description": "Compare two table instances.\n\nReturns\n-------\n'True' if contents are equal, 'False' otherwise.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row, Table\n>>> row1 = Row({\"a\": 1, \"b\": 2})\n>>> row2 = Row({\"a\": 3, \"b\": 4})\n>>> row3 = Row({\"a\": 5, \"b\": 6})\n>>> table1 = Table.from_rows([row1, row2])\n>>> table2 = Table.from_rows([row1, row2])\n>>> table3 = Table.from_rows([row1, row3])\n>>> table1 == table2\nTrue\n>>> table1 == table3\nFalse",
        "full_docstring": "Compare two table instances.\n\nReturns\n-------\n'True' if contents are equal, 'False' otherwise.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row, Table\n>>> row1 = Row({\"a\": 1, \"b\": 2})\n>>> row2 = Row({\"a\": 3, \"b\": 4})\n>>> row3 = Row({\"a\": 5, \"b\": 6})\n>>> table1 = Table.from_rows([row1, row2])\n>>> table2 = Table.from_rows([row1, row2])\n>>> table3 = Table.from_rows([row1, row3])\n>>> table1 == table2\nTrue\n>>> table1 == table3\nFalse"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/__eq__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/__eq__/self",
        "safeds/data/tabular/containers/_table/Table/__eq__/other"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/__init__",
      "name": "__init__",
      "docstring": {
        "description": "Create a table from a mapping of column names to their values.\n\nParameters\n----------\ndata : Mapping[str, Sequence[Any]] | None\n    The data. If None, an empty table is created.\n\nRaises\n------\nColumnLengthMismatchError\n    If columns have different lengths.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> Table({\"a\": [1, 2, 3], \"b\": [4, 5, 6]})\n   a  b\n0  1  4\n1  2  5\n2  3  6",
        "full_docstring": "Create a table from a mapping of column names to their values.\n\nParameters\n----------\ndata : Mapping[str, Sequence[Any]] | None\n    The data. If None, an empty table is created.\n\nRaises\n------\nColumnLengthMismatchError\n    If columns have different lengths.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> Table({\"a\": [1, 2, 3], \"b\": [4, 5, 6]})\n   a  b\n0  1  4\n1  2  5\n2  3  6"
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/__init__/self",
        "safeds/data/tabular/containers/_table/Table/__init__/data"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/__repr__",
      "name": "__repr__",
      "docstring": {
        "description": "Display the table in only one line.\n\nReturns\n-------\nA string representation of the table in only one line.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1, 3], \"b\": [2, 4]})\n>>> repr(table)\n'   a  b\\n0  1  2\\n1  3  4'",
        "full_docstring": "Display the table in only one line.\n\nReturns\n-------\nA string representation of the table in only one line.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1, 3], \"b\": [2, 4]})\n>>> repr(table)\n'   a  b\\n0  1  2\\n1  3  4'"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/__repr__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/__repr__/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/__sizeof__",
      "name": "__sizeof__",
      "docstring": {
        "description": "Return the complete size of this object.\n\nReturns\n-------\nSize of this object in bytes.",
        "full_docstring": "Return the complete size of this object.\n\nReturns\n-------\nSize of this object in bytes."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/__sizeof__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/__sizeof__/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/__str__",
      "name": "__str__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/__str__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/__str__/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/_as_table",
      "name": "_as_table",
      "docstring": {
        "description": "Transform the table to an instance of the Table class.\n\nThis method is meant as a way to \"cast\" instances of subclasses of `Table` to a proper `Table`, dropping any\nadditional constraints that might have to hold in the subclass. Override accordingly in subclasses.\n\nReturns\n-------\ntable: Table\n    The table, as an instance of the Table class.",
        "full_docstring": "Transform the table to an instance of the Table class.\n\nThis method is meant as a way to \"cast\" instances of subclasses of `Table` to a proper `Table`, dropping any\nadditional constraints that might have to hold in the subclass. Override accordingly in subclasses.\n\nReturns\n-------\ntable: Table\n    The table, as an instance of the Table class."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/_as_table/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/_as_table/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/_from_pandas_dataframe",
      "name": "_from_pandas_dataframe",
      "docstring": {
        "description": "Create a table from a `pandas.DataFrame`.\n\nParameters\n----------\ndata : pd.DataFrame\n    The data.\nschema : Schema | None\n    The schema. If None, the schema is inferred from the data.\n\nReturns\n-------\ntable : Table\n    The created table.\n\nExamples\n--------\n>>> import pandas as pd\n>>> from safeds.data.tabular.containers import Table\n>>> Table._from_pandas_dataframe(pd.DataFrame({\"a\": [1], \"b\": [2]}))\n   a  b\n0  1  2",
        "full_docstring": "Create a table from a `pandas.DataFrame`.\n\nParameters\n----------\ndata : pd.DataFrame\n    The data.\nschema : Schema | None\n    The schema. If None, the schema is inferred from the data.\n\nReturns\n-------\ntable : Table\n    The created table.\n\nExamples\n--------\n>>> import pandas as pd\n>>> from safeds.data.tabular.containers import Table\n>>> Table._from_pandas_dataframe(pd.DataFrame({\"a\": [1], \"b\": [2]}))\n   a  b\n0  1  2"
      },
      "is_public": false,
      "is_static": true,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/_from_pandas_dataframe/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/_from_pandas_dataframe/data",
        "safeds/data/tabular/containers/_table/Table/_from_pandas_dataframe/schema"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/_get_similar_columns",
      "name": "_get_similar_columns",
      "docstring": {
        "description": "Get all the column names in a Table that are similar to a given name.\n\nParameters\n----------\ncolumn_name : str\n    The name to compare the Table's column names to.\n\nReturns\n-------\nsimilar_columns: list[str]\n    A list of all column names in the Table that are similar or equal to the given column name.",
        "full_docstring": "Get all the column names in a Table that are similar to a given name.\n\nParameters\n----------\ncolumn_name : str\n    The name to compare the Table's column names to.\n\nReturns\n-------\nsimilar_columns: list[str]\n    A list of all column names in the Table that are similar or equal to the given column name."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/_get_similar_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/_get_similar_columns/self",
        "safeds/data/tabular/containers/_table/Table/_get_similar_columns/column_name"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/_repr_html_",
      "name": "_repr_html_",
      "docstring": {
        "description": "Return an HTML representation of the table.\n\nReturns\n-------\noutput : str\n    The generated HTML.",
        "full_docstring": "Return an HTML representation of the table.\n\nReturns\n-------\noutput : str\n    The generated HTML."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/_repr_html_/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/_repr_html_/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/add_column",
      "name": "add_column",
      "docstring": {
        "description": "Return a new table with the provided column attached at the end.\n\nThe original table is not modified.\n\nReturns\n-------\nresult : Table\n    The table with the column attached.\n\nRaises\n------\nDuplicateColumnNameError\n    If the new column already exists.\nColumnSizeError\n    If the size of the column does not match the number of rows.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1, 3], \"b\": [2, 4]})\n>>> col = Column(\"c\", [\"d\", \"e\"])\n>>> table.add_column(col)\n   a  b  c\n0  1  2  d\n1  3  4  e",
        "full_docstring": "Return a new table with the provided column attached at the end.\n\nThe original table is not modified.\n\nReturns\n-------\nresult : Table\n    The table with the column attached.\n\nRaises\n------\nDuplicateColumnNameError\n    If the new column already exists.\nColumnSizeError\n    If the size of the column does not match the number of rows.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1, 3], \"b\": [2, 4]})\n>>> col = Column(\"c\", [\"d\", \"e\"])\n>>> table.add_column(col)\n   a  b  c\n0  1  2  d\n1  3  4  e"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/add_column/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/add_column/self",
        "safeds/data/tabular/containers/_table/Table/add_column/column"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/add_columns",
      "name": "add_columns",
      "docstring": {
        "description": "Return a new `Table` with multiple added columns.\n\nThe original table is not modified.\n\nParameters\n----------\ncolumns : list[Column] or Table\n    The columns to be added.\n\nReturns\n-------\nresult: Table\n    A new table combining the original table and the given columns.\n\nRaises\n------\nDuplicateColumnNameError\n    If at least one column name from the provided column list already exists in the table.\nColumnSizeError\n    If at least one of the column sizes from the provided column list does not match the table.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column, Table\n>>> table = Table.from_dict({\"a\": [1, 3], \"b\": [2, 4]})\n>>> col1 = Column(\"c\", [\"d\", \"e\"])\n>>> col2 = Column(\"d\", [3.5, 7.9])\n>>> table.add_columns([col1, col2])\n   a  b  c    d\n0  1  2  d  3.5\n1  3  4  e  7.9",
        "full_docstring": "Return a new `Table` with multiple added columns.\n\nThe original table is not modified.\n\nParameters\n----------\ncolumns : list[Column] or Table\n    The columns to be added.\n\nReturns\n-------\nresult: Table\n    A new table combining the original table and the given columns.\n\nRaises\n------\nDuplicateColumnNameError\n    If at least one column name from the provided column list already exists in the table.\nColumnSizeError\n    If at least one of the column sizes from the provided column list does not match the table.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column, Table\n>>> table = Table.from_dict({\"a\": [1, 3], \"b\": [2, 4]})\n>>> col1 = Column(\"c\", [\"d\", \"e\"])\n>>> col2 = Column(\"d\", [3.5, 7.9])\n>>> table.add_columns([col1, col2])\n   a  b  c    d\n0  1  2  d  3.5\n1  3  4  e  7.9"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/add_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/add_columns/self",
        "safeds/data/tabular/containers/_table/Table/add_columns/columns"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/add_row",
      "name": "add_row",
      "docstring": {
        "description": "Return a new `Table` with an added Row attached.\n\nIf the table happens to be empty beforehand, respective columns will be added automatically.\n\nThe order of columns of the new row will be adjusted to the order of columns in the table.\nThe new table will contain the merged schema.\n\nThe original table is not modified.\n\nParameters\n----------\nrow : Row\n    The row to be added.\n\nReturns\n-------\ntable : Table\n    A new table with the added row at the end.\n\nRaises\n------\nUnknownColumnNameError\n    If the row has different column names than the table.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row, Table\n>>> table = Table.from_dict({\"a\": [1], \"b\": [2]})\n>>> row = Row.from_dict({\"a\": 3, \"b\": 4})\n>>> table.add_row(row)\n   a  b\n0  1  2\n1  3  4",
        "full_docstring": "Return a new `Table` with an added Row attached.\n\nIf the table happens to be empty beforehand, respective columns will be added automatically.\n\nThe order of columns of the new row will be adjusted to the order of columns in the table.\nThe new table will contain the merged schema.\n\nThe original table is not modified.\n\nParameters\n----------\nrow : Row\n    The row to be added.\n\nReturns\n-------\ntable : Table\n    A new table with the added row at the end.\n\nRaises\n------\nUnknownColumnNameError\n    If the row has different column names than the table.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row, Table\n>>> table = Table.from_dict({\"a\": [1], \"b\": [2]})\n>>> row = Row.from_dict({\"a\": 3, \"b\": 4})\n>>> table.add_row(row)\n   a  b\n0  1  2\n1  3  4"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/add_row/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/add_row/self",
        "safeds/data/tabular/containers/_table/Table/add_row/row"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/add_rows",
      "name": "add_rows",
      "docstring": {
        "description": "Return a new `Table` with multiple added Rows attached.\n\nThe order of columns of the new rows will be adjusted to the order of columns in the table.\nThe new table will contain the merged schema.\n\nThe original table is not modified.\n\nParameters\n----------\nrows : list[Row] or Table\n    The rows to be added.\n\nReturns\n-------\nresult : Table\n    A new table which combines the original table and the given rows.\n\nRaises\n------\nUnknownColumnNameError\n    If at least one of the rows have different column names than the table.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row, Table\n>>> table = Table.from_dict({\"a\": [1], \"b\": [2]})\n>>> row1 = Row.from_dict({\"a\": 3, \"b\": 4})\n>>> row2 = Row.from_dict({\"a\": 5, \"b\": 6})\n>>> table.add_rows([row1, row2])\n   a  b\n0  1  2\n1  3  4\n2  5  6",
        "full_docstring": "Return a new `Table` with multiple added Rows attached.\n\nThe order of columns of the new rows will be adjusted to the order of columns in the table.\nThe new table will contain the merged schema.\n\nThe original table is not modified.\n\nParameters\n----------\nrows : list[Row] or Table\n    The rows to be added.\n\nReturns\n-------\nresult : Table\n    A new table which combines the original table and the given rows.\n\nRaises\n------\nUnknownColumnNameError\n    If at least one of the rows have different column names than the table.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row, Table\n>>> table = Table.from_dict({\"a\": [1], \"b\": [2]})\n>>> row1 = Row.from_dict({\"a\": 3, \"b\": 4})\n>>> row2 = Row.from_dict({\"a\": 5, \"b\": 6})\n>>> table.add_rows([row1, row2])\n   a  b\n0  1  2\n1  3  4\n2  5  6"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/add_rows/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/add_rows/self",
        "safeds/data/tabular/containers/_table/Table/add_rows/rows"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/column_names",
      "name": "column_names",
      "docstring": {
        "description": "Return a list of all column names in this table.\n\nAlias for self.schema.column_names -> list[str].\n\nReturns\n-------\ncolumn_names : list[str]\n    The list of the column names.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"col1\": [1, 3], \"col2\": [2, 4]})\n>>> table.column_names\n['col1', 'col2']",
        "full_docstring": "Return a list of all column names in this table.\n\nAlias for self.schema.column_names -> list[str].\n\nReturns\n-------\ncolumn_names : list[str]\n    The list of the column names.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"col1\": [1, 3], \"col2\": [2, 4]})\n>>> table.column_names\n['col1', 'col2']"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/data/tabular/containers/_table/Table/column_names/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/column_names/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/filter_rows",
      "name": "filter_rows",
      "docstring": {
        "description": "Return a new table with rows filtered by Callable (e.g. lambda function).\n\nThe original table is not modified.\n\nParameters\n----------\nquery : lambda function\n    A Callable that is applied to all rows.\n\nReturns\n-------\ntable : Table\n    A table containing only the rows filtered by the query.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1, 3], \"b\": [2, 4]})\n>>> table.filter_rows(lambda x: x[\"a\"] < 2)\n   a  b\n0  1  2",
        "full_docstring": "Return a new table with rows filtered by Callable (e.g. lambda function).\n\nThe original table is not modified.\n\nParameters\n----------\nquery : lambda function\n    A Callable that is applied to all rows.\n\nReturns\n-------\ntable : Table\n    A table containing only the rows filtered by the query.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1, 3], \"b\": [2, 4]})\n>>> table.filter_rows(lambda x: x[\"a\"] < 2)\n   a  b\n0  1  2"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/filter_rows/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/filter_rows/self",
        "safeds/data/tabular/containers/_table/Table/filter_rows/query"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/from_columns",
      "name": "from_columns",
      "docstring": {
        "description": "Return a table created from a list of columns.\n\nParameters\n----------\ncolumns : list[Column]\n    The columns to be combined. They need to have the same size.\n\nReturns\n-------\ntable : Table\n    The generated table.\n\nRaises\n------\nColumnLengthMismatchError\n    If any of the column sizes does not match with the others.\nDuplicateColumnNameError\n    If multiple columns have the same name.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column, Table\n>>> col1 = Column(\"a\", [1, 2, 3])\n>>> col2 = Column(\"b\", [4, 5, 6])\n>>> Table.from_columns([col1, col2])\n   a  b\n0  1  4\n1  2  5\n2  3  6",
        "full_docstring": "Return a table created from a list of columns.\n\nParameters\n----------\ncolumns : list[Column]\n    The columns to be combined. They need to have the same size.\n\nReturns\n-------\ntable : Table\n    The generated table.\n\nRaises\n------\nColumnLengthMismatchError\n    If any of the column sizes does not match with the others.\nDuplicateColumnNameError\n    If multiple columns have the same name.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column, Table\n>>> col1 = Column(\"a\", [1, 2, 3])\n>>> col2 = Column(\"b\", [4, 5, 6])\n>>> Table.from_columns([col1, col2])\n   a  b\n0  1  4\n1  2  5\n2  3  6"
      },
      "is_public": false,
      "is_static": true,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/from_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/from_columns/columns"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/from_csv_file",
      "name": "from_csv_file",
      "docstring": {
        "description": "Read data from a CSV file into a table.\n\nParameters\n----------\npath : str | Path\n    The path to the CSV file.\n\nReturns\n-------\ntable : Table\n    The table created from the CSV file.\n\nRaises\n------\nFileNotFoundError\n    If the specified file does not exist.\nWrongFileExtensionError\n    If the file is not a csv file.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> Table.from_csv_file('./src/resources/from_csv_file.csv')\n   a  b  c\n0  1  2  1\n1  0  0  7",
        "full_docstring": "Read data from a CSV file into a table.\n\nParameters\n----------\npath : str | Path\n    The path to the CSV file.\n\nReturns\n-------\ntable : Table\n    The table created from the CSV file.\n\nRaises\n------\nFileNotFoundError\n    If the specified file does not exist.\nWrongFileExtensionError\n    If the file is not a csv file.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> Table.from_csv_file('./src/resources/from_csv_file.csv')\n   a  b  c\n0  1  2  1\n1  0  0  7"
      },
      "is_public": false,
      "is_static": true,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/from_csv_file/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/from_csv_file/path"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/from_dict",
      "name": "from_dict",
      "docstring": {
        "description": "Create a table from a dictionary that maps column names to column values.\n\nParameters\n----------\ndata : dict[str, list[Any]]\n    The data.\n\nReturns\n-------\ntable : Table\n    The generated table.\n\nRaises\n------\nColumnLengthMismatchError\n    If columns have different lengths.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> d = {'a': [1, 2], 'b': [3, 4]}\n>>> Table.from_dict(d)\n   a  b\n0  1  3\n1  2  4",
        "full_docstring": "Create a table from a dictionary that maps column names to column values.\n\nParameters\n----------\ndata : dict[str, list[Any]]\n    The data.\n\nReturns\n-------\ntable : Table\n    The generated table.\n\nRaises\n------\nColumnLengthMismatchError\n    If columns have different lengths.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> d = {'a': [1, 2], 'b': [3, 4]}\n>>> Table.from_dict(d)\n   a  b\n0  1  3\n1  2  4"
      },
      "is_public": false,
      "is_static": true,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/from_dict/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/from_dict/data"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/from_excel_file",
      "name": "from_excel_file",
      "docstring": {
        "description": "Read data from an Excel file into a table.\n\nValid file extensions are `.xls`, '.xlsx', `.xlsm`, `.xlsb`, `.odf`, `.ods` and `.odt`.\n\nParameters\n----------\npath : str | Path\n    The path to the Excel file.\n\nReturns\n-------\ntable : Table\n    The table created from the Excel file.\n\nRaises\n------\nFileNotFoundError\n    If the specified file does not exist.\nWrongFileExtensionError\n    If the file is not an Excel file.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> Table.from_excel_file('./src/resources/from_excel_file.xlsx')\n   a  b\n0  1  4\n1  2  5\n2  3  6",
        "full_docstring": "Read data from an Excel file into a table.\n\nValid file extensions are `.xls`, '.xlsx', `.xlsm`, `.xlsb`, `.odf`, `.ods` and `.odt`.\n\nParameters\n----------\npath : str | Path\n    The path to the Excel file.\n\nReturns\n-------\ntable : Table\n    The table created from the Excel file.\n\nRaises\n------\nFileNotFoundError\n    If the specified file does not exist.\nWrongFileExtensionError\n    If the file is not an Excel file.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> Table.from_excel_file('./src/resources/from_excel_file.xlsx')\n   a  b\n0  1  4\n1  2  5\n2  3  6"
      },
      "is_public": false,
      "is_static": true,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/from_excel_file/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/from_excel_file/path"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/from_json_file",
      "name": "from_json_file",
      "docstring": {
        "description": "Read data from a JSON file into a table.\n\nParameters\n----------\npath : str | Path\n    The path to the JSON file.\n\nReturns\n-------\ntable : Table\n    The table created from the JSON file.\n\nRaises\n------\nFileNotFoundError\n    If the specified file does not exist.\nWrongFileExtensionError\n    If the file is not a JSON file.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> Table.from_json_file('./src/resources/from_json_file.json')\n   a  b\n0  1  4\n1  2  5\n2  3  6",
        "full_docstring": "Read data from a JSON file into a table.\n\nParameters\n----------\npath : str | Path\n    The path to the JSON file.\n\nReturns\n-------\ntable : Table\n    The table created from the JSON file.\n\nRaises\n------\nFileNotFoundError\n    If the specified file does not exist.\nWrongFileExtensionError\n    If the file is not a JSON file.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> Table.from_json_file('./src/resources/from_json_file.json')\n   a  b\n0  1  4\n1  2  5\n2  3  6"
      },
      "is_public": false,
      "is_static": true,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/from_json_file/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/from_json_file/path"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/from_rows",
      "name": "from_rows",
      "docstring": {
        "description": "Return a table created from a list of rows.\n\nParameters\n----------\nrows : list[Row]\n    The rows to be combined. They need to have a matching schema.\n\nReturns\n-------\ntable : Table\n    The generated table.\n\nRaises\n------\nUnknownColumnNameError\n    If any of the row column names does not match with the first row.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row, Table\n>>> row1 = Row({\"a\": 1, \"b\": 2})\n>>> row2 = Row({\"a\": 3, \"b\": 4})\n>>> Table.from_rows([row1, row2])\n   a  b\n0  1  2\n1  3  4",
        "full_docstring": "Return a table created from a list of rows.\n\nParameters\n----------\nrows : list[Row]\n    The rows to be combined. They need to have a matching schema.\n\nReturns\n-------\ntable : Table\n    The generated table.\n\nRaises\n------\nUnknownColumnNameError\n    If any of the row column names does not match with the first row.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row, Table\n>>> row1 = Row({\"a\": 1, \"b\": 2})\n>>> row2 = Row({\"a\": 3, \"b\": 4})\n>>> Table.from_rows([row1, row2])\n   a  b\n0  1  2\n1  3  4"
      },
      "is_public": false,
      "is_static": true,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/from_rows/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/from_rows/rows"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/get_column",
      "name": "get_column",
      "docstring": {
        "description": "Return a column with the data of the specified column.\n\nParameters\n----------\ncolumn_name : str\n    The name of the column.\n\nReturns\n-------\ncolumn : Column\n    The column.\n\nRaises\n------\nUnknownColumnNameError\n    If the specified target column name does not exist.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1], \"b\": [2]})\n>>> table.get_column(\"b\")\nColumn('b', [2])",
        "full_docstring": "Return a column with the data of the specified column.\n\nParameters\n----------\ncolumn_name : str\n    The name of the column.\n\nReturns\n-------\ncolumn : Column\n    The column.\n\nRaises\n------\nUnknownColumnNameError\n    If the specified target column name does not exist.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1], \"b\": [2]})\n>>> table.get_column(\"b\")\nColumn('b', [2])"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/get_column/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/get_column/self",
        "safeds/data/tabular/containers/_table/Table/get_column/column_name"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/get_column_type",
      "name": "get_column_type",
      "docstring": {
        "description": "Return the type of the given column.\n\nAlias for self.schema.get_type_of_column(column_name: str) -> ColumnType.\n\nParameters\n----------\ncolumn_name : str\n    The name of the column to be queried.\n\nReturns\n-------\ntype : ColumnType\n    The type of the column.\n\nRaises\n------\nUnknownColumnNameError\n    If the specified target column name does not exist.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1], \"b\": [2.5]})\n>>> table.get_column_type(\"b\")\nRealNumber",
        "full_docstring": "Return the type of the given column.\n\nAlias for self.schema.get_type_of_column(column_name: str) -> ColumnType.\n\nParameters\n----------\ncolumn_name : str\n    The name of the column to be queried.\n\nReturns\n-------\ntype : ColumnType\n    The type of the column.\n\nRaises\n------\nUnknownColumnNameError\n    If the specified target column name does not exist.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1], \"b\": [2.5]})\n>>> table.get_column_type(\"b\")\nRealNumber"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/get_column_type/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/get_column_type/self",
        "safeds/data/tabular/containers/_table/Table/get_column_type/column_name"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/get_row",
      "name": "get_row",
      "docstring": {
        "description": "Return the row at a specified index.\n\nParameters\n----------\nindex : int\n    The index.\n\nReturns\n-------\nrow : Row\n    The row of the table at the index.\n\nRaises\n------\nIndexOutOfBoundsError\n    If no row at the specified index exists in this table.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1, 3], \"b\": [2, 4]})\n>>> table.get_row(0)\nRow({\n    'a': 1,\n    'b': 2\n})",
        "full_docstring": "Return the row at a specified index.\n\nParameters\n----------\nindex : int\n    The index.\n\nReturns\n-------\nrow : Row\n    The row of the table at the index.\n\nRaises\n------\nIndexOutOfBoundsError\n    If no row at the specified index exists in this table.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1, 3], \"b\": [2, 4]})\n>>> table.get_row(0)\nRow({\n    'a': 1,\n    'b': 2\n})"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/get_row/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/get_row/self",
        "safeds/data/tabular/containers/_table/Table/get_row/index"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/group_rows_by",
      "name": "group_rows_by",
      "docstring": {
        "description": "Return a dictionary with copies of the output tables as values and the keys from the key_selector.\n\nThe original table is not modified.\n\nParameters\n----------\nkey_selector : Callable[[Row], _T]\n    A Callable that is applied to all rows and returns the key of the group.\n\nReturns\n-------\ndictionary : dict\n    A dictionary containing the new tables as values and the selected keys as keys.",
        "full_docstring": "Return a dictionary with copies of the output tables as values and the keys from the key_selector.\n\nThe original table is not modified.\n\nParameters\n----------\nkey_selector : Callable[[Row], _T]\n    A Callable that is applied to all rows and returns the key of the group.\n\nReturns\n-------\ndictionary : dict\n    A dictionary containing the new tables as values and the selected keys as keys."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/group_rows_by/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/group_rows_by/self",
        "safeds/data/tabular/containers/_table/Table/group_rows_by/key_selector"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/has_column",
      "name": "has_column",
      "docstring": {
        "description": "Return whether the table contains a given column.\n\nAlias for self.schema.hasColumn(column_name: str) -> bool.\n\nParameters\n----------\ncolumn_name : str\n    The name of the column.\n\nReturns\n-------\ncontains : bool\n    True if the column exists.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1], \"b\": [2]})\n>>> table.has_column(\"b\")\nTrue\n>>> table.has_column(\"c\")\nFalse",
        "full_docstring": "Return whether the table contains a given column.\n\nAlias for self.schema.hasColumn(column_name: str) -> bool.\n\nParameters\n----------\ncolumn_name : str\n    The name of the column.\n\nReturns\n-------\ncontains : bool\n    True if the column exists.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1], \"b\": [2]})\n>>> table.has_column(\"b\")\nTrue\n>>> table.has_column(\"c\")\nFalse"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/has_column/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/has_column/self",
        "safeds/data/tabular/containers/_table/Table/has_column/column_name"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/inverse_transform_table",
      "name": "inverse_transform_table",
      "docstring": {
        "description": "Return a new `Table` with the inverted transformation applied by the given transformer.\n\nThe original table is not modified.\n\nParameters\n----------\ntransformer : InvertibleTableTransformer\n    A transformer that was fitted with columns, which are all present in the table.\n\nReturns\n-------\ntable : Table\n    The original table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.\n\nExamples\n--------\n>>> from safeds.data.tabular.transformation import OneHotEncoder\n>>> from safeds.data.tabular.containers import Table\n>>> transformer = OneHotEncoder()\n>>> table = Table.from_dict({\"a\": [\"j\", \"k\", \"k\"], \"b\": [\"x\", \"y\", \"x\"]})\n>>> transformer = transformer.fit(table, None)\n>>> transformed_table = transformer.transform(table)\n>>> transformed_table.inverse_transform_table(transformer)\n   a  b\n0  j  x\n1  k  y\n2  k  x\n>>> transformer.inverse_transform(transformed_table)\n   a  b\n0  j  x\n1  k  y\n2  k  x",
        "full_docstring": "Return a new `Table` with the inverted transformation applied by the given transformer.\n\nThe original table is not modified.\n\nParameters\n----------\ntransformer : InvertibleTableTransformer\n    A transformer that was fitted with columns, which are all present in the table.\n\nReturns\n-------\ntable : Table\n    The original table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.\n\nExamples\n--------\n>>> from safeds.data.tabular.transformation import OneHotEncoder\n>>> from safeds.data.tabular.containers import Table\n>>> transformer = OneHotEncoder()\n>>> table = Table.from_dict({\"a\": [\"j\", \"k\", \"k\"], \"b\": [\"x\", \"y\", \"x\"]})\n>>> transformer = transformer.fit(table, None)\n>>> transformed_table = transformer.transform(table)\n>>> transformed_table.inverse_transform_table(transformer)\n   a  b\n0  j  x\n1  k  y\n2  k  x\n>>> transformer.inverse_transform(transformed_table)\n   a  b\n0  j  x\n1  k  y\n2  k  x"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/inverse_transform_table/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/inverse_transform_table/self",
        "safeds/data/tabular/containers/_table/Table/inverse_transform_table/transformer"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/keep_only_columns",
      "name": "keep_only_columns",
      "docstring": {
        "description": "Return a new table with only the given column(s).\n\nThe original table is not modified.\n\nNote: When removing the last column of the table, the `number_of_columns` property will be set to 0.\n\nParameters\n----------\ncolumn_names : list[str]\n    A list containing only the columns to be kept.\n\nReturns\n-------\ntable : Table\n    A table containing only the given column(s).\n\nRaises\n------\nUnknownColumnNameError\n    If any of the given columns does not exist.\nIllegalSchemaModificationError\n    If removing the columns would violate an invariant in the subclass.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1, 3], \"b\": [2, 4]})\n>>> table.keep_only_columns([\"b\"])\n   b\n0  2\n1  4",
        "full_docstring": "Return a new table with only the given column(s).\n\nThe original table is not modified.\n\nNote: When removing the last column of the table, the `number_of_columns` property will be set to 0.\n\nParameters\n----------\ncolumn_names : list[str]\n    A list containing only the columns to be kept.\n\nReturns\n-------\ntable : Table\n    A table containing only the given column(s).\n\nRaises\n------\nUnknownColumnNameError\n    If any of the given columns does not exist.\nIllegalSchemaModificationError\n    If removing the columns would violate an invariant in the subclass.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1, 3], \"b\": [2, 4]})\n>>> table.keep_only_columns([\"b\"])\n   b\n0  2\n1  4"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/keep_only_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/keep_only_columns/self",
        "safeds/data/tabular/containers/_table/Table/keep_only_columns/column_names"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/number_of_columns",
      "name": "number_of_columns",
      "docstring": {
        "description": "Return the number of columns.\n\nReturns\n-------\nnumber_of_columns : int\n    The number of columns.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1], \"b\": [2]})\n>>> table.number_of_columns\n2",
        "full_docstring": "Return the number of columns.\n\nReturns\n-------\nnumber_of_columns : int\n    The number of columns.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1], \"b\": [2]})\n>>> table.number_of_columns\n2"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/data/tabular/containers/_table/Table/number_of_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/number_of_columns/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/number_of_rows",
      "name": "number_of_rows",
      "docstring": {
        "description": "Return the number of rows.\n\nReturns\n-------\nnumber_of_rows : int\n    The number of rows.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1], \"b\": [2]})\n>>> table.number_of_rows\n1",
        "full_docstring": "Return the number of rows.\n\nReturns\n-------\nnumber_of_rows : int\n    The number of rows.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1], \"b\": [2]})\n>>> table.number_of_rows\n1"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/data/tabular/containers/_table/Table/number_of_rows/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/number_of_rows/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/plot_boxplots",
      "name": "plot_boxplots",
      "docstring": {
        "description": "Plot a boxplot for every numerical column.\n\nReturns\n-------\nplot: Image\n    The plot as an image.\n\nRaises\n------\nNonNumericColumnError\n    If the table contains only non-numerical columns.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table({\"a\":[1, 2], \"b\": [3, 42]})\n>>> image = table.plot_boxplots()",
        "full_docstring": "Plot a boxplot for every numerical column.\n\nReturns\n-------\nplot: Image\n    The plot as an image.\n\nRaises\n------\nNonNumericColumnError\n    If the table contains only non-numerical columns.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table({\"a\":[1, 2], \"b\": [3, 42]})\n>>> image = table.plot_boxplots()"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/plot_boxplots/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/plot_boxplots/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/plot_correlation_heatmap",
      "name": "plot_correlation_heatmap",
      "docstring": {
        "description": "Plot a correlation heatmap for all numerical columns of this `Table`.\n\nReturns\n-------\nplot: Image\n    The plot as an image.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"temperature\": [10, 15, 20, 25, 30], \"sales\": [54, 74, 90, 206, 210]})\n>>> image = table.plot_correlation_heatmap()",
        "full_docstring": "Plot a correlation heatmap for all numerical columns of this `Table`.\n\nReturns\n-------\nplot: Image\n    The plot as an image.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"temperature\": [10, 15, 20, 25, 30], \"sales\": [54, 74, 90, 206, 210]})\n>>> image = table.plot_correlation_heatmap()"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/plot_correlation_heatmap/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/plot_correlation_heatmap/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/plot_histograms",
      "name": "plot_histograms",
      "docstring": {
        "description": "Plot a histogram for every column.\n\nReturns\n-------\nplot: Image\n    The plot as an image.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table({\"a\": [2, 3, 5, 1], \"b\": [54, 74, 90, 2014]})\n>>> image = table.plot_histograms()",
        "full_docstring": "Plot a histogram for every column.\n\nReturns\n-------\nplot: Image\n    The plot as an image.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table({\"a\": [2, 3, 5, 1], \"b\": [54, 74, 90, 2014]})\n>>> image = table.plot_histograms()"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/plot_histograms/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/plot_histograms/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/plot_lineplot",
      "name": "plot_lineplot",
      "docstring": {
        "description": "Plot two columns against each other in a lineplot.\n\nIf there are multiple x-values for a y-value, the resulting plot will consist of a line representing the mean\nand the lower-transparency area around the line representing the 95% confidence interval.\n\nParameters\n----------\nx_column_name : str\n    The column name of the column to be plotted on the x-Axis.\ny_column_name : str\n    The column name of the column to be plotted on the y-Axis.\n\nReturns\n-------\nplot: Image\n    The plot as an image.\n\nRaises\n------\nUnknownColumnNameError\n    If either of the columns do not exist.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"temperature\": [10, 15, 20, 25, 30], \"sales\": [54, 74, 90, 206, 210]})\n>>> image = table.plot_lineplot(\"temperature\", \"sales\")",
        "full_docstring": "Plot two columns against each other in a lineplot.\n\nIf there are multiple x-values for a y-value, the resulting plot will consist of a line representing the mean\nand the lower-transparency area around the line representing the 95% confidence interval.\n\nParameters\n----------\nx_column_name : str\n    The column name of the column to be plotted on the x-Axis.\ny_column_name : str\n    The column name of the column to be plotted on the y-Axis.\n\nReturns\n-------\nplot: Image\n    The plot as an image.\n\nRaises\n------\nUnknownColumnNameError\n    If either of the columns do not exist.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"temperature\": [10, 15, 20, 25, 30], \"sales\": [54, 74, 90, 206, 210]})\n>>> image = table.plot_lineplot(\"temperature\", \"sales\")"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/plot_lineplot/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/plot_lineplot/self",
        "safeds/data/tabular/containers/_table/Table/plot_lineplot/x_column_name",
        "safeds/data/tabular/containers/_table/Table/plot_lineplot/y_column_name"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/plot_scatterplot",
      "name": "plot_scatterplot",
      "docstring": {
        "description": "Plot two columns against each other in a scatterplot.\n\nParameters\n----------\nx_column_name : str\n    The column name of the column to be plotted on the x-Axis.\ny_column_name : str\n    The column name of the column to be plotted on the y-Axis.\n\nReturns\n-------\nplot: Image\n    The plot as an image.\n\nRaises\n------\nUnknownColumnNameError\n    If either of the columns do not exist.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"temperature\": [10, 15, 20, 25, 30], \"sales\": [54, 74, 90, 206, 210]})\n>>> image = table.plot_scatterplot(\"temperature\", \"sales\")",
        "full_docstring": "Plot two columns against each other in a scatterplot.\n\nParameters\n----------\nx_column_name : str\n    The column name of the column to be plotted on the x-Axis.\ny_column_name : str\n    The column name of the column to be plotted on the y-Axis.\n\nReturns\n-------\nplot: Image\n    The plot as an image.\n\nRaises\n------\nUnknownColumnNameError\n    If either of the columns do not exist.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"temperature\": [10, 15, 20, 25, 30], \"sales\": [54, 74, 90, 206, 210]})\n>>> image = table.plot_scatterplot(\"temperature\", \"sales\")"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/plot_scatterplot/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/plot_scatterplot/self",
        "safeds/data/tabular/containers/_table/Table/plot_scatterplot/x_column_name",
        "safeds/data/tabular/containers/_table/Table/plot_scatterplot/y_column_name"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/remove_columns",
      "name": "remove_columns",
      "docstring": {
        "description": "Return a new table without the given column(s).\n\nThe original table is not modified.\n\nNote: When removing the last column of the table, the `number_of_columns` property will be set to 0.\n\nParameters\n----------\ncolumn_names : list[str]\n    A list containing all columns to be dropped.\n\nReturns\n-------\ntable : Table\n    A table without the given columns.\n\nRaises\n------\nUnknownColumnNameError\n    If any of the given columns does not exist.\nIllegalSchemaModificationError\n    If removing the columns would violate an invariant in the subclass.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1, 3], \"b\": [2, 4]})\n>>> table.remove_columns([\"b\"])\n   a\n0  1\n1  3",
        "full_docstring": "Return a new table without the given column(s).\n\nThe original table is not modified.\n\nNote: When removing the last column of the table, the `number_of_columns` property will be set to 0.\n\nParameters\n----------\ncolumn_names : list[str]\n    A list containing all columns to be dropped.\n\nReturns\n-------\ntable : Table\n    A table without the given columns.\n\nRaises\n------\nUnknownColumnNameError\n    If any of the given columns does not exist.\nIllegalSchemaModificationError\n    If removing the columns would violate an invariant in the subclass.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1, 3], \"b\": [2, 4]})\n>>> table.remove_columns([\"b\"])\n   a\n0  1\n1  3"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/remove_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/remove_columns/self",
        "safeds/data/tabular/containers/_table/Table/remove_columns/column_names"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/remove_columns_with_missing_values",
      "name": "remove_columns_with_missing_values",
      "docstring": {
        "description": "Return a new table without the columns that contain missing values.\n\nThe original table is not modified.\n\nNote: When removing the last column of the table, the `number_of_columns` property will be set to 0.\n\nReturns\n-------\ntable : Table\n    A table without the columns that contain missing values.\n\nRaises\n------\nIllegalSchemaModificationError\n    If removing the columns would violate an invariant in the subclass.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1, 2], \"b\": [None, 2]})\n>>> table.remove_columns_with_missing_values()\n   a\n0  1\n1  2",
        "full_docstring": "Return a new table without the columns that contain missing values.\n\nThe original table is not modified.\n\nNote: When removing the last column of the table, the `number_of_columns` property will be set to 0.\n\nReturns\n-------\ntable : Table\n    A table without the columns that contain missing values.\n\nRaises\n------\nIllegalSchemaModificationError\n    If removing the columns would violate an invariant in the subclass.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1, 2], \"b\": [None, 2]})\n>>> table.remove_columns_with_missing_values()\n   a\n0  1\n1  2"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/remove_columns_with_missing_values/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/remove_columns_with_missing_values/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/remove_columns_with_non_numerical_values",
      "name": "remove_columns_with_non_numerical_values",
      "docstring": {
        "description": "Return a new table without the columns that contain non-numerical values.\n\nThe original table is not modified.\n\nNote: When removing the last column of the table, the `number_of_columns` property will be set to 0.\n\nReturns\n-------\ntable : Table\n    A table without the columns that contain non-numerical values.\n\nRaises\n------\nIllegalSchemaModificationError\n    If removing the columns would violate an invariant in the subclass.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1, 0], \"b\": [\"test\", 2]})\n>>> table.remove_columns_with_non_numerical_values()\n   a\n0  1\n1  0",
        "full_docstring": "Return a new table without the columns that contain non-numerical values.\n\nThe original table is not modified.\n\nNote: When removing the last column of the table, the `number_of_columns` property will be set to 0.\n\nReturns\n-------\ntable : Table\n    A table without the columns that contain non-numerical values.\n\nRaises\n------\nIllegalSchemaModificationError\n    If removing the columns would violate an invariant in the subclass.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1, 0], \"b\": [\"test\", 2]})\n>>> table.remove_columns_with_non_numerical_values()\n   a\n0  1\n1  0"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/remove_columns_with_non_numerical_values/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/remove_columns_with_non_numerical_values/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/remove_duplicate_rows",
      "name": "remove_duplicate_rows",
      "docstring": {
        "description": "Return a new table with every duplicate row removed.\n\nThe original table is not modified.\n\nReturns\n-------\nresult : Table\n    The table with the duplicate rows removed.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1, 3, 3], \"b\": [2, 4, 4]})\n>>> table.remove_duplicate_rows()\n   a  b\n0  1  2\n1  3  4",
        "full_docstring": "Return a new table with every duplicate row removed.\n\nThe original table is not modified.\n\nReturns\n-------\nresult : Table\n    The table with the duplicate rows removed.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1, 3, 3], \"b\": [2, 4, 4]})\n>>> table.remove_duplicate_rows()\n   a  b\n0  1  2\n1  3  4"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/remove_duplicate_rows/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/remove_duplicate_rows/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/remove_rows_with_missing_values",
      "name": "remove_rows_with_missing_values",
      "docstring": {
        "description": "Return a new table without the rows that contain missing values.\n\nThe original table is not modified.\n\nReturns\n-------\ntable : Table\n    A table without the rows that contain missing values.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1.0, None, 3], \"b\": [2, 4.0, None]})\n>>> table.remove_rows_with_missing_values()\n     a    b\n0  1.0  2.0",
        "full_docstring": "Return a new table without the rows that contain missing values.\n\nThe original table is not modified.\n\nReturns\n-------\ntable : Table\n    A table without the rows that contain missing values.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1.0, None, 3], \"b\": [2, 4.0, None]})\n>>> table.remove_rows_with_missing_values()\n     a    b\n0  1.0  2.0"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/remove_rows_with_missing_values/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/remove_rows_with_missing_values/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/remove_rows_with_outliers",
      "name": "remove_rows_with_outliers",
      "docstring": {
        "description": "Return a new table without those rows that contain at least one outlier.\n\nWe define an outlier as a value that has a distance of more than 3 standard deviations from the column mean.\nMissing values are not considered outliers. They are also ignored during the calculation of the standard\ndeviation.\n\nThe original table is not modified.\n\nReturns\n-------\nnew_table : Table\n    A new table without rows containing outliers.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column, Table\n>>> c1 = Column(\"a\", [1, 3, 1, 0.1, 0, 0, 0, 0, 0, 0, 0, 0])\n>>> c2 = Column(\"b\", [1.5, 1, 0.5, 0.01, 0, 0, 0, 0, 0, 0, 0, 0])\n>>> c3 = Column(\"c\", [0.1, 0.00, 0.4, 0.2, 0, 0, 0, 0, 0, 0, 0, 0])\n>>> c4 = Column(\"d\", [-1000000, 1000000, -1000000, -1000000, -1000000, -1000000, -1000000, -1000000, -1000000, -1000000, -1000000, -1000000])\n>>> table = Table.from_columns([c1, c2, c3, c4])\n>>> table.remove_rows_with_outliers()\n      a     b    c        d\n0   1.0  1.50  0.1 -1000000\n1   1.0  0.50  0.4 -1000000\n2   0.1  0.01  0.2 -1000000\n3   0.0  0.00  0.0 -1000000\n4   0.0  0.00  0.0 -1000000\n5   0.0  0.00  0.0 -1000000\n6   0.0  0.00  0.0 -1000000\n7   0.0  0.00  0.0 -1000000\n8   0.0  0.00  0.0 -1000000\n9   0.0  0.00  0.0 -1000000\n10  0.0  0.00  0.0 -1000000",
        "full_docstring": "Return a new table without those rows that contain at least one outlier.\n\nWe define an outlier as a value that has a distance of more than 3 standard deviations from the column mean.\nMissing values are not considered outliers. They are also ignored during the calculation of the standard\ndeviation.\n\nThe original table is not modified.\n\nReturns\n-------\nnew_table : Table\n    A new table without rows containing outliers.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column, Table\n>>> c1 = Column(\"a\", [1, 3, 1, 0.1, 0, 0, 0, 0, 0, 0, 0, 0])\n>>> c2 = Column(\"b\", [1.5, 1, 0.5, 0.01, 0, 0, 0, 0, 0, 0, 0, 0])\n>>> c3 = Column(\"c\", [0.1, 0.00, 0.4, 0.2, 0, 0, 0, 0, 0, 0, 0, 0])\n>>> c4 = Column(\"d\", [-1000000, 1000000, -1000000, -1000000, -1000000, -1000000, -1000000, -1000000, -1000000, -1000000, -1000000, -1000000])\n>>> table = Table.from_columns([c1, c2, c3, c4])\n>>> table.remove_rows_with_outliers()\n      a     b    c        d\n0   1.0  1.50  0.1 -1000000\n1   1.0  0.50  0.4 -1000000\n2   0.1  0.01  0.2 -1000000\n3   0.0  0.00  0.0 -1000000\n4   0.0  0.00  0.0 -1000000\n5   0.0  0.00  0.0 -1000000\n6   0.0  0.00  0.0 -1000000\n7   0.0  0.00  0.0 -1000000\n8   0.0  0.00  0.0 -1000000\n9   0.0  0.00  0.0 -1000000\n10  0.0  0.00  0.0 -1000000"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/remove_rows_with_outliers/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/remove_rows_with_outliers/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/rename_column",
      "name": "rename_column",
      "docstring": {
        "description": "Return a new `Table` with a single column renamed.\n\nThe original table is not modified.\n\nParameters\n----------\nold_name : str\n    The old name of the target column.\nnew_name : str\n    The new name of the target column.\n\nReturns\n-------\ntable : Table\n    The Table with the renamed column.\n\nRaises\n------\nUnknownColumnNameError\n    If the specified old target column name does not exist.\nDuplicateColumnNameError\n    If the specified new target column name already exists.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1], \"b\": [2]})\n>>> table.rename_column(\"b\", \"c\")\n   a  c\n0  1  2",
        "full_docstring": "Return a new `Table` with a single column renamed.\n\nThe original table is not modified.\n\nParameters\n----------\nold_name : str\n    The old name of the target column.\nnew_name : str\n    The new name of the target column.\n\nReturns\n-------\ntable : Table\n    The Table with the renamed column.\n\nRaises\n------\nUnknownColumnNameError\n    If the specified old target column name does not exist.\nDuplicateColumnNameError\n    If the specified new target column name already exists.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1], \"b\": [2]})\n>>> table.rename_column(\"b\", \"c\")\n   a  c\n0  1  2"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/rename_column/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/rename_column/self",
        "safeds/data/tabular/containers/_table/Table/rename_column/old_name",
        "safeds/data/tabular/containers/_table/Table/rename_column/new_name"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/replace_column",
      "name": "replace_column",
      "docstring": {
        "description": "Return a new table with the specified old column replaced by a list of new columns.\n\nThe order of columns is kept.\n\nThe original table is not modified.\n\nParameters\n----------\nold_column_name : str\n    The name of the column to be replaced.\n\nnew_columns : list[Column]\n    The list of new columns replacing the old column.\n\nReturns\n-------\nresult : Table\n    A table with the old column replaced by the new columns.\n\nRaises\n------\nUnknownColumnNameError\n    If the old column does not exist.\nDuplicateColumnNameError\n    If at least one of the new columns already exists and the existing column is not affected by the replacement.\nColumnSizeError\n    If the size of at least one of the new columns does not match the amount of rows.\nIllegalSchemaModificationError\n    If replacing the column would violate an invariant in the subclass.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column, Table\n>>> table = Table.from_dict({\"a\": [1], \"b\": [2]})\n>>> new_col = Column(\"new\", [3])\n>>> table.replace_column(\"b\", [new_col])\n   a  new\n0  1    3",
        "full_docstring": "Return a new table with the specified old column replaced by a list of new columns.\n\nThe order of columns is kept.\n\nThe original table is not modified.\n\nParameters\n----------\nold_column_name : str\n    The name of the column to be replaced.\n\nnew_columns : list[Column]\n    The list of new columns replacing the old column.\n\nReturns\n-------\nresult : Table\n    A table with the old column replaced by the new columns.\n\nRaises\n------\nUnknownColumnNameError\n    If the old column does not exist.\nDuplicateColumnNameError\n    If at least one of the new columns already exists and the existing column is not affected by the replacement.\nColumnSizeError\n    If the size of at least one of the new columns does not match the amount of rows.\nIllegalSchemaModificationError\n    If replacing the column would violate an invariant in the subclass.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Column, Table\n>>> table = Table.from_dict({\"a\": [1], \"b\": [2]})\n>>> new_col = Column(\"new\", [3])\n>>> table.replace_column(\"b\", [new_col])\n   a  new\n0  1    3"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/replace_column/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/replace_column/self",
        "safeds/data/tabular/containers/_table/Table/replace_column/old_column_name",
        "safeds/data/tabular/containers/_table/Table/replace_column/new_columns"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/schema",
      "name": "schema",
      "docstring": {
        "description": "Return the schema of the table.\n\nReturns\n-------\nschema : Schema\n    The schema.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row, Table\n>>> row = Row({\"a\": 1, \"b\": 2.5, \"c\": \"ff\"})\n>>> table = Table.from_dict({\"a\": [1, 8], \"b\": [2.5, 9], \"c\": [\"g\", \"g\"]})\n>>> table.schema\nSchema({\n    'a': Integer,\n    'b': RealNumber,\n    'c': String\n})\n>>> table.schema == row.schema\nTrue",
        "full_docstring": "Return the schema of the table.\n\nReturns\n-------\nschema : Schema\n    The schema.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Row, Table\n>>> row = Row({\"a\": 1, \"b\": 2.5, \"c\": \"ff\"})\n>>> table = Table.from_dict({\"a\": [1, 8], \"b\": [2.5, 9], \"c\": [\"g\", \"g\"]})\n>>> table.schema\nSchema({\n    'a': Integer,\n    'b': RealNumber,\n    'c': String\n})\n>>> table.schema == row.schema\nTrue"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/data/tabular/containers/_table/Table/schema/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/schema/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/shuffle_rows",
      "name": "shuffle_rows",
      "docstring": {
        "description": "Return a new `Table` with randomly shuffled rows of this `Table`.\n\nThe original table is not modified.\n\nReturns\n-------\nresult : Table\n    The shuffled Table.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> import numpy as np\n>>> np.random.seed(123456)\n>>> table = Table.from_dict({\"a\": [1, 3, 5], \"b\": [2, 4, 6]})\n>>> table.shuffle_rows()\n   a  b\n0  5  6\n1  1  2\n2  3  4",
        "full_docstring": "Return a new `Table` with randomly shuffled rows of this `Table`.\n\nThe original table is not modified.\n\nReturns\n-------\nresult : Table\n    The shuffled Table.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> import numpy as np\n>>> np.random.seed(123456)\n>>> table = Table.from_dict({\"a\": [1, 3, 5], \"b\": [2, 4, 6]})\n>>> table.shuffle_rows()\n   a  b\n0  5  6\n1  1  2\n2  3  4"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/shuffle_rows/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/shuffle_rows/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/slice_rows",
      "name": "slice_rows",
      "docstring": {
        "description": "Slice a part of the table into a new table.\n\nThe original table is not modified.\n\nParameters\n----------\nstart : int | None\n    The first index of the range to be copied into a new table, None by default.\nend : int | None\n    The last index of the range to be copied into a new table, None by default.\nstep : int\n    The step size used to iterate through the table, 1 by default.\n\nReturns\n-------\nresult : Table\n    The resulting table.\n\nRaises\n------\nIndexOutOfBoundsError\n    If the index is out of bounds.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1, 3, 5], \"b\": [2, 4, 6]})\n>>> table.slice_rows(0, 2)\n   a  b\n0  1  2\n1  3  4",
        "full_docstring": "Slice a part of the table into a new table.\n\nThe original table is not modified.\n\nParameters\n----------\nstart : int | None\n    The first index of the range to be copied into a new table, None by default.\nend : int | None\n    The last index of the range to be copied into a new table, None by default.\nstep : int\n    The step size used to iterate through the table, 1 by default.\n\nReturns\n-------\nresult : Table\n    The resulting table.\n\nRaises\n------\nIndexOutOfBoundsError\n    If the index is out of bounds.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1, 3, 5], \"b\": [2, 4, 6]})\n>>> table.slice_rows(0, 2)\n   a  b\n0  1  2\n1  3  4"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/slice_rows/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/slice_rows/self",
        "safeds/data/tabular/containers/_table/Table/slice_rows/start",
        "safeds/data/tabular/containers/_table/Table/slice_rows/end",
        "safeds/data/tabular/containers/_table/Table/slice_rows/step"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/sort_columns",
      "name": "sort_columns",
      "docstring": {
        "description": "Sort the columns of a `Table` with the given comparator and return a new `Table`.\n\nThe comparator is a function that takes two columns `col1` and `col2` and\nreturns an integer:\n\n* If `col1` should be ordered before `col2`, the function should return a negative number.\n* If `col1` should be ordered after `col2`, the function should return a positive number.\n* If the original order of `col1` and `col2` should be kept, the function should return 0.\n\nIf no comparator is given, the columns will be sorted alphabetically by their name.\n\nThe original table is not modified.\n\nParameters\n----------\ncomparator : Callable[[Column, Column], int]\n    The function used to compare two columns.\n\nReturns\n-------\nnew_table : Table\n    A new table with sorted columns.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1], \"b\": [2] })\n>>> table.sort_columns(lambda col1, col2: 1)\n   a  b\n0  1  2\n>>> table.sort_columns(lambda col1, col2: -1)\n   b  a\n0  2  1\n>>> table2 = Table.from_dict({\"b\": [2], \"a\": [1]})\n>>> table2.sort_columns()\n   a  b\n0  1  2",
        "full_docstring": "Sort the columns of a `Table` with the given comparator and return a new `Table`.\n\nThe comparator is a function that takes two columns `col1` and `col2` and\nreturns an integer:\n\n* If `col1` should be ordered before `col2`, the function should return a negative number.\n* If `col1` should be ordered after `col2`, the function should return a positive number.\n* If the original order of `col1` and `col2` should be kept, the function should return 0.\n\nIf no comparator is given, the columns will be sorted alphabetically by their name.\n\nThe original table is not modified.\n\nParameters\n----------\ncomparator : Callable[[Column, Column], int]\n    The function used to compare two columns.\n\nReturns\n-------\nnew_table : Table\n    A new table with sorted columns.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1], \"b\": [2] })\n>>> table.sort_columns(lambda col1, col2: 1)\n   a  b\n0  1  2\n>>> table.sort_columns(lambda col1, col2: -1)\n   b  a\n0  2  1\n>>> table2 = Table.from_dict({\"b\": [2], \"a\": [1]})\n>>> table2.sort_columns()\n   a  b\n0  1  2"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/sort_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/sort_columns/self",
        "safeds/data/tabular/containers/_table/Table/sort_columns/comparator"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/sort_rows",
      "name": "sort_rows",
      "docstring": {
        "description": "Sort the rows of a `Table` with the given comparator and return a new `Table`.\n\nThe comparator is a function that takes two rows `row1` and `row2` and\nreturns an integer:\n\n* If `row1` should be ordered before `row2`, the function should return a negative number.\n* If `row1` should be ordered after `row2`, the function should return a positive number.\n* If the original order of `row1` and `row2` should be kept, the function should return 0.\n\nThe original table is not modified.\n\nParameters\n----------\ncomparator : Callable[[Row, Row], int]\n    The function used to compare two rows.\n\nReturns\n-------\nnew_table : Table\n    A new table with sorted rows.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1, 3, 5], \"b\": [2, 4, 6] })\n>>> table.sort_rows(lambda row1, row2: 1)\n   a  b\n0  1  2\n1  3  4\n2  5  6\n>>> table.sort_rows(lambda row1, row2: -1)\n   a  b\n0  5  6\n1  3  4\n2  1  2\n>>> table.sort_rows(lambda row1, row2: 0)\n   a  b\n0  1  2\n1  3  4\n2  5  6",
        "full_docstring": "Sort the rows of a `Table` with the given comparator and return a new `Table`.\n\nThe comparator is a function that takes two rows `row1` and `row2` and\nreturns an integer:\n\n* If `row1` should be ordered before `row2`, the function should return a negative number.\n* If `row1` should be ordered after `row2`, the function should return a positive number.\n* If the original order of `row1` and `row2` should be kept, the function should return 0.\n\nThe original table is not modified.\n\nParameters\n----------\ncomparator : Callable[[Row, Row], int]\n    The function used to compare two rows.\n\nReturns\n-------\nnew_table : Table\n    A new table with sorted rows.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1, 3, 5], \"b\": [2, 4, 6] })\n>>> table.sort_rows(lambda row1, row2: 1)\n   a  b\n0  1  2\n1  3  4\n2  5  6\n>>> table.sort_rows(lambda row1, row2: -1)\n   a  b\n0  5  6\n1  3  4\n2  1  2\n>>> table.sort_rows(lambda row1, row2: 0)\n   a  b\n0  1  2\n1  3  4\n2  5  6"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/sort_rows/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/sort_rows/self",
        "safeds/data/tabular/containers/_table/Table/sort_rows/comparator"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/split_rows",
      "name": "split_rows",
      "docstring": {
        "description": "Split the table into two new tables.\n\nThe original table is not modified.\n\nParameters\n----------\npercentage_in_first : float\n    The desired size of the first table in percentage to the given table; must be between 0 and 1.\n\nReturns\n-------\nresult : (Table, Table)\n    A tuple containing the two resulting tables. The first table has the specified size, the second table\n    contains the rest of the data.\n\nRaises\n------\nValueError:\n    if the 'percentage_in_first' is not between 0 and 1.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"temperature\": [10, 15, 20, 25, 30], \"sales\": [54, 74, 90, 206, 210]})\n>>> slices = table.split_rows(0.4)\n>>> slices[0]\n   temperature  sales\n0           10     54\n1           15     74\n>>> slices[1]\n   temperature  sales\n0           20     90\n1           25    206\n2           30    210",
        "full_docstring": "Split the table into two new tables.\n\nThe original table is not modified.\n\nParameters\n----------\npercentage_in_first : float\n    The desired size of the first table in percentage to the given table; must be between 0 and 1.\n\nReturns\n-------\nresult : (Table, Table)\n    A tuple containing the two resulting tables. The first table has the specified size, the second table\n    contains the rest of the data.\n\nRaises\n------\nValueError:\n    if the 'percentage_in_first' is not between 0 and 1.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"temperature\": [10, 15, 20, 25, 30], \"sales\": [54, 74, 90, 206, 210]})\n>>> slices = table.split_rows(0.4)\n>>> slices[0]\n   temperature  sales\n0           10     54\n1           15     74\n>>> slices[1]\n   temperature  sales\n0           20     90\n1           25    206\n2           30    210"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/split_rows/result_1",
        "safeds/data/tabular/containers/_table/Table/split_rows/result_2"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/split_rows/self",
        "safeds/data/tabular/containers/_table/Table/split_rows/percentage_in_first"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/summarize_statistics",
      "name": "summarize_statistics",
      "docstring": {
        "description": "Return a table with a number of statistical key values.\n\nThe original table is not modified.\n\nReturns\n-------\nresult : Table\n    The table with statistics.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1, 3], \"b\": [2, 4]})\n>>> table.summarize_statistics()\n              metrics                   a                   b\n0             maximum                   3                   4\n1             minimum                   1                   2\n2                mean                 2.0                 3.0\n3                mode              [1, 3]              [2, 4]\n4              median                 2.0                 3.0\n5                 sum                   4                   6\n6            variance                 2.0                 2.0\n7  standard deviation  1.4142135623730951  1.4142135623730951\n8              idness                 1.0                 1.0\n9           stability                 0.5                 0.5",
        "full_docstring": "Return a table with a number of statistical key values.\n\nThe original table is not modified.\n\nReturns\n-------\nresult : Table\n    The table with statistics.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1, 3], \"b\": [2, 4]})\n>>> table.summarize_statistics()\n              metrics                   a                   b\n0             maximum                   3                   4\n1             minimum                   1                   2\n2                mean                 2.0                 3.0\n3                mode              [1, 3]              [2, 4]\n4              median                 2.0                 3.0\n5                 sum                   4                   6\n6            variance                 2.0                 2.0\n7  standard deviation  1.4142135623730951  1.4142135623730951\n8              idness                 1.0                 1.0\n9           stability                 0.5                 0.5"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/summarize_statistics/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/summarize_statistics/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/tag_columns",
      "name": "tag_columns",
      "docstring": {
        "description": "Return a new `TaggedTable` with columns marked as a target column or feature columns.\n\nThe original table is not modified.\n\nParameters\n----------\ntarget_name : str\n    Name of the target column.\nfeature_names : list[str] | None\n    Names of the feature columns. If None, all columns except the target column are used.\n\nReturns\n-------\ntagged_table : TaggedTable\n    A new tagged table with the given target and feature names.\n\nRaises\n------\nValueError\n    If the target column is also a feature column.\nValueError\n    If no feature columns are specified.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table, TaggedTable\n>>> table = Table.from_dict({\"item\": [\"apple\", \"milk\", \"beer\"], \"price\": [1.10, 1.19, 1.79], \"amount_bought\": [74, 72, 51]})\n>>> tagged_table = table.tag_columns(target_name=\"amount_bought\", feature_names=[\"item\", \"price\"])",
        "full_docstring": "Return a new `TaggedTable` with columns marked as a target column or feature columns.\n\nThe original table is not modified.\n\nParameters\n----------\ntarget_name : str\n    Name of the target column.\nfeature_names : list[str] | None\n    Names of the feature columns. If None, all columns except the target column are used.\n\nReturns\n-------\ntagged_table : TaggedTable\n    A new tagged table with the given target and feature names.\n\nRaises\n------\nValueError\n    If the target column is also a feature column.\nValueError\n    If no feature columns are specified.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table, TaggedTable\n>>> table = Table.from_dict({\"item\": [\"apple\", \"milk\", \"beer\"], \"price\": [1.10, 1.19, 1.79], \"amount_bought\": [74, 72, 51]})\n>>> tagged_table = table.tag_columns(target_name=\"amount_bought\", feature_names=[\"item\", \"price\"])"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/tag_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/tag_columns/self",
        "safeds/data/tabular/containers/_table/Table/tag_columns/target_name",
        "safeds/data/tabular/containers/_table/Table/tag_columns/feature_names"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/time_columns",
      "name": "time_columns",
      "docstring": {
        "description": "Return a new `TimeSeries` with columns marked as a target and time column or feature columns.\n\nThe original table is not modified.\n\nParameters\n----------\ntarget_name : str\n    Name of the target column.\ntime_name : str\n    Name of the time column.\nfeature_names : list[str] | None\n    Names of the feature columns. If None, all columns except the target and time columns are used.\n\nReturns\n-------\ntime_series : TimeSeries\n    A new time series with the given target, time and feature names.\n\nRaises\n------\nValueError\n    If the target column is also a feature column.\nValueError\n    If there is no other column than the specified target and time columns left to be a feature column\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table, TimeSeries\n>>> table = Table.from_dict({\"time\": [\"01.01\", \"01.02\", \"01.03\"], \"price\": [1.10, 1.19, 1.79], \"amount_bought\": [74, 72, 51]})\n>>> tagged_table = table.time_columns(target_name=\"amount_bought\",time_name = \"time\", feature_names=[\"price\"])",
        "full_docstring": "Return a new `TimeSeries` with columns marked as a target and time column or feature columns.\n\nThe original table is not modified.\n\nParameters\n----------\ntarget_name : str\n    Name of the target column.\ntime_name : str\n    Name of the time column.\nfeature_names : list[str] | None\n    Names of the feature columns. If None, all columns except the target and time columns are used.\n\nReturns\n-------\ntime_series : TimeSeries\n    A new time series with the given target, time and feature names.\n\nRaises\n------\nValueError\n    If the target column is also a feature column.\nValueError\n    If there is no other column than the specified target and time columns left to be a feature column\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table, TimeSeries\n>>> table = Table.from_dict({\"time\": [\"01.01\", \"01.02\", \"01.03\"], \"price\": [1.10, 1.19, 1.79], \"amount_bought\": [74, 72, 51]})\n>>> tagged_table = table.time_columns(target_name=\"amount_bought\",time_name = \"time\", feature_names=[\"price\"])"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/time_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/time_columns/self",
        "safeds/data/tabular/containers/_table/Table/time_columns/target_name",
        "safeds/data/tabular/containers/_table/Table/time_columns/time_name",
        "safeds/data/tabular/containers/_table/Table/time_columns/feature_names"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/to_columns",
      "name": "to_columns",
      "docstring": {
        "description": "Return a list of the columns.\n\nReturns\n-------\ncolumns : list[Columns]\n    List of columns.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\":[1, 2],\"b\":[20, 30]})\n>>> table.to_columns()\n[Column('a', [1, 2]), Column('b', [20, 30])]",
        "full_docstring": "Return a list of the columns.\n\nReturns\n-------\ncolumns : list[Columns]\n    List of columns.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\":[1, 2],\"b\":[20, 30]})\n>>> table.to_columns()\n[Column('a', [1, 2]), Column('b', [20, 30])]"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/to_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/to_columns/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/to_csv_file",
      "name": "to_csv_file",
      "docstring": {
        "description": "Write the data from the table into a CSV file.\n\nIf the file and/or the directories do not exist they will be created. If the file already exists it will be\noverwritten.\n\nParameters\n----------\npath : str | Path\n    The path to the output file.\n\nRaises\n------\nWrongFileExtensionError\n    If the file is not a csv file.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1, 2, 3], \"b\": [4, 5, 6]})\n>>> table.to_csv_file(\"./src/resources/to_csv_file.csv\")",
        "full_docstring": "Write the data from the table into a CSV file.\n\nIf the file and/or the directories do not exist they will be created. If the file already exists it will be\noverwritten.\n\nParameters\n----------\npath : str | Path\n    The path to the output file.\n\nRaises\n------\nWrongFileExtensionError\n    If the file is not a csv file.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1, 2, 3], \"b\": [4, 5, 6]})\n>>> table.to_csv_file(\"./src/resources/to_csv_file.csv\")"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/to_csv_file/self",
        "safeds/data/tabular/containers/_table/Table/to_csv_file/path"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/to_dict",
      "name": "to_dict",
      "docstring": {
        "description": "Return a dictionary that maps column names to column values.\n\nReturns\n-------\ndata : dict[str, list[Any]]\n    Dictionary representation of the table.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> row1 = Row({\"a\": 1, \"b\": 5})\n>>> row2 = Row({\"a\": 2, \"b\": 6})\n>>> table1 = Table.from_rows([row1, row2])\n>>> table2 = Table.from_dict({\"a\": [1, 2], \"b\": [5, 6]})\n>>> table1 == table2\nTrue",
        "full_docstring": "Return a dictionary that maps column names to column values.\n\nReturns\n-------\ndata : dict[str, list[Any]]\n    Dictionary representation of the table.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> row1 = Row({\"a\": 1, \"b\": 5})\n>>> row2 = Row({\"a\": 2, \"b\": 6})\n>>> table1 = Table.from_rows([row1, row2])\n>>> table2 = Table.from_dict({\"a\": [1, 2], \"b\": [5, 6]})\n>>> table1 == table2\nTrue"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/to_dict/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/to_dict/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/to_excel_file",
      "name": "to_excel_file",
      "docstring": {
        "description": "Write the data from the table into an Excel file.\n\nValid file extensions are `.xls`, '.xlsx', `.xlsm`, `.xlsb`, `.odf`, `.ods` and `.odt`.\nIf the file and/or the directories do not exist, they will be created. If the file already exists, it will be\noverwritten.\n\nParameters\n----------\npath : str | Path\n    The path to the output file.\n\nRaises\n------\nWrongFileExtensionError\n    If the file is not an Excel file.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1, 2, 3], \"b\": [4, 5, 6]})\n>>> table.to_excel_file(\"./src/resources/to_excel_file.xlsx\")",
        "full_docstring": "Write the data from the table into an Excel file.\n\nValid file extensions are `.xls`, '.xlsx', `.xlsm`, `.xlsb`, `.odf`, `.ods` and `.odt`.\nIf the file and/or the directories do not exist, they will be created. If the file already exists, it will be\noverwritten.\n\nParameters\n----------\npath : str | Path\n    The path to the output file.\n\nRaises\n------\nWrongFileExtensionError\n    If the file is not an Excel file.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1, 2, 3], \"b\": [4, 5, 6]})\n>>> table.to_excel_file(\"./src/resources/to_excel_file.xlsx\")"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/to_excel_file/self",
        "safeds/data/tabular/containers/_table/Table/to_excel_file/path"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/to_html",
      "name": "to_html",
      "docstring": {
        "description": "Return an HTML representation of the table.\n\nReturns\n-------\noutput : str\n    The generated HTML.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table({\"a\": [1, 2, 3], \"b\": [4, 5, 6]})\n>>> html = table.to_html()",
        "full_docstring": "Return an HTML representation of the table.\n\nReturns\n-------\noutput : str\n    The generated HTML.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table({\"a\": [1, 2, 3], \"b\": [4, 5, 6]})\n>>> html = table.to_html()"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/to_html/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/to_html/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/to_json_file",
      "name": "to_json_file",
      "docstring": {
        "description": "Write the data from the table into a JSON file.\n\nIf the file and/or the directories do not exist, they will be created. If the file already exists it will be\noverwritten.\n\nParameters\n----------\npath : str | Path\n    The path to the output file.\n\nRaises\n------\nWrongFileExtensionError\n    If the file is not a JSON file.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1, 2, 3], \"b\": [4, 5, 6]})\n>>> table.to_json_file(\"./src/resources/to_json_file.json\")",
        "full_docstring": "Write the data from the table into a JSON file.\n\nIf the file and/or the directories do not exist, they will be created. If the file already exists it will be\noverwritten.\n\nParameters\n----------\npath : str | Path\n    The path to the output file.\n\nRaises\n------\nWrongFileExtensionError\n    If the file is not a JSON file.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\": [1, 2, 3], \"b\": [4, 5, 6]})\n>>> table.to_json_file(\"./src/resources/to_json_file.json\")"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/to_json_file/self",
        "safeds/data/tabular/containers/_table/Table/to_json_file/path"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/to_rows",
      "name": "to_rows",
      "docstring": {
        "description": "Return a list of the rows.\n\nReturns\n-------\nrows : list[Row]\n    List of rows.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\":[1, 2],\"b\":[20, 30]})\n>>> table.to_rows()\n[Row({\n    'a': 1,\n    'b': 20\n}), Row({\n    'a': 2,\n    'b': 30\n})]",
        "full_docstring": "Return a list of the rows.\n\nReturns\n-------\nrows : list[Row]\n    List of rows.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"a\":[1, 2],\"b\":[20, 30]})\n>>> table.to_rows()\n[Row({\n    'a': 1,\n    'b': 20\n}), Row({\n    'a': 2,\n    'b': 30\n})]"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/to_rows/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/to_rows/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/transform_column",
      "name": "transform_column",
      "docstring": {
        "description": "Return a new `Table` with the provided column transformed by calling the provided transformer.\n\nThe original table is not modified.\n\nReturns\n-------\nresult : Table\n    The table with the transformed column.\n\nRaises\n------\nUnknownColumnNameError\n    If the column does not exist.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"item\": [\"apple\", \"milk\", \"beer\"], \"price\": [1.00, 1.19, 1.79]})\n>>> table.transform_column(\"price\", lambda row: row.get_value(\"price\") * 100)\n    item  price\n0  apple  100.0\n1   milk  119.0\n2   beer  179.0",
        "full_docstring": "Return a new `Table` with the provided column transformed by calling the provided transformer.\n\nThe original table is not modified.\n\nReturns\n-------\nresult : Table\n    The table with the transformed column.\n\nRaises\n------\nUnknownColumnNameError\n    If the column does not exist.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table\n>>> table = Table.from_dict({\"item\": [\"apple\", \"milk\", \"beer\"], \"price\": [1.00, 1.19, 1.79]})\n>>> table.transform_column(\"price\", lambda row: row.get_value(\"price\") * 100)\n    item  price\n0  apple  100.0\n1   milk  119.0\n2   beer  179.0"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/transform_column/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/transform_column/self",
        "safeds/data/tabular/containers/_table/Table/transform_column/name",
        "safeds/data/tabular/containers/_table/Table/transform_column/transformer"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/transform_table",
      "name": "transform_table",
      "docstring": {
        "description": "Return a new `Table` with a learned transformation applied to this table.\n\nThe original table is not modified.\n\nParameters\n----------\ntransformer : TableTransformer\n    The transformer which transforms the given table.\n\nReturns\n-------\ntransformed_table : Table\n    The transformed table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.\nIllegalSchemaModificationError\n    If replacing the column would violate an invariant in the subclass.\n\nExamples\n--------\n>>> from safeds.data.tabular.transformation import OneHotEncoder\n>>> from safeds.data.tabular.containers import Table\n>>> transformer = OneHotEncoder()\n>>> table = Table.from_dict({\"fruit\": [\"apple\", \"pear\", \"apple\"], \"pet\": [\"dog\", \"duck\", \"duck\"]})\n>>> transformer = transformer.fit(table, None)\n>>> table.transform_table(transformer)\n   fruit__apple  fruit__pear  pet__dog  pet__duck\n0           1.0          0.0       1.0        0.0\n1           0.0          1.0       0.0        1.0\n2           1.0          0.0       0.0        1.0",
        "full_docstring": "Return a new `Table` with a learned transformation applied to this table.\n\nThe original table is not modified.\n\nParameters\n----------\ntransformer : TableTransformer\n    The transformer which transforms the given table.\n\nReturns\n-------\ntransformed_table : Table\n    The transformed table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.\nIllegalSchemaModificationError\n    If replacing the column would violate an invariant in the subclass.\n\nExamples\n--------\n>>> from safeds.data.tabular.transformation import OneHotEncoder\n>>> from safeds.data.tabular.containers import Table\n>>> transformer = OneHotEncoder()\n>>> table = Table.from_dict({\"fruit\": [\"apple\", \"pear\", \"apple\"], \"pet\": [\"dog\", \"duck\", \"duck\"]})\n>>> transformer = transformer.fit(table, None)\n>>> table.transform_table(transformer)\n   fruit__apple  fruit__pear  pet__dog  pet__duck\n0           1.0          0.0       1.0        0.0\n1           0.0          1.0       0.0        1.0\n2           1.0          0.0       0.0        1.0"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_table/Table/transform_table/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_table/Table/transform_table/self",
        "safeds/data/tabular/containers/_table/Table/transform_table/transformer"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/__init__",
      "name": "__init__",
      "docstring": {
        "description": "Create a tagged table from a mapping of column names to their values.\n\nParameters\n----------\ndata : Mapping[str, Sequence[Any]]\n    The data.\ntarget_name : str\n    Name of the target column.\nfeature_names : list[str] | None\n    Names of the feature columns. If None, all columns except the target column are used.\n\nRaises\n------\nColumnLengthMismatchError\n    If columns have different lengths.\nValueError\n    If the target column is also a feature column.\nValueError\n    If no feature columns are specified.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import TaggedTable\n>>> table = TaggedTable({\"a\": [1, 2, 3], \"b\": [4, 5, 6]}, \"b\", [\"a\"])",
        "full_docstring": "Create a tagged table from a mapping of column names to their values.\n\nParameters\n----------\ndata : Mapping[str, Sequence[Any]]\n    The data.\ntarget_name : str\n    Name of the target column.\nfeature_names : list[str] | None\n    Names of the feature columns. If None, all columns except the target column are used.\n\nRaises\n------\nColumnLengthMismatchError\n    If columns have different lengths.\nValueError\n    If the target column is also a feature column.\nValueError\n    If no feature columns are specified.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import TaggedTable\n>>> table = TaggedTable({\"a\": [1, 2, 3], \"b\": [4, 5, 6]}, \"b\", [\"a\"])"
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/__init__/self",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/__init__/data",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/__init__/target_name",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/__init__/feature_names"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/__sizeof__",
      "name": "__sizeof__",
      "docstring": {
        "description": "Return the complete size of this object.\n\nReturns\n-------\nSize of this object in bytes.",
        "full_docstring": "Return the complete size of this object.\n\nReturns\n-------\nSize of this object in bytes."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/__sizeof__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/__sizeof__/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/_as_table",
      "name": "_as_table",
      "docstring": {
        "description": "Return a new `Table` with the tagging removed.\n\nThe original TaggedTable is not modified.\n\nParameters\n----------\nself: TaggedTable\n    The TaggedTable.\n\nReturns\n-------\ntable: Table\n    The table as an untagged Table, i.e. without the information about which columns are features or target.",
        "full_docstring": "Return a new `Table` with the tagging removed.\n\nThe original TaggedTable is not modified.\n\nParameters\n----------\nself: TaggedTable\n    The TaggedTable.\n\nReturns\n-------\ntable: Table\n    The table as an untagged Table, i.e. without the information about which columns are features or target."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/_as_table/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/_as_table/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/_from_table",
      "name": "_from_table",
      "docstring": {
        "description": "Create a tagged table from a table.\n\nParameters\n----------\ntable : Table\n    The table.\ntarget_name : str\n    Name of the target column.\nfeature_names : list[str] | None\n    Names of the feature columns. If None, all columns except the target column are used.\n\nReturns\n-------\ntagged_table : TaggedTable\n    The created table.\n\nRaises\n------\nUnknownColumnNameError\n    If target_name matches none of the column names.\nValueError\n    If the target column is also a feature column.\nValueError\n    If no feature columns are specified.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table, TaggedTable\n>>> table = Table({\"col1\": [\"a\", \"b\", \"c\", \"a\"], \"col2\": [1, 2, 3, 4]})\n>>> tagged_table = TaggedTable._from_table(table, \"col2\", [\"col1\"])",
        "full_docstring": "Create a tagged table from a table.\n\nParameters\n----------\ntable : Table\n    The table.\ntarget_name : str\n    Name of the target column.\nfeature_names : list[str] | None\n    Names of the feature columns. If None, all columns except the target column are used.\n\nReturns\n-------\ntagged_table : TaggedTable\n    The created table.\n\nRaises\n------\nUnknownColumnNameError\n    If target_name matches none of the column names.\nValueError\n    If the target column is also a feature column.\nValueError\n    If no feature columns are specified.\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table, TaggedTable\n>>> table = Table({\"col1\": [\"a\", \"b\", \"c\", \"a\"], \"col2\": [1, 2, 3, 4]})\n>>> tagged_table = TaggedTable._from_table(table, \"col2\", [\"col1\"])"
      },
      "is_public": false,
      "is_static": true,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/_from_table/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/_from_table/table",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/_from_table/target_name",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/_from_table/feature_names"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_column",
      "name": "add_column",
      "docstring": {
        "description": "Return a new `TaggedTable` with the provided column attached at the end, as neither target nor feature column.\n\nThe original table is not modified.\n\nParameters\n----------\ncolumn : Column\n    The column to be added.\n\nReturns\n-------\nresult : TaggedTable\n    The table with the column attached as neither target nor feature column.\n\nRaises\n------\nDuplicateColumnNameError\n    If the new column already exists.\nColumnSizeError\n    If the size of the column does not match the number of rows.",
        "full_docstring": "Return a new `TaggedTable` with the provided column attached at the end, as neither target nor feature column.\n\nThe original table is not modified.\n\nParameters\n----------\ncolumn : Column\n    The column to be added.\n\nReturns\n-------\nresult : TaggedTable\n    The table with the column attached as neither target nor feature column.\n\nRaises\n------\nDuplicateColumnNameError\n    If the new column already exists.\nColumnSizeError\n    If the size of the column does not match the number of rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_column/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_column/self",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_column/column"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_column_as_feature",
      "name": "add_column_as_feature",
      "docstring": {
        "description": "Return a new table with the provided column attached at the end, as a feature column.\n\nthe original table is not modified.\n\nParameters\n----------\ncolumn : Column\n    The column to be added.\n\nReturns\n-------\nresult : TaggedTable\n    The table with the attached feature column.\n\nRaises\n------\nDuplicateColumnNameError\n    If the new column already exists.\nColumnSizeError\n    If the size of the column does not match the number of rows.",
        "full_docstring": "Return a new table with the provided column attached at the end, as a feature column.\n\nthe original table is not modified.\n\nParameters\n----------\ncolumn : Column\n    The column to be added.\n\nReturns\n-------\nresult : TaggedTable\n    The table with the attached feature column.\n\nRaises\n------\nDuplicateColumnNameError\n    If the new column already exists.\nColumnSizeError\n    If the size of the column does not match the number of rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_column_as_feature/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_column_as_feature/self",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_column_as_feature/column"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_columns",
      "name": "add_columns",
      "docstring": {
        "description": "Return a new `TaggedTable` with multiple added columns, as neither target nor feature columns.\n\nThe original table is not modified.\n\nParameters\n----------\ncolumns : list[Column] or Table\n    The columns to be added.\n\nReturns\n-------\nresult: TaggedTable\n    A new table combining the original table and the given columns as neither target nor feature columns.\n\nRaises\n------\nDuplicateColumnNameError\n    If at least one column name from the provided column list already exists in the table.\nColumnSizeError\n    If at least one of the column sizes from the provided column list does not match the table.",
        "full_docstring": "Return a new `TaggedTable` with multiple added columns, as neither target nor feature columns.\n\nThe original table is not modified.\n\nParameters\n----------\ncolumns : list[Column] or Table\n    The columns to be added.\n\nReturns\n-------\nresult: TaggedTable\n    A new table combining the original table and the given columns as neither target nor feature columns.\n\nRaises\n------\nDuplicateColumnNameError\n    If at least one column name from the provided column list already exists in the table.\nColumnSizeError\n    If at least one of the column sizes from the provided column list does not match the table."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_columns/self",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_columns/columns"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_columns_as_features",
      "name": "add_columns_as_features",
      "docstring": {
        "description": "Return a new `TaggedTable` with the provided columns attached at the end, as feature columns.\n\nThe original table is not modified.\n\nParameters\n----------\ncolumns : list[Column] | Table\n    The columns to be added as features.\n\nReturns\n-------\nresult : TaggedTable\n    The table with the attached feature columns.\n\nRaises\n------\nDuplicateColumnNameError\n    If any of the new feature columns already exist.\nColumnSizeError\n    If the size of any feature column does not match the number of rows.",
        "full_docstring": "Return a new `TaggedTable` with the provided columns attached at the end, as feature columns.\n\nThe original table is not modified.\n\nParameters\n----------\ncolumns : list[Column] | Table\n    The columns to be added as features.\n\nReturns\n-------\nresult : TaggedTable\n    The table with the attached feature columns.\n\nRaises\n------\nDuplicateColumnNameError\n    If any of the new feature columns already exist.\nColumnSizeError\n    If the size of any feature column does not match the number of rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_columns_as_features/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_columns_as_features/self",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_columns_as_features/columns"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_row",
      "name": "add_row",
      "docstring": {
        "description": "Return a new `TaggedTable` with an added Row attached.\n\nThe original table is not modified.\n\nParameters\n----------\nrow : Row\n    The row to be added.\n\nReturns\n-------\ntable : TaggedTable\n    A new tagged table with the added row at the end.\n\nRaises\n------\nUnknownColumnNameError\n    If the row has different column names than the table.",
        "full_docstring": "Return a new `TaggedTable` with an added Row attached.\n\nThe original table is not modified.\n\nParameters\n----------\nrow : Row\n    The row to be added.\n\nReturns\n-------\ntable : TaggedTable\n    A new tagged table with the added row at the end.\n\nRaises\n------\nUnknownColumnNameError\n    If the row has different column names than the table."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_row/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_row/self",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_row/row"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_rows",
      "name": "add_rows",
      "docstring": {
        "description": "Return a new `TaggedTable` with multiple added Rows attached.\n\nThe original table is not modified.\n\nParameters\n----------\nrows : list[Row] or Table\n    The rows to be added.\n\nReturns\n-------\nresult : TaggedTable\n    A new tagged table which combines the original table and the given rows.\n\nRaises\n------\nUnknownColumnNameError\n    If at least one of the rows have different column names than the table.",
        "full_docstring": "Return a new `TaggedTable` with multiple added Rows attached.\n\nThe original table is not modified.\n\nParameters\n----------\nrows : list[Row] or Table\n    The rows to be added.\n\nReturns\n-------\nresult : TaggedTable\n    A new tagged table which combines the original table and the given rows.\n\nRaises\n------\nUnknownColumnNameError\n    If at least one of the rows have different column names than the table."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_rows/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_rows/self",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_rows/rows"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/features",
      "name": "features",
      "docstring": {
        "description": "Get the feature columns of the tagged table.\n\nReturns\n-------\nTable\n    The table containing the feature columns.",
        "full_docstring": "Get the feature columns of the tagged table.\n\nReturns\n-------\nTable\n    The table containing the feature columns."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/features/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/features/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/filter_rows",
      "name": "filter_rows",
      "docstring": {
        "description": "Return a new `TaggedTable` containing only rows that match the given Callable (e.g. lambda function).\n\nThe original tagged table is not modified.\n\nParameters\n----------\nquery : lambda function\n    A Callable that is applied to all rows.\n\nReturns\n-------\nresult : TaggedTable\n    A new tagged table containing only the rows to match the query.",
        "full_docstring": "Return a new `TaggedTable` containing only rows that match the given Callable (e.g. lambda function).\n\nThe original tagged table is not modified.\n\nParameters\n----------\nquery : lambda function\n    A Callable that is applied to all rows.\n\nReturns\n-------\nresult : TaggedTable\n    A new tagged table containing only the rows to match the query."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/filter_rows/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/filter_rows/self",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/filter_rows/query"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/keep_only_columns",
      "name": "keep_only_columns",
      "docstring": {
        "description": "Return a new `TaggedTable` with only the given column(s).\n\nThe original table is not modified.\n\nParameters\n----------\ncolumn_names : list[str]\n    A list containing only the columns to be kept.\n\nReturns\n-------\ntable : TaggedTable\n    A table containing only the given column(s).\n\nRaises\n------\nUnknownColumnNameError\n    If any of the given columns does not exist.\nIllegalSchemaModificationError\n    If none of the given columns is the target column or any of the feature columns.",
        "full_docstring": "Return a new `TaggedTable` with only the given column(s).\n\nThe original table is not modified.\n\nParameters\n----------\ncolumn_names : list[str]\n    A list containing only the columns to be kept.\n\nReturns\n-------\ntable : TaggedTable\n    A table containing only the given column(s).\n\nRaises\n------\nUnknownColumnNameError\n    If any of the given columns does not exist.\nIllegalSchemaModificationError\n    If none of the given columns is the target column or any of the feature columns."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/keep_only_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/keep_only_columns/self",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/keep_only_columns/column_names"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_columns",
      "name": "remove_columns",
      "docstring": {
        "description": "Return a new `TaggedTable` with the given column(s) removed from the table.\n\nThe original table is not modified.\n\nParameters\n----------\ncolumn_names : list[str]\n    The names of all columns to be dropped.\n\nReturns\n-------\ntable : TaggedTable\n    A table without the given columns.\n\nRaises\n------\nUnknownColumnNameError\n    If any of the given columns does not exist.\nColumnIsTargetError\n    If any of the given columns is the target column.\nIllegalSchemaModificationError\n    If the given columns contain all the feature columns.",
        "full_docstring": "Return a new `TaggedTable` with the given column(s) removed from the table.\n\nThe original table is not modified.\n\nParameters\n----------\ncolumn_names : list[str]\n    The names of all columns to be dropped.\n\nReturns\n-------\ntable : TaggedTable\n    A table without the given columns.\n\nRaises\n------\nUnknownColumnNameError\n    If any of the given columns does not exist.\nColumnIsTargetError\n    If any of the given columns is the target column.\nIllegalSchemaModificationError\n    If the given columns contain all the feature columns."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_columns/self",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_columns/column_names"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_columns_with_missing_values",
      "name": "remove_columns_with_missing_values",
      "docstring": {
        "description": "Return a new `TaggedTable` with every column that misses values removed.\n\nThe original table is not modified.\n\nReturns\n-------\ntable : TaggedTable\n    A table without the columns that contain missing values.\n\nRaises\n------\nColumnIsTargetError\n    If any of the columns to be removed is the target column.\nIllegalSchemaModificationError\n    If the columns to remove contain all the feature columns.",
        "full_docstring": "Return a new `TaggedTable` with every column that misses values removed.\n\nThe original table is not modified.\n\nReturns\n-------\ntable : TaggedTable\n    A table without the columns that contain missing values.\n\nRaises\n------\nColumnIsTargetError\n    If any of the columns to be removed is the target column.\nIllegalSchemaModificationError\n    If the columns to remove contain all the feature columns."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_columns_with_missing_values/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_columns_with_missing_values/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_columns_with_non_numerical_values",
      "name": "remove_columns_with_non_numerical_values",
      "docstring": {
        "description": "Return a new `TaggedTable` with every column that contains non-numerical values removed.\n\nThe original table is not modified.\n\nReturns\n-------\ntable : TaggedTable\n    A table without the columns that contain non-numerical values.\n\nRaises\n------\nColumnIsTargetError\n    If any of the columns to be removed is the target column.\nIllegalSchemaModificationError\n    If the columns to remove contain all the feature columns.",
        "full_docstring": "Return a new `TaggedTable` with every column that contains non-numerical values removed.\n\nThe original table is not modified.\n\nReturns\n-------\ntable : TaggedTable\n    A table without the columns that contain non-numerical values.\n\nRaises\n------\nColumnIsTargetError\n    If any of the columns to be removed is the target column.\nIllegalSchemaModificationError\n    If the columns to remove contain all the feature columns."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_columns_with_non_numerical_values/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_columns_with_non_numerical_values/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_duplicate_rows",
      "name": "remove_duplicate_rows",
      "docstring": {
        "description": "Return a new `TaggedTable` with all row duplicates removed.\n\nThe original table is not modified.\n\nReturns\n-------\nresult : TaggedTable\n    The table with the duplicate rows removed.",
        "full_docstring": "Return a new `TaggedTable` with all row duplicates removed.\n\nThe original table is not modified.\n\nReturns\n-------\nresult : TaggedTable\n    The table with the duplicate rows removed."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_duplicate_rows/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_duplicate_rows/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_rows_with_missing_values",
      "name": "remove_rows_with_missing_values",
      "docstring": {
        "description": "Return a new `TaggedTable` without the rows that contain missing values.\n\nThe original table is not modified.\n\nReturns\n-------\ntable : TaggedTable\n    A table without the rows that contain missing values.",
        "full_docstring": "Return a new `TaggedTable` without the rows that contain missing values.\n\nThe original table is not modified.\n\nReturns\n-------\ntable : TaggedTable\n    A table without the rows that contain missing values."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_rows_with_missing_values/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_rows_with_missing_values/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_rows_with_outliers",
      "name": "remove_rows_with_outliers",
      "docstring": {
        "description": "Return a new `TaggedTable` with all rows that contain at least one outlier removed.\n\nWe define an outlier as a value that has a distance of more than 3 standard deviations from the column mean.\nMissing values are not considered outliers. They are also ignored during the calculation of the standard\ndeviation.\n\nThe original table is not modified.\n\nReturns\n-------\nnew_table : TaggedTable\n    A new table without rows containing outliers.",
        "full_docstring": "Return a new `TaggedTable` with all rows that contain at least one outlier removed.\n\nWe define an outlier as a value that has a distance of more than 3 standard deviations from the column mean.\nMissing values are not considered outliers. They are also ignored during the calculation of the standard\ndeviation.\n\nThe original table is not modified.\n\nReturns\n-------\nnew_table : TaggedTable\n    A new table without rows containing outliers."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_rows_with_outliers/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_rows_with_outliers/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/rename_column",
      "name": "rename_column",
      "docstring": {
        "description": "Return a new `TaggedTable` with a single column renamed.\n\nThe original table is not modified.\n\nParameters\n----------\nold_name : str\n    The old name of the target column.\nnew_name : str\n    The new name of the target column.\n\nReturns\n-------\ntable : TaggedTable\n    The Table with the renamed column.\n\nRaises\n------\nUnknownColumnNameError\n    If the specified old target column name does not exist.\nDuplicateColumnNameError\n    If the specified new target column name already exists.",
        "full_docstring": "Return a new `TaggedTable` with a single column renamed.\n\nThe original table is not modified.\n\nParameters\n----------\nold_name : str\n    The old name of the target column.\nnew_name : str\n    The new name of the target column.\n\nReturns\n-------\ntable : TaggedTable\n    The Table with the renamed column.\n\nRaises\n------\nUnknownColumnNameError\n    If the specified old target column name does not exist.\nDuplicateColumnNameError\n    If the specified new target column name already exists."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/rename_column/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/rename_column/self",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/rename_column/old_name",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/rename_column/new_name"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/replace_column",
      "name": "replace_column",
      "docstring": {
        "description": "Return a new `TaggedTable` with the specified old column replaced by a list of new columns.\n\nIf the column to be replaced is the target column, it must be replaced by exactly one column. That column\nbecomes the new target column. If the column to be replaced is a feature column, the new columns that replace it\nall become feature columns.\n\nThe order of columns is kept. The original table is not modified.\n\nParameters\n----------\nold_column_name : str\n    The name of the column to be replaced.\nnew_columns : list[Column]\n    The new columns replacing the old column.\n\nReturns\n-------\nresult : TaggedTable\n    A table with the old column replaced by the new column.\n\nRaises\n------\nUnknownColumnNameError\n    If the old column does not exist.\nDuplicateColumnNameError\n    If the new column already exists and the existing column is not affected by the replacement.\nColumnSizeError\n    If the size of the column does not match the amount of rows.\nIllegalSchemaModificationError\n    If the target column would be removed or replaced by more than one column.",
        "full_docstring": "Return a new `TaggedTable` with the specified old column replaced by a list of new columns.\n\nIf the column to be replaced is the target column, it must be replaced by exactly one column. That column\nbecomes the new target column. If the column to be replaced is a feature column, the new columns that replace it\nall become feature columns.\n\nThe order of columns is kept. The original table is not modified.\n\nParameters\n----------\nold_column_name : str\n    The name of the column to be replaced.\nnew_columns : list[Column]\n    The new columns replacing the old column.\n\nReturns\n-------\nresult : TaggedTable\n    A table with the old column replaced by the new column.\n\nRaises\n------\nUnknownColumnNameError\n    If the old column does not exist.\nDuplicateColumnNameError\n    If the new column already exists and the existing column is not affected by the replacement.\nColumnSizeError\n    If the size of the column does not match the amount of rows.\nIllegalSchemaModificationError\n    If the target column would be removed or replaced by more than one column."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/replace_column/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/replace_column/self",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/replace_column/old_column_name",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/replace_column/new_columns"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/shuffle_rows",
      "name": "shuffle_rows",
      "docstring": {
        "description": "Return a new `TaggedTable` with randomly shuffled rows of this table.\n\nThe original table is not modified.\n\nReturns\n-------\nresult : TaggedTable\n    The shuffled Table.",
        "full_docstring": "Return a new `TaggedTable` with randomly shuffled rows of this table.\n\nThe original table is not modified.\n\nReturns\n-------\nresult : TaggedTable\n    The shuffled Table."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/shuffle_rows/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/shuffle_rows/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/slice_rows",
      "name": "slice_rows",
      "docstring": {
        "description": "Slice a part of the table into a new `TaggedTable`.\n\nThe original table is not modified.\n\nParameters\n----------\nstart : int | None\n    The first index of the range to be copied into a new table, None by default.\nend : int | None\n    The last index of the range to be copied into a new table, None by default.\nstep : int\n    The step size used to iterate through the table, 1 by default.\n\nReturns\n-------\nresult : TaggedTable\n    The resulting table.\n\nRaises\n------\nIndexOutOfBoundsError\n    If the index is out of bounds.",
        "full_docstring": "Slice a part of the table into a new `TaggedTable`.\n\nThe original table is not modified.\n\nParameters\n----------\nstart : int | None\n    The first index of the range to be copied into a new table, None by default.\nend : int | None\n    The last index of the range to be copied into a new table, None by default.\nstep : int\n    The step size used to iterate through the table, 1 by default.\n\nReturns\n-------\nresult : TaggedTable\n    The resulting table.\n\nRaises\n------\nIndexOutOfBoundsError\n    If the index is out of bounds."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/slice_rows/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/slice_rows/self",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/slice_rows/start",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/slice_rows/end",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/slice_rows/step"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/sort_columns",
      "name": "sort_columns",
      "docstring": {
        "description": "Sort the columns of a `TaggedTable` with the given comparator and return a new `TaggedTable`.\n\nThe comparator is a function that takes two columns `col1` and `col2` and\nreturns an integer:\n\n* If the function returns a negative number, `col1` will be ordered before `col2`.\n* If the function returns a positive number, `col1` will be ordered after `col2`.\n* If the function returns 0, the original order of `col1` and `col2` will be kept.\n\nIf no comparator is given, the columns will be sorted alphabetically by their name.\n\nThe original table is not modified.\n\nParameters\n----------\ncomparator : Callable[[Column, Column], int]\n    The function used to compare two columns.\n\nReturns\n-------\nnew_table : TaggedTable\n    A new table with sorted columns.",
        "full_docstring": "Sort the columns of a `TaggedTable` with the given comparator and return a new `TaggedTable`.\n\nThe comparator is a function that takes two columns `col1` and `col2` and\nreturns an integer:\n\n* If the function returns a negative number, `col1` will be ordered before `col2`.\n* If the function returns a positive number, `col1` will be ordered after `col2`.\n* If the function returns 0, the original order of `col1` and `col2` will be kept.\n\nIf no comparator is given, the columns will be sorted alphabetically by their name.\n\nThe original table is not modified.\n\nParameters\n----------\ncomparator : Callable[[Column, Column], int]\n    The function used to compare two columns.\n\nReturns\n-------\nnew_table : TaggedTable\n    A new table with sorted columns."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/sort_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/sort_columns/self",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/sort_columns/comparator"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/sort_rows",
      "name": "sort_rows",
      "docstring": {
        "description": "Sort the rows of a `TaggedTable` with the given comparator and return a new `TaggedTable`.\n\nThe comparator is a function that takes two rows `row1` and `row2` and\nreturns an integer:\n\n* If the function returns a negative number, `row1` will be ordered before `row2`.\n* If the function returns a positive number, `row1` will be ordered after `row2`.\n* If the function returns 0, the original order of `row1` and `row2` will be kept.\n\nThe original table is not modified.\n\nParameters\n----------\ncomparator : Callable[[Row, Row], int]\n    The function used to compare two rows.\n\nReturns\n-------\nnew_table : TaggedTable\n    A new table with sorted rows.",
        "full_docstring": "Sort the rows of a `TaggedTable` with the given comparator and return a new `TaggedTable`.\n\nThe comparator is a function that takes two rows `row1` and `row2` and\nreturns an integer:\n\n* If the function returns a negative number, `row1` will be ordered before `row2`.\n* If the function returns a positive number, `row1` will be ordered after `row2`.\n* If the function returns 0, the original order of `row1` and `row2` will be kept.\n\nThe original table is not modified.\n\nParameters\n----------\ncomparator : Callable[[Row, Row], int]\n    The function used to compare two rows.\n\nReturns\n-------\nnew_table : TaggedTable\n    A new table with sorted rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/sort_rows/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/sort_rows/self",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/sort_rows/comparator"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/target",
      "name": "target",
      "docstring": {
        "description": "Get the target column of the tagged table.\n\nReturns\n-------\nColumn\n    The target column.",
        "full_docstring": "Get the target column of the tagged table.\n\nReturns\n-------\nColumn\n    The target column."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/target/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/target/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/transform_column",
      "name": "transform_column",
      "docstring": {
        "description": "Return a new `TaggedTable` with the provided column transformed by calling the provided transformer.\n\nThe original table is not modified.\n\nReturns\n-------\nresult : TaggedTable\n    The table with the transformed column.\n\nRaises\n------\nUnknownColumnNameError\n    If the column does not exist.",
        "full_docstring": "Return a new `TaggedTable` with the provided column transformed by calling the provided transformer.\n\nThe original table is not modified.\n\nReturns\n-------\nresult : TaggedTable\n    The table with the transformed column.\n\nRaises\n------\nUnknownColumnNameError\n    If the column does not exist."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/transform_column/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/transform_column/self",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/transform_column/name",
        "safeds/data/tabular/containers/_tagged_table/TaggedTable/transform_column/transformer"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/__init__",
      "name": "__init__",
      "docstring": {
        "description": "Create a time series from a mapping of column names to their values.\n\nParameters\n----------\ndata : Mapping[str, Sequence[Any]]\n    The data.\ntarget_name : str\n    Name of the target column.\ntime_name : str\n    Name of the time column\nfeature_names : list[str] | None\n    Names of the feature columns. If None, all columns except the target and time columns are used.\n\nRaises\n------\nColumnLengthMismatchError\n    If columns have different lengths.\nValueError\n    If the target column is also a feature column.\nValueError\n    If no feature columns are specified.\nValueError\n    If time column is also a feature column\nUnknownColumnNameError\n    If time column does not exist\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import TaggedTable\n>>> table = TaggedTable({\"a\": [1, 2, 3], \"b\": [4, 5, 6]}, \"b\", [\"a\"])",
        "full_docstring": "Create a time series from a mapping of column names to their values.\n\nParameters\n----------\ndata : Mapping[str, Sequence[Any]]\n    The data.\ntarget_name : str\n    Name of the target column.\ntime_name : str\n    Name of the time column\nfeature_names : list[str] | None\n    Names of the feature columns. If None, all columns except the target and time columns are used.\n\nRaises\n------\nColumnLengthMismatchError\n    If columns have different lengths.\nValueError\n    If the target column is also a feature column.\nValueError\n    If no feature columns are specified.\nValueError\n    If time column is also a feature column\nUnknownColumnNameError\n    If time column does not exist\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import TaggedTable\n>>> table = TaggedTable({\"a\": [1, 2, 3], \"b\": [4, 5, 6]}, \"b\", [\"a\"])"
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/__init__/self",
        "safeds/data/tabular/containers/_time_series/TimeSeries/__init__/data",
        "safeds/data/tabular/containers/_time_series/TimeSeries/__init__/target_name",
        "safeds/data/tabular/containers/_time_series/TimeSeries/__init__/time_name",
        "safeds/data/tabular/containers/_time_series/TimeSeries/__init__/feature_names"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/__sizeof__",
      "name": "__sizeof__",
      "docstring": {
        "description": "Return the complete size of this object.\n\nReturns\n-------\nSize of this object in bytes.",
        "full_docstring": "Return the complete size of this object.\n\nReturns\n-------\nSize of this object in bytes."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/__sizeof__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/__sizeof__/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/_as_table",
      "name": "_as_table",
      "docstring": {
        "description": "Return a new `Table` with the tagging removed.\n\nThe original time series is not modified.\n\nParameters\n----------\nself: TimeSeries\n    The Time Series.\n\nReturns\n-------\ntable: Table\n    The time series as an untagged Table, i.e. without the information about which columns are features, target or time.",
        "full_docstring": "Return a new `Table` with the tagging removed.\n\nThe original time series is not modified.\n\nParameters\n----------\nself: TimeSeries\n    The Time Series.\n\nReturns\n-------\ntable: Table\n    The time series as an untagged Table, i.e. without the information about which columns are features, target or time."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/_as_table/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/_as_table/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/_from_table_to_time_series",
      "name": "_from_table_to_time_series",
      "docstring": {
        "description": "Create a TimeSeries from a table.\n\nParameters\n----------\ntable : Table\n    The table.\ntarget_name : str\n    Name of the target column.\ntime_name: str\n    Name of the date column.\nfeature_names : list[str] | None\n    Names of the feature columns. If None, all columns except the target and time columns are used.\n\nReturns\n-------\ntime_series : TimeSeries\n    the created time series\n\nRaises\n------\nUnknownColumnNameError\n    If target_name or time_name matches none of the column names.\nValue Error\n    If there is no other column than the specified target and time columns left to be a feature column\nValue Error\n    If one column is target and feature\nValue Error\n    If one column is time and feature\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table, TimeSeries\n>>> table = Table({\"date\": [\"01.01\", \"01.02\", \"01.03\", \"01.04\"], \"f1\": [\"a\", \"b\", \"c\", \"a\"], \"t\": [1,2,3,4]})\n>>> timeseries = TimeSeries._from_table_to_time_series(table, \"t\", \"date\", [\"f1\"])",
        "full_docstring": "Create a TimeSeries from a table.\n\nParameters\n----------\ntable : Table\n    The table.\ntarget_name : str\n    Name of the target column.\ntime_name: str\n    Name of the date column.\nfeature_names : list[str] | None\n    Names of the feature columns. If None, all columns except the target and time columns are used.\n\nReturns\n-------\ntime_series : TimeSeries\n    the created time series\n\nRaises\n------\nUnknownColumnNameError\n    If target_name or time_name matches none of the column names.\nValue Error\n    If there is no other column than the specified target and time columns left to be a feature column\nValue Error\n    If one column is target and feature\nValue Error\n    If one column is time and feature\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table, TimeSeries\n>>> table = Table({\"date\": [\"01.01\", \"01.02\", \"01.03\", \"01.04\"], \"f1\": [\"a\", \"b\", \"c\", \"a\"], \"t\": [1,2,3,4]})\n>>> timeseries = TimeSeries._from_table_to_time_series(table, \"t\", \"date\", [\"f1\"])"
      },
      "is_public": false,
      "is_static": true,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/_from_table_to_time_series/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/_from_table_to_time_series/table",
        "safeds/data/tabular/containers/_time_series/TimeSeries/_from_table_to_time_series/target_name",
        "safeds/data/tabular/containers/_time_series/TimeSeries/_from_table_to_time_series/time_name",
        "safeds/data/tabular/containers/_time_series/TimeSeries/_from_table_to_time_series/feature_names"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/_from_tagged_table",
      "name": "_from_tagged_table",
      "docstring": {
        "description": "Create a time series from a tagged table.\n\nParameters\n----------\ntable : TaggedTable\n    The tagged table.\ntime_name: str\n    Name of the time column.\n\nReturns\n-------\ntime_series : TimeSeries\n    the created time series\n\nRaises\n------\nUnknownColumnNameError\n    If time_name matches none of the column names.\nValue Error\n    If time column is also a feature column\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table, TimeSeries\n>>> tagged_table = TaggedTable({\"date\": [\"01.01\", \"01.02\", \"01.03\", \"01.04\"], \"col1\": [\"a\", \"b\", \"c\", \"a\"]}, \"col1\" )\n>>> timeseries = TimeSeries._from_tagged_table(tagged_table, time_name = \"date\")",
        "full_docstring": "Create a time series from a tagged table.\n\nParameters\n----------\ntable : TaggedTable\n    The tagged table.\ntime_name: str\n    Name of the time column.\n\nReturns\n-------\ntime_series : TimeSeries\n    the created time series\n\nRaises\n------\nUnknownColumnNameError\n    If time_name matches none of the column names.\nValue Error\n    If time column is also a feature column\n\nExamples\n--------\n>>> from safeds.data.tabular.containers import Table, TimeSeries\n>>> tagged_table = TaggedTable({\"date\": [\"01.01\", \"01.02\", \"01.03\", \"01.04\"], \"col1\": [\"a\", \"b\", \"c\", \"a\"]}, \"col1\" )\n>>> timeseries = TimeSeries._from_tagged_table(tagged_table, time_name = \"date\")"
      },
      "is_public": false,
      "is_static": true,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/_from_tagged_table/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/_from_tagged_table/tagged_table",
        "safeds/data/tabular/containers/_time_series/TimeSeries/_from_tagged_table/time_name"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/add_column",
      "name": "add_column",
      "docstring": {
        "description": "Return a new `TimeSeries` with the provided column attached at the end, as neither target nor feature column.\n\nThe original time series is not modified.\n\nParameters\n----------\ncolumn : Column\n    The column to be added.\n\nReturns\n-------\nresult : TimeSeries\n    The time series with the column attached as neither target nor feature column.\n\nRaises\n------\nDuplicateColumnNameError\n    If the new column already exists.\nColumnSizeError\n    If the size of the column does not match the number of rows.",
        "full_docstring": "Return a new `TimeSeries` with the provided column attached at the end, as neither target nor feature column.\n\nThe original time series is not modified.\n\nParameters\n----------\ncolumn : Column\n    The column to be added.\n\nReturns\n-------\nresult : TimeSeries\n    The time series with the column attached as neither target nor feature column.\n\nRaises\n------\nDuplicateColumnNameError\n    If the new column already exists.\nColumnSizeError\n    If the size of the column does not match the number of rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/add_column/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/add_column/self",
        "safeds/data/tabular/containers/_time_series/TimeSeries/add_column/column"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/add_column_as_feature",
      "name": "add_column_as_feature",
      "docstring": {
        "description": "Return a new `TimeSeries` with the provided column attached at the end, as a feature column.\n\nthe original time series is not modified.\n\nParameters\n----------\ncolumn : Column\n    The column to be added.\n\nReturns\n-------\nresult : TimeSeries\n    The time series with the attached feature column.\n\nRaises\n------\nDuplicateColumnNameError\n    If the new column already exists.\nColumnSizeError\n    If the size of the column does not match the number of rows.",
        "full_docstring": "Return a new `TimeSeries` with the provided column attached at the end, as a feature column.\n\nthe original time series is not modified.\n\nParameters\n----------\ncolumn : Column\n    The column to be added.\n\nReturns\n-------\nresult : TimeSeries\n    The time series with the attached feature column.\n\nRaises\n------\nDuplicateColumnNameError\n    If the new column already exists.\nColumnSizeError\n    If the size of the column does not match the number of rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/add_column_as_feature/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/add_column_as_feature/self",
        "safeds/data/tabular/containers/_time_series/TimeSeries/add_column_as_feature/column"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/add_columns",
      "name": "add_columns",
      "docstring": {
        "description": "Return a new `TimeSeries` with multiple added columns, as neither target nor feature columns.\n\nThe original time series is not modified.\n\nParameters\n----------\ncolumns : list[Column] or Table\n    The columns to be added.\n\nReturns\n-------\nresult: TimeSeries\n    A new time series combining the original table and the given columns as neither target nor feature columns.\n\nRaises\n------\nDuplicateColumnNameError\n    If at least one column name from the provided column list already exists in the time series.\nColumnSizeError\n    If at least one of the column sizes from the provided column list does not match the time series.",
        "full_docstring": "Return a new `TimeSeries` with multiple added columns, as neither target nor feature columns.\n\nThe original time series is not modified.\n\nParameters\n----------\ncolumns : list[Column] or Table\n    The columns to be added.\n\nReturns\n-------\nresult: TimeSeries\n    A new time series combining the original table and the given columns as neither target nor feature columns.\n\nRaises\n------\nDuplicateColumnNameError\n    If at least one column name from the provided column list already exists in the time series.\nColumnSizeError\n    If at least one of the column sizes from the provided column list does not match the time series."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/add_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/add_columns/self",
        "safeds/data/tabular/containers/_time_series/TimeSeries/add_columns/columns"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/add_columns_as_features",
      "name": "add_columns_as_features",
      "docstring": {
        "description": "Return a new `TimeSeries` with the provided columns attached at the end, as feature columns.\n\nThe original time series is not modified.\n\nParameters\n----------\ncolumns : list[Column] | Table\n    The columns to be added as features.\n\nReturns\n-------\nresult : TimeSeries\n    The time series with the attached feature columns.\n\nRaises\n------\nDuplicateColumnNameError\n    If any of the new feature columns already exist.\nColumnSizeError\n    If the size of any feature column does not match the number of rows.",
        "full_docstring": "Return a new `TimeSeries` with the provided columns attached at the end, as feature columns.\n\nThe original time series is not modified.\n\nParameters\n----------\ncolumns : list[Column] | Table\n    The columns to be added as features.\n\nReturns\n-------\nresult : TimeSeries\n    The time series with the attached feature columns.\n\nRaises\n------\nDuplicateColumnNameError\n    If any of the new feature columns already exist.\nColumnSizeError\n    If the size of any feature column does not match the number of rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/add_columns_as_features/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/add_columns_as_features/self",
        "safeds/data/tabular/containers/_time_series/TimeSeries/add_columns_as_features/columns"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/add_row",
      "name": "add_row",
      "docstring": {
        "description": "Return a new `TimeSeries` with an extra Row attached.\n\nThe original time series is not modified.\n\nParameters\n----------\nrow : Row\n    The row to be added.\n\nReturns\n-------\ntable : TimeSeries\n    A new time series with the added row at the end.\n\nRaises\n------\nUnknownColumnNameError\n    If the row has different column names than the time series.",
        "full_docstring": "Return a new `TimeSeries` with an extra Row attached.\n\nThe original time series is not modified.\n\nParameters\n----------\nrow : Row\n    The row to be added.\n\nReturns\n-------\ntable : TimeSeries\n    A new time series with the added row at the end.\n\nRaises\n------\nUnknownColumnNameError\n    If the row has different column names than the time series."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/add_row/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/add_row/self",
        "safeds/data/tabular/containers/_time_series/TimeSeries/add_row/row"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/add_rows",
      "name": "add_rows",
      "docstring": {
        "description": "Return a new `TimeSeries` with multiple extra Rows attached.\n\nThe original time series is not modified.\n\nParameters\n----------\nrows : list[Row] or Table\n    The rows to be added.\n\nReturns\n-------\nresult : TimeSeries\n    A new time series which combines the original time series and the given rows.\n\nRaises\n------\nUnknownColumnNameError\n    If at least one of the rows have different column names than the time series.",
        "full_docstring": "Return a new `TimeSeries` with multiple extra Rows attached.\n\nThe original time series is not modified.\n\nParameters\n----------\nrows : list[Row] or Table\n    The rows to be added.\n\nReturns\n-------\nresult : TimeSeries\n    A new time series which combines the original time series and the given rows.\n\nRaises\n------\nUnknownColumnNameError\n    If at least one of the rows have different column names than the time series."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/add_rows/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/add_rows/self",
        "safeds/data/tabular/containers/_time_series/TimeSeries/add_rows/rows"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/filter_rows",
      "name": "filter_rows",
      "docstring": {
        "description": "Return a new `TimeSeries` containing only rows that match the given Callable (e.g. lambda function).\n\nThe original time series is not modified.\n\nParameters\n----------\nquery : lambda function\n    A Callable that is applied to all rows.\n\nReturns\n-------\nresult: TimeSeries\n    A time series containing only the rows to match the query.",
        "full_docstring": "Return a new `TimeSeries` containing only rows that match the given Callable (e.g. lambda function).\n\nThe original time series is not modified.\n\nParameters\n----------\nquery : lambda function\n    A Callable that is applied to all rows.\n\nReturns\n-------\nresult: TimeSeries\n    A time series containing only the rows to match the query."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/filter_rows/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/filter_rows/self",
        "safeds/data/tabular/containers/_time_series/TimeSeries/filter_rows/query"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/keep_only_columns",
      "name": "keep_only_columns",
      "docstring": {
        "description": "Return a new `TimeSeries` with only the given column(s).\n\nThe original time series is not modified.\n\nParameters\n----------\ncolumn_names : list[str]\n    A list containing the columns to be kept.\n\nReturns\n-------\ntable : TimeSeries\n    A time series containing only the given column(s).\n\nRaises\n------\nUnknownColumnNameError\n    If any of the given columns does not exist.\nIllegalSchemaModificationError\n    If none of the given columns is the target or time column or any of the feature columns.",
        "full_docstring": "Return a new `TimeSeries` with only the given column(s).\n\nThe original time series is not modified.\n\nParameters\n----------\ncolumn_names : list[str]\n    A list containing the columns to be kept.\n\nReturns\n-------\ntable : TimeSeries\n    A time series containing only the given column(s).\n\nRaises\n------\nUnknownColumnNameError\n    If any of the given columns does not exist.\nIllegalSchemaModificationError\n    If none of the given columns is the target or time column or any of the feature columns."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/keep_only_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/keep_only_columns/self",
        "safeds/data/tabular/containers/_time_series/TimeSeries/keep_only_columns/column_names"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/plot_lagplot",
      "name": "plot_lagplot",
      "docstring": {
        "description": "Plot a lagplot for the target column.\n\nParameters\n----------\nlag:\n    The amount of lag used to plot\n\nReturns\n-------\nplot:\n    The plot as an image.\n\nRaises\n------\nNonNumericColumnError\n    If the time series targets contains non-numerical values.\n\nExamples\n--------\n        >>> from safeds.data.tabular.containers import TimeSeries\n        >>> table = TimeSeries({\"time\":[1, 2], \"target\": [3, 4], \"feature\":[2,2]}, target_name= \"target\", time_name=\"time\", feature_names=[\"feature\"], )\n        >>> image = table.plot_lagplot(lag = 1)",
        "full_docstring": "Plot a lagplot for the target column.\n\nParameters\n----------\nlag:\n    The amount of lag used to plot\n\nReturns\n-------\nplot:\n    The plot as an image.\n\nRaises\n------\nNonNumericColumnError\n    If the time series targets contains non-numerical values.\n\nExamples\n--------\n        >>> from safeds.data.tabular.containers import TimeSeries\n        >>> table = TimeSeries({\"time\":[1, 2], \"target\": [3, 4], \"feature\":[2,2]}, target_name= \"target\", time_name=\"time\", feature_names=[\"feature\"], )\n        >>> image = table.plot_lagplot(lag = 1)"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/plot_lagplot/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/plot_lagplot/self",
        "safeds/data/tabular/containers/_time_series/TimeSeries/plot_lagplot/lag"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/remove_columns",
      "name": "remove_columns",
      "docstring": {
        "description": "Return a new `TimeSeries` with the given column(s) removed from the time series.\n\nThe original time series is not modified.\n\nParameters\n----------\ncolumn_names : list[str]\n    The names of all columns to be dropped.\n\nReturns\n-------\ntable : TimeSeries\n    A time series without the given columns.\n\nRaises\n------\nUnknownColumnNameError\n    If any of the given columns does not exist.\nColumnIsTargetError\n    If any of the given columns is the target column.\nColumnIsTimeError\n    If any of the given columns is the time column.\nIllegalSchemaModificationError\n    If the given columns contain all the feature columns.",
        "full_docstring": "Return a new `TimeSeries` with the given column(s) removed from the time series.\n\nThe original time series is not modified.\n\nParameters\n----------\ncolumn_names : list[str]\n    The names of all columns to be dropped.\n\nReturns\n-------\ntable : TimeSeries\n    A time series without the given columns.\n\nRaises\n------\nUnknownColumnNameError\n    If any of the given columns does not exist.\nColumnIsTargetError\n    If any of the given columns is the target column.\nColumnIsTimeError\n    If any of the given columns is the time column.\nIllegalSchemaModificationError\n    If the given columns contain all the feature columns."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/remove_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/remove_columns/self",
        "safeds/data/tabular/containers/_time_series/TimeSeries/remove_columns/column_names"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/remove_columns_with_missing_values",
      "name": "remove_columns_with_missing_values",
      "docstring": {
        "description": "Return a new `TimeSeries` with every column that misses values removed.\n\nThe original time series is not modified.\n\nReturns\n-------\ntable : TimeSeries\n    A time series without the columns that contain missing values.\n\nRaises\n------\nColumnIsTargetError\n    If any of the columns to be removed is the target column.\nColumnIsTimeError\n    If any of the columns to be removed is the time column.\nIllegalSchemaModificationError\n    If the columns to remove contain all the feature columns.",
        "full_docstring": "Return a new `TimeSeries` with every column that misses values removed.\n\nThe original time series is not modified.\n\nReturns\n-------\ntable : TimeSeries\n    A time series without the columns that contain missing values.\n\nRaises\n------\nColumnIsTargetError\n    If any of the columns to be removed is the target column.\nColumnIsTimeError\n    If any of the columns to be removed is the time column.\nIllegalSchemaModificationError\n    If the columns to remove contain all the feature columns."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/remove_columns_with_missing_values/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/remove_columns_with_missing_values/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/remove_columns_with_non_numerical_values",
      "name": "remove_columns_with_non_numerical_values",
      "docstring": {
        "description": "Return a new `TimeSeries` with every column that contains non-numerical values removed.\n\nThe original time series is not modified.\n\nReturns\n-------\ntable : TimeSeries\n    A time series without the columns that contain non-numerical values.\n\nRaises\n------\nColumnIsTargetError\n    If any of the columns to be removed is the target column.\nColumnIsTimeError\n    If any of the columns to be removed is the time column.\nIllegalSchemaModificationError\n    If the columns to remove contain all the feature columns.",
        "full_docstring": "Return a new `TimeSeries` with every column that contains non-numerical values removed.\n\nThe original time series is not modified.\n\nReturns\n-------\ntable : TimeSeries\n    A time series without the columns that contain non-numerical values.\n\nRaises\n------\nColumnIsTargetError\n    If any of the columns to be removed is the target column.\nColumnIsTimeError\n    If any of the columns to be removed is the time column.\nIllegalSchemaModificationError\n    If the columns to remove contain all the feature columns."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/remove_columns_with_non_numerical_values/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/remove_columns_with_non_numerical_values/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/remove_duplicate_rows",
      "name": "remove_duplicate_rows",
      "docstring": {
        "description": "Return a new `TimeSeries` with all row duplicates removed.\n\nThe original time series is not modified.\n\nReturns\n-------\nresult : TimeSeries\n    The time series with the duplicate rows removed.",
        "full_docstring": "Return a new `TimeSeries` with all row duplicates removed.\n\nThe original time series is not modified.\n\nReturns\n-------\nresult : TimeSeries\n    The time series with the duplicate rows removed."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/remove_duplicate_rows/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/remove_duplicate_rows/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/remove_rows_with_missing_values",
      "name": "remove_rows_with_missing_values",
      "docstring": {
        "description": "Return a new `TimeSeries` without the rows that contain missing values.\n\nThe original time series is not modified.\n\nReturns\n-------\ntable : TimeSeries\n    A time series without the rows that contain missing values.",
        "full_docstring": "Return a new `TimeSeries` without the rows that contain missing values.\n\nThe original time series is not modified.\n\nReturns\n-------\ntable : TimeSeries\n    A time series without the rows that contain missing values."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/remove_rows_with_missing_values/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/remove_rows_with_missing_values/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/remove_rows_with_outliers",
      "name": "remove_rows_with_outliers",
      "docstring": {
        "description": "Return a new `TimeSeries` with all rows that contain at least one outlier removed.\n\nWe define an outlier as a value that has a distance of more than 3 standard deviations from the column mean.\nMissing values are not considered outliers. They are also ignored during the calculation of the standard\ndeviation.\n\nThe original time series is not modified.\n\nReturns\n-------\nnew_time_series : TimeSeries\n    A new time series without rows containing outliers.",
        "full_docstring": "Return a new `TimeSeries` with all rows that contain at least one outlier removed.\n\nWe define an outlier as a value that has a distance of more than 3 standard deviations from the column mean.\nMissing values are not considered outliers. They are also ignored during the calculation of the standard\ndeviation.\n\nThe original time series is not modified.\n\nReturns\n-------\nnew_time_series : TimeSeries\n    A new time series without rows containing outliers."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/remove_rows_with_outliers/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/remove_rows_with_outliers/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/rename_column",
      "name": "rename_column",
      "docstring": {
        "description": "Return a new `TimeSeries` with a single column renamed.\n\nThe original time series is not modified.\n\nParameters\n----------\nold_name : str\n    The old name of the column.\nnew_name : str\n    The new name of the column.\n\nReturns\n-------\ntable : TimeSeries\n    The time series with the renamed column.\n\nRaises\n------\nUnknownColumnNameError\n    If the specified old target column name does not exist.\nDuplicateColumnNameError\n    If the specified new target column name already exists.",
        "full_docstring": "Return a new `TimeSeries` with a single column renamed.\n\nThe original time series is not modified.\n\nParameters\n----------\nold_name : str\n    The old name of the column.\nnew_name : str\n    The new name of the column.\n\nReturns\n-------\ntable : TimeSeries\n    The time series with the renamed column.\n\nRaises\n------\nUnknownColumnNameError\n    If the specified old target column name does not exist.\nDuplicateColumnNameError\n    If the specified new target column name already exists."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/rename_column/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/rename_column/self",
        "safeds/data/tabular/containers/_time_series/TimeSeries/rename_column/old_name",
        "safeds/data/tabular/containers/_time_series/TimeSeries/rename_column/new_name"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/replace_column",
      "name": "replace_column",
      "docstring": {
        "description": "Return a new `TimeSeries` with the specified old column replaced by a list of new columns.\n\nIf the column to be replaced is the target or time column, it must be replaced by exactly one column. That column\nbecomes the new target or time column. If the column to be replaced is a feature column, the new columns that replace it\nall become feature columns.\n\nThe order of columns is kept. The original time series is not modified.\n\nParameters\n----------\nold_column_name : str\n    The name of the column to be replaced.\nnew_columns : list[Column]\n    The new columns replacing the old column.\n\nReturns\n-------\nresult : TimeSeries\n    A time series with the old column replaced by the new columns.\n\nRaises\n------\nUnknownColumnNameError\n    If the old column does not exist.\nDuplicateColumnNameError\n    If the new column already exists and the existing column is not affected by the replacement.\nColumnSizeError\n    If the size of the column does not match the amount of rows.\nIllegalSchemaModificationError\n    If the target or time column would be removed or replaced by more than one column.",
        "full_docstring": "Return a new `TimeSeries` with the specified old column replaced by a list of new columns.\n\nIf the column to be replaced is the target or time column, it must be replaced by exactly one column. That column\nbecomes the new target or time column. If the column to be replaced is a feature column, the new columns that replace it\nall become feature columns.\n\nThe order of columns is kept. The original time series is not modified.\n\nParameters\n----------\nold_column_name : str\n    The name of the column to be replaced.\nnew_columns : list[Column]\n    The new columns replacing the old column.\n\nReturns\n-------\nresult : TimeSeries\n    A time series with the old column replaced by the new columns.\n\nRaises\n------\nUnknownColumnNameError\n    If the old column does not exist.\nDuplicateColumnNameError\n    If the new column already exists and the existing column is not affected by the replacement.\nColumnSizeError\n    If the size of the column does not match the amount of rows.\nIllegalSchemaModificationError\n    If the target or time column would be removed or replaced by more than one column."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/replace_column/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/replace_column/self",
        "safeds/data/tabular/containers/_time_series/TimeSeries/replace_column/old_column_name",
        "safeds/data/tabular/containers/_time_series/TimeSeries/replace_column/new_columns"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/slice_rows",
      "name": "slice_rows",
      "docstring": {
        "description": "Slice a part of the table into a new `TimeSeries`.\n\nThe original time series is not modified.\n\nParameters\n----------\nstart : int | None\n    The first index of the range to be copied into a new time series, None by default.\nend : int | None\n    The last index of the range to be copied into a new time series, None by default.\nstep : int\n    The step size used to iterate through the time series, 1 by default.\n\nReturns\n-------\nresult : TimeSeries\n    The resulting time series.\n\nRaises\n------\nIndexOutOfBoundsError\n    If the index is out of bounds.",
        "full_docstring": "Slice a part of the table into a new `TimeSeries`.\n\nThe original time series is not modified.\n\nParameters\n----------\nstart : int | None\n    The first index of the range to be copied into a new time series, None by default.\nend : int | None\n    The last index of the range to be copied into a new time series, None by default.\nstep : int\n    The step size used to iterate through the time series, 1 by default.\n\nReturns\n-------\nresult : TimeSeries\n    The resulting time series.\n\nRaises\n------\nIndexOutOfBoundsError\n    If the index is out of bounds."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/slice_rows/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/slice_rows/self",
        "safeds/data/tabular/containers/_time_series/TimeSeries/slice_rows/start",
        "safeds/data/tabular/containers/_time_series/TimeSeries/slice_rows/end",
        "safeds/data/tabular/containers/_time_series/TimeSeries/slice_rows/step"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/sort_columns",
      "name": "sort_columns",
      "docstring": {
        "description": "Sort the columns of a `TimeSeries` with the given comparator and return a new `TimeSeries`.\n\nThe comparator is a function that takes two columns `col1` and `col2` and\nreturns an integer:\n\n* If the function returns a negative number, `col1` will be ordered before `col2`.\n* If the function returns a positive number, `col1` will be ordered after `col2`.\n* If the function returns 0, the original order of `col1` and `col2` will be kept.\n\nIf no comparator is given, the columns will be sorted alphabetically by their name.\n\nThe original time series is not modified.\n\nParameters\n----------\ncomparator : Callable[[Column, Column], int]\n    The function used to compare two columns.\n\nReturns\n-------\nnew_time_series : TimeSeries\n    A new time series with sorted columns.",
        "full_docstring": "Sort the columns of a `TimeSeries` with the given comparator and return a new `TimeSeries`.\n\nThe comparator is a function that takes two columns `col1` and `col2` and\nreturns an integer:\n\n* If the function returns a negative number, `col1` will be ordered before `col2`.\n* If the function returns a positive number, `col1` will be ordered after `col2`.\n* If the function returns 0, the original order of `col1` and `col2` will be kept.\n\nIf no comparator is given, the columns will be sorted alphabetically by their name.\n\nThe original time series is not modified.\n\nParameters\n----------\ncomparator : Callable[[Column, Column], int]\n    The function used to compare two columns.\n\nReturns\n-------\nnew_time_series : TimeSeries\n    A new time series with sorted columns."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/sort_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/sort_columns/self",
        "safeds/data/tabular/containers/_time_series/TimeSeries/sort_columns/comparator"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/time",
      "name": "time",
      "docstring": {
        "description": "Get the time column of the time series.\n\nReturns\n-------\nColumn\n    The time column.",
        "full_docstring": "Get the time column of the time series.\n\nReturns\n-------\nColumn\n    The time column."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/time/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/time/self"
      ]
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/transform_column",
      "name": "transform_column",
      "docstring": {
        "description": "Return a new `TimeSeries` with the provided column transformed by calling the provided transformer.\n\nThe original time series is not modified.\n\nParameters\n----------\nname:\n    The name of the column to be transformed.\ntransformer:\n    The transformer to the given column\n\nReturns\n-------\nresult : TimeSeries\n    The time series with the transformed column.\n\nRaises\n------\nUnknownColumnNameError\n    If the column does not exist.",
        "full_docstring": "Return a new `TimeSeries` with the provided column transformed by calling the provided transformer.\n\nThe original time series is not modified.\n\nParameters\n----------\nname:\n    The name of the column to be transformed.\ntransformer:\n    The transformer to the given column\n\nReturns\n-------\nresult : TimeSeries\n    The time series with the transformed column.\n\nRaises\n------\nUnknownColumnNameError\n    If the column does not exist."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/transform_column/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/containers"
      ],
      "parameters": [
        "safeds/data/tabular/containers/_time_series/TimeSeries/transform_column/self",
        "safeds/data/tabular/containers/_time_series/TimeSeries/transform_column/name",
        "safeds/data/tabular/containers/_time_series/TimeSeries/transform_column/transformer"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_discretizer/Discretizer/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_discretizer/Discretizer/__init__/self",
        "safeds/data/tabular/transformation/_discretizer/Discretizer/__init__/number_of_bins"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_discretizer/Discretizer/fit",
      "name": "fit",
      "docstring": {
        "description": "Learn a transformation for a set of columns in a table.\n\nThis transformer is not modified.\n\nParameters\n----------\ntable : Table\n    The table used to fit the transformer.\ncolumn_names : list[str] | None\n    The list of columns from the table used to fit the transformer. If `None`, all columns are used.\n\nReturns\n-------\nfitted_transformer : TableTransformer\n    The fitted transformer.\n\nRaises\n------\nValueError\n    If the table is empty.\nNonNumericColumnError\n    If one of the columns, that should be fitted is non-numeric.\nUnknownColumnNameError\n    If one of the columns, that should be fitted is not in the table.",
        "full_docstring": "Learn a transformation for a set of columns in a table.\n\nThis transformer is not modified.\n\nParameters\n----------\ntable : Table\n    The table used to fit the transformer.\ncolumn_names : list[str] | None\n    The list of columns from the table used to fit the transformer. If `None`, all columns are used.\n\nReturns\n-------\nfitted_transformer : TableTransformer\n    The fitted transformer.\n\nRaises\n------\nValueError\n    If the table is empty.\nNonNumericColumnError\n    If one of the columns, that should be fitted is non-numeric.\nUnknownColumnNameError\n    If one of the columns, that should be fitted is not in the table."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_discretizer/Discretizer/fit/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_discretizer/Discretizer/fit/self",
        "safeds/data/tabular/transformation/_discretizer/Discretizer/fit/table",
        "safeds/data/tabular/transformation/_discretizer/Discretizer/fit/column_names"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_discretizer/Discretizer/get_names_of_added_columns",
      "name": "get_names_of_added_columns",
      "docstring": {
        "description": "Get the names of all new columns that have been added by the Discretizer.\n\nReturns\n-------\nadded_columns : list[str]\n    A list of names of the added columns, ordered as they will appear in the table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.",
        "full_docstring": "Get the names of all new columns that have been added by the Discretizer.\n\nReturns\n-------\nadded_columns : list[str]\n    A list of names of the added columns, ordered as they will appear in the table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_discretizer/Discretizer/get_names_of_added_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_discretizer/Discretizer/get_names_of_added_columns/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_discretizer/Discretizer/get_names_of_changed_columns",
      "name": "get_names_of_changed_columns",
      "docstring": {
        "description": " Get the names of all columns that may have been changed by the Discretizer.\n\nReturns\n-------\nchanged_columns : list[str]\n     The list of (potentially) changed column names, as passed to fit.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.",
        "full_docstring": " Get the names of all columns that may have been changed by the Discretizer.\n\nReturns\n-------\nchanged_columns : list[str]\n     The list of (potentially) changed column names, as passed to fit.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_discretizer/Discretizer/get_names_of_changed_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_discretizer/Discretizer/get_names_of_changed_columns/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_discretizer/Discretizer/get_names_of_removed_columns",
      "name": "get_names_of_removed_columns",
      "docstring": {
        "description": "Get the names of all columns that have been removed by the Discretizer.\n\nReturns\n-------\nremoved_columns : list[str]\n    A list of names of the removed columns, ordered as they appear in the table the Discretizer was fitted on.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.",
        "full_docstring": "Get the names of all columns that have been removed by the Discretizer.\n\nReturns\n-------\nremoved_columns : list[str]\n    A list of names of the removed columns, ordered as they appear in the table the Discretizer was fitted on.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_discretizer/Discretizer/get_names_of_removed_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_discretizer/Discretizer/get_names_of_removed_columns/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_discretizer/Discretizer/is_fitted",
      "name": "is_fitted",
      "docstring": {
        "description": "Check if the transformer is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the transformer is fitted.",
        "full_docstring": "Check if the transformer is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the transformer is fitted."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_discretizer/Discretizer/is_fitted/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_discretizer/Discretizer/is_fitted/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_discretizer/Discretizer/transform",
      "name": "transform",
      "docstring": {
        "description": "Apply the learned transformation to a table.\n\nThe table is not modified.\n\nParameters\n----------\ntable : Table\n    The table to which the learned transformation is applied.\n\nReturns\n-------\ntransformed_table : Table\n    The transformed table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.\nValueError\n    If the table is empty.\nUnknownColumnNameError\n    If one of the columns, that should be transformed is not in the table.\nNonNumericColumnError\n    If one of the columns, that should be fitted is non-numeric.",
        "full_docstring": "Apply the learned transformation to a table.\n\nThe table is not modified.\n\nParameters\n----------\ntable : Table\n    The table to which the learned transformation is applied.\n\nReturns\n-------\ntransformed_table : Table\n    The transformed table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.\nValueError\n    If the table is empty.\nUnknownColumnNameError\n    If one of the columns, that should be transformed is not in the table.\nNonNumericColumnError\n    If one of the columns, that should be fitted is non-numeric."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_discretizer/Discretizer/transform/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_discretizer/Discretizer/transform/self",
        "safeds/data/tabular/transformation/_discretizer/Discretizer/transform/table"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Constant/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Constant/__init__/self",
        "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Constant/__init__/value"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Constant/__str__",
      "name": "__str__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Constant/__str__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Constant/__str__/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Constant/_augment_imputer",
      "name": "_augment_imputer",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Constant/_augment_imputer/self",
        "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Constant/_augment_imputer/imputer"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Mean/__str__",
      "name": "__str__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Mean/__str__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Mean/__str__/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Mean/_augment_imputer",
      "name": "_augment_imputer",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Mean/_augment_imputer/self",
        "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Mean/_augment_imputer/imputer"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Median/__str__",
      "name": "__str__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Median/__str__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Median/__str__/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Median/_augment_imputer",
      "name": "_augment_imputer",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Median/_augment_imputer/self",
        "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Median/_augment_imputer/imputer"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Mode/__str__",
      "name": "__str__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Mode/__str__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Mode/__str__/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Mode/_augment_imputer",
      "name": "_augment_imputer",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Mode/_augment_imputer/self",
        "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Mode/_augment_imputer/imputer"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_imputer/Imputer/__init__/self",
        "safeds/data/tabular/transformation/_imputer/Imputer/__init__/strategy"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/fit",
      "name": "fit",
      "docstring": {
        "description": "Learn a transformation for a set of columns in a table.\n\nThis transformer is not modified.\n\nParameters\n----------\ntable : Table\n    The table used to fit the transformer.\ncolumn_names : list[str] | None\n    The list of columns from the table used to fit the transformer. If `None`, all columns are used.\n\nReturns\n-------\nfitted_transformer : TableTransformer\n    The fitted transformer.\n\nRaises\n------\nUnknownColumnNameError\n    If column_names contain a column name that is missing in the table\nValueError\n    If the table contains 0 rows\nNonNumericColumnError\n    If the strategy is set to either Mean or Median and the specified columns of the table contain non-numerical data.",
        "full_docstring": "Learn a transformation for a set of columns in a table.\n\nThis transformer is not modified.\n\nParameters\n----------\ntable : Table\n    The table used to fit the transformer.\ncolumn_names : list[str] | None\n    The list of columns from the table used to fit the transformer. If `None`, all columns are used.\n\nReturns\n-------\nfitted_transformer : TableTransformer\n    The fitted transformer.\n\nRaises\n------\nUnknownColumnNameError\n    If column_names contain a column name that is missing in the table\nValueError\n    If the table contains 0 rows\nNonNumericColumnError\n    If the strategy is set to either Mean or Median and the specified columns of the table contain non-numerical data."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_imputer/Imputer/fit/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_imputer/Imputer/fit/self",
        "safeds/data/tabular/transformation/_imputer/Imputer/fit/table",
        "safeds/data/tabular/transformation/_imputer/Imputer/fit/column_names"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/get_names_of_added_columns",
      "name": "get_names_of_added_columns",
      "docstring": {
        "description": "Get the names of all new columns that have been added by the Imputer.\n\nReturns\n-------\nadded_columns : list[str]\n    A list of names of the added columns, ordered as they will appear in the table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.",
        "full_docstring": "Get the names of all new columns that have been added by the Imputer.\n\nReturns\n-------\nadded_columns : list[str]\n    A list of names of the added columns, ordered as they will appear in the table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_imputer/Imputer/get_names_of_added_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_imputer/Imputer/get_names_of_added_columns/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/get_names_of_changed_columns",
      "name": "get_names_of_changed_columns",
      "docstring": {
        "description": " Get the names of all columns that may have been changed by the Imputer.\n\nReturns\n-------\nchanged_columns : list[str]\n     The list of (potentially) changed column names, as passed to fit.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.",
        "full_docstring": " Get the names of all columns that may have been changed by the Imputer.\n\nReturns\n-------\nchanged_columns : list[str]\n     The list of (potentially) changed column names, as passed to fit.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_imputer/Imputer/get_names_of_changed_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_imputer/Imputer/get_names_of_changed_columns/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/get_names_of_removed_columns",
      "name": "get_names_of_removed_columns",
      "docstring": {
        "description": "Get the names of all columns that have been removed by the Imputer.\n\nReturns\n-------\nremoved_columns : list[str]\n    A list of names of the removed columns, ordered as they appear in the table the Imputer was fitted on.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.",
        "full_docstring": "Get the names of all columns that have been removed by the Imputer.\n\nReturns\n-------\nremoved_columns : list[str]\n    A list of names of the removed columns, ordered as they appear in the table the Imputer was fitted on.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_imputer/Imputer/get_names_of_removed_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_imputer/Imputer/get_names_of_removed_columns/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/is_fitted",
      "name": "is_fitted",
      "docstring": {
        "description": "Check if the transformer is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the transformer is fitted.",
        "full_docstring": "Check if the transformer is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the transformer is fitted."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_imputer/Imputer/is_fitted/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_imputer/Imputer/is_fitted/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/transform",
      "name": "transform",
      "docstring": {
        "description": "Apply the learned transformation to a table.\n\nThe table is not modified.\n\nParameters\n----------\ntable : Table\n    The table to which the learned transformation is applied.\n\nReturns\n-------\ntransformed_table : Table\n    The transformed table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.\nUnknownColumnNameError\n    If the input table does not contain all columns used to fit the transformer.\nValueError\n    If the table contains 0 rows.",
        "full_docstring": "Apply the learned transformation to a table.\n\nThe table is not modified.\n\nParameters\n----------\ntable : Table\n    The table to which the learned transformation is applied.\n\nReturns\n-------\ntransformed_table : Table\n    The transformed table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.\nUnknownColumnNameError\n    If the input table does not contain all columns used to fit the transformer.\nValueError\n    If the table contains 0 rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_imputer/Imputer/transform/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_imputer/Imputer/transform/self",
        "safeds/data/tabular/transformation/_imputer/Imputer/transform/table"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/__init__/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/fit",
      "name": "fit",
      "docstring": {
        "description": "Learn a transformation for a set of columns in a table.\n\nThis transformer is not modified.\n\nParameters\n----------\ntable : Table\n    The table used to fit the transformer.\ncolumn_names : list[str] | None\n    The list of columns from the table used to fit the transformer. If `None`, all columns are used.\n\nReturns\n-------\nfitted_transformer : TableTransformer\n    The fitted transformer.\n\nRaises\n------\nUnknownColumnNameError\n    If column_names contain a column name that is missing in the table.\nValueError\n    If the table contains 0 rows.",
        "full_docstring": "Learn a transformation for a set of columns in a table.\n\nThis transformer is not modified.\n\nParameters\n----------\ntable : Table\n    The table used to fit the transformer.\ncolumn_names : list[str] | None\n    The list of columns from the table used to fit the transformer. If `None`, all columns are used.\n\nReturns\n-------\nfitted_transformer : TableTransformer\n    The fitted transformer.\n\nRaises\n------\nUnknownColumnNameError\n    If column_names contain a column name that is missing in the table.\nValueError\n    If the table contains 0 rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/fit/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/fit/self",
        "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/fit/table",
        "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/fit/column_names"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/get_names_of_added_columns",
      "name": "get_names_of_added_columns",
      "docstring": {
        "description": "Get the names of all new columns that have been added by the LabelEncoder.\n\nReturns\n-------\nadded_columns : list[str]\n    A list of names of the added columns, ordered as they will appear in the table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.",
        "full_docstring": "Get the names of all new columns that have been added by the LabelEncoder.\n\nReturns\n-------\nadded_columns : list[str]\n    A list of names of the added columns, ordered as they will appear in the table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/get_names_of_added_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/get_names_of_added_columns/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/get_names_of_changed_columns",
      "name": "get_names_of_changed_columns",
      "docstring": {
        "description": " Get the names of all columns that may have been changed by the LabelEncoder.\n\nReturns\n-------\nchanged_columns : list[str]\n     The list of (potentially) changed column names, as passed to fit.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.",
        "full_docstring": " Get the names of all columns that may have been changed by the LabelEncoder.\n\nReturns\n-------\nchanged_columns : list[str]\n     The list of (potentially) changed column names, as passed to fit.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/get_names_of_changed_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/get_names_of_changed_columns/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/get_names_of_removed_columns",
      "name": "get_names_of_removed_columns",
      "docstring": {
        "description": "Get the names of all columns that have been removed by the LabelEncoder.\n\nReturns\n-------\nremoved_columns : list[str]\n    A list of names of the removed columns, ordered as they appear in the table the LabelEncoder was fitted on.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.",
        "full_docstring": "Get the names of all columns that have been removed by the LabelEncoder.\n\nReturns\n-------\nremoved_columns : list[str]\n    A list of names of the removed columns, ordered as they appear in the table the LabelEncoder was fitted on.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/get_names_of_removed_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/get_names_of_removed_columns/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/inverse_transform",
      "name": "inverse_transform",
      "docstring": {
        "description": "Undo the learned transformation.\n\nThe table is not modified.\n\nParameters\n----------\ntransformed_table : Table\n    The table to be transformed back to the original version.\n\nReturns\n-------\ntable : Table\n    The original table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.\nUnknownColumnNameError\n    If the input table does not contain all columns used to fit the transformer.\nNonNumericColumnError\n    If the specified columns of the input table contain non-numerical data.\nValueError\n    If the table contains 0 rows.",
        "full_docstring": "Undo the learned transformation.\n\nThe table is not modified.\n\nParameters\n----------\ntransformed_table : Table\n    The table to be transformed back to the original version.\n\nReturns\n-------\ntable : Table\n    The original table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.\nUnknownColumnNameError\n    If the input table does not contain all columns used to fit the transformer.\nNonNumericColumnError\n    If the specified columns of the input table contain non-numerical data.\nValueError\n    If the table contains 0 rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/inverse_transform/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/inverse_transform/self",
        "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/inverse_transform/transformed_table"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/is_fitted",
      "name": "is_fitted",
      "docstring": {
        "description": "Check if the transformer is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the transformer is fitted.",
        "full_docstring": "Check if the transformer is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the transformer is fitted."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/is_fitted/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/is_fitted/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/transform",
      "name": "transform",
      "docstring": {
        "description": "Apply the learned transformation to a table.\n\nThe table is not modified.\n\nParameters\n----------\ntable : Table\n    The table to which the learned transformation is applied.\n\nReturns\n-------\ntransformed_table : Table\n    The transformed table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.\nUnknownColumnNameError\n    If the input table does not contain all columns used to fit the transformer.\nValueError\n    If the table contains 0 rows.",
        "full_docstring": "Apply the learned transformation to a table.\n\nThe table is not modified.\n\nParameters\n----------\ntable : Table\n    The table to which the learned transformation is applied.\n\nReturns\n-------\ntransformed_table : Table\n    The transformed table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.\nUnknownColumnNameError\n    If the input table does not contain all columns used to fit the transformer.\nValueError\n    If the table contains 0 rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/transform/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/transform/self",
        "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/transform/table"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/__init__/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/fit",
      "name": "fit",
      "docstring": {
        "description": "Learn a transformation for a set of columns in a table.\n\nThis transformer is not modified.\n\nParameters\n----------\ntable : Table\n    The table used to fit the transformer.\ncolumn_names : list[str] | None\n    The list of columns from the table used to fit the transformer. If `None`, all columns are used.\n\nReturns\n-------\nfitted_transformer : TableTransformer\n    The fitted transformer.\n\nRaises\n------\nUnknownColumnNameError\n    If column_names contain a column name that is missing in the table.\nValueError\n    If the table contains 0 rows.",
        "full_docstring": "Learn a transformation for a set of columns in a table.\n\nThis transformer is not modified.\n\nParameters\n----------\ntable : Table\n    The table used to fit the transformer.\ncolumn_names : list[str] | None\n    The list of columns from the table used to fit the transformer. If `None`, all columns are used.\n\nReturns\n-------\nfitted_transformer : TableTransformer\n    The fitted transformer.\n\nRaises\n------\nUnknownColumnNameError\n    If column_names contain a column name that is missing in the table.\nValueError\n    If the table contains 0 rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/fit/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/fit/self",
        "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/fit/table",
        "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/fit/column_names"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/get_names_of_added_columns",
      "name": "get_names_of_added_columns",
      "docstring": {
        "description": "Get the names of all new columns that have been added by the OneHotEncoder.\n\nReturns\n-------\nadded_columns : list[str]\n    A list of names of the added columns, ordered as they will appear in the table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.",
        "full_docstring": "Get the names of all new columns that have been added by the OneHotEncoder.\n\nReturns\n-------\nadded_columns : list[str]\n    A list of names of the added columns, ordered as they will appear in the table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/get_names_of_added_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/get_names_of_added_columns/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/get_names_of_changed_columns",
      "name": "get_names_of_changed_columns",
      "docstring": {
        "description": " Get the names of all columns that have been changed by the OneHotEncoder (none).\n\nReturns\n-------\nchanged_columns : list[str]\n     The empty list.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.",
        "full_docstring": " Get the names of all columns that have been changed by the OneHotEncoder (none).\n\nReturns\n-------\nchanged_columns : list[str]\n     The empty list.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/get_names_of_changed_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/get_names_of_changed_columns/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/get_names_of_removed_columns",
      "name": "get_names_of_removed_columns",
      "docstring": {
        "description": "Get the names of all columns that have been removed by the OneHotEncoder.\n\nReturns\n-------\nremoved_columns : list[str]\n    A list of names of the removed columns, ordered as they appear in the table the OneHotEncoder was fitted on.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.",
        "full_docstring": "Get the names of all columns that have been removed by the OneHotEncoder.\n\nReturns\n-------\nremoved_columns : list[str]\n    A list of names of the removed columns, ordered as they appear in the table the OneHotEncoder was fitted on.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/get_names_of_removed_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/get_names_of_removed_columns/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/inverse_transform",
      "name": "inverse_transform",
      "docstring": {
        "description": "Undo the learned transformation.\n\nThe table is not modified.\n\nParameters\n----------\ntransformed_table : Table\n    The table to be transformed back to the original version.\n\nReturns\n-------\ntable : Table\n    The original table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.\nUnknownColumnNameError\n    If the input table does not contain all columns used to fit the transformer.\nNonNumericColumnError\n    If the transformed columns of the input table contain non-numerical data.\nValueError\n    If the table contains 0 rows.",
        "full_docstring": "Undo the learned transformation.\n\nThe table is not modified.\n\nParameters\n----------\ntransformed_table : Table\n    The table to be transformed back to the original version.\n\nReturns\n-------\ntable : Table\n    The original table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.\nUnknownColumnNameError\n    If the input table does not contain all columns used to fit the transformer.\nNonNumericColumnError\n    If the transformed columns of the input table contain non-numerical data.\nValueError\n    If the table contains 0 rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/inverse_transform/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/inverse_transform/self",
        "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/inverse_transform/transformed_table"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/is_fitted",
      "name": "is_fitted",
      "docstring": {
        "description": "Check if the transformer is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the transformer is fitted.",
        "full_docstring": "Check if the transformer is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the transformer is fitted."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/is_fitted/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/is_fitted/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/transform",
      "name": "transform",
      "docstring": {
        "description": "Apply the learned transformation to a table.\n\nThe table is not modified.\n\nParameters\n----------\ntable : Table\n    The table to which the learned transformation is applied.\n\nReturns\n-------\ntransformed_table : Table\n    The transformed table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.\nUnknownColumnNameError\n    If the input table does not contain all columns used to fit the transformer.\nValueError\n    If the table contains 0 rows.\nValueNotPresentWhenFittedError\n    If a column in the to-be-transformed table contains a new value that was not already present in the table the OneHotEncoder was fitted on.",
        "full_docstring": "Apply the learned transformation to a table.\n\nThe table is not modified.\n\nParameters\n----------\ntable : Table\n    The table to which the learned transformation is applied.\n\nReturns\n-------\ntransformed_table : Table\n    The transformed table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.\nUnknownColumnNameError\n    If the input table does not contain all columns used to fit the transformer.\nValueError\n    If the table contains 0 rows.\nValueNotPresentWhenFittedError\n    If a column in the to-be-transformed table contains a new value that was not already present in the table the OneHotEncoder was fitted on."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/transform/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/transform/self",
        "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/transform/table"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_range_scaler/RangeScaler/__init__/self",
        "safeds/data/tabular/transformation/_range_scaler/RangeScaler/__init__/minimum",
        "safeds/data/tabular/transformation/_range_scaler/RangeScaler/__init__/maximum"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler/fit",
      "name": "fit",
      "docstring": {
        "description": "Learn a transformation for a set of columns in a table.\n\nThis transformer is not modified.\n\nParameters\n----------\ntable : Table\n    The table used to fit the transformer.\ncolumn_names : list[str] | None\n    The list of columns from the table used to fit the transformer. If `None`, all columns are used.\n\nReturns\n-------\nfitted_transformer : TableTransformer\n    The fitted transformer.\n\nRaises\n------\nUnknownColumnNameError\n    If column_names contain a column name that is missing in the table.\nNonNumericColumnError\n    If at least one of the specified columns in the table contains non-numerical data.\nValueError\n    If the table contains 0 rows.",
        "full_docstring": "Learn a transformation for a set of columns in a table.\n\nThis transformer is not modified.\n\nParameters\n----------\ntable : Table\n    The table used to fit the transformer.\ncolumn_names : list[str] | None\n    The list of columns from the table used to fit the transformer. If `None`, all columns are used.\n\nReturns\n-------\nfitted_transformer : TableTransformer\n    The fitted transformer.\n\nRaises\n------\nUnknownColumnNameError\n    If column_names contain a column name that is missing in the table.\nNonNumericColumnError\n    If at least one of the specified columns in the table contains non-numerical data.\nValueError\n    If the table contains 0 rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_range_scaler/RangeScaler/fit/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_range_scaler/RangeScaler/fit/self",
        "safeds/data/tabular/transformation/_range_scaler/RangeScaler/fit/table",
        "safeds/data/tabular/transformation/_range_scaler/RangeScaler/fit/column_names"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler/get_names_of_added_columns",
      "name": "get_names_of_added_columns",
      "docstring": {
        "description": "Get the names of all new columns that have been added by the RangeScaler.\n\nReturns\n-------\nadded_columns : list[str]\n    A list of names of the added columns, ordered as they will appear in the table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.",
        "full_docstring": "Get the names of all new columns that have been added by the RangeScaler.\n\nReturns\n-------\nadded_columns : list[str]\n    A list of names of the added columns, ordered as they will appear in the table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_range_scaler/RangeScaler/get_names_of_added_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_range_scaler/RangeScaler/get_names_of_added_columns/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler/get_names_of_changed_columns",
      "name": "get_names_of_changed_columns",
      "docstring": {
        "description": " Get the names of all columns that may have been changed by the RangeScaler.\n\nReturns\n-------\nchanged_columns : list[str]\n     The list of (potentially) changed column names, as passed to fit.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.",
        "full_docstring": " Get the names of all columns that may have been changed by the RangeScaler.\n\nReturns\n-------\nchanged_columns : list[str]\n     The list of (potentially) changed column names, as passed to fit.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_range_scaler/RangeScaler/get_names_of_changed_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_range_scaler/RangeScaler/get_names_of_changed_columns/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler/get_names_of_removed_columns",
      "name": "get_names_of_removed_columns",
      "docstring": {
        "description": "Get the names of all columns that have been removed by the RangeScaler.\n\nReturns\n-------\nremoved_columns : list[str]\n    A list of names of the removed columns, ordered as they appear in the table the RangeScaler was fitted on.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.",
        "full_docstring": "Get the names of all columns that have been removed by the RangeScaler.\n\nReturns\n-------\nremoved_columns : list[str]\n    A list of names of the removed columns, ordered as they appear in the table the RangeScaler was fitted on.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_range_scaler/RangeScaler/get_names_of_removed_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_range_scaler/RangeScaler/get_names_of_removed_columns/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler/inverse_transform",
      "name": "inverse_transform",
      "docstring": {
        "description": "Undo the learned transformation.\n\nThe table is not modified.\n\nParameters\n----------\ntransformed_table : Table\n    The table to be transformed back to the original version.\n\nReturns\n-------\ntable : Table\n    The original table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.\nUnknownColumnNameError\n    If the input table does not contain all columns used to fit the transformer.\nNonNumericColumnError\n    If the transformed columns of the input table contain non-numerical data.\nValueError\n    If the table contains 0 rows.",
        "full_docstring": "Undo the learned transformation.\n\nThe table is not modified.\n\nParameters\n----------\ntransformed_table : Table\n    The table to be transformed back to the original version.\n\nReturns\n-------\ntable : Table\n    The original table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.\nUnknownColumnNameError\n    If the input table does not contain all columns used to fit the transformer.\nNonNumericColumnError\n    If the transformed columns of the input table contain non-numerical data.\nValueError\n    If the table contains 0 rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_range_scaler/RangeScaler/inverse_transform/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_range_scaler/RangeScaler/inverse_transform/self",
        "safeds/data/tabular/transformation/_range_scaler/RangeScaler/inverse_transform/transformed_table"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler/is_fitted",
      "name": "is_fitted",
      "docstring": {
        "description": "Check if the transformer is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the transformer is fitted.",
        "full_docstring": "Check if the transformer is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the transformer is fitted."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_range_scaler/RangeScaler/is_fitted/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_range_scaler/RangeScaler/is_fitted/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler/transform",
      "name": "transform",
      "docstring": {
        "description": "Apply the learned transformation to a table.\n\nThe table is not modified.\n\nParameters\n----------\ntable : Table\n    The table to which the learned transformation is applied.\n\nReturns\n-------\ntransformed_table : Table\n    The transformed table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.\nUnknownColumnNameError\n    If the input table does not contain all columns used to fit the transformer.\nNonNumericColumnError\n    If at least one of the columns in the input table that is used to fit contains non-numerical data.\nValueError\n    If the table contains 0 rows.",
        "full_docstring": "Apply the learned transformation to a table.\n\nThe table is not modified.\n\nParameters\n----------\ntable : Table\n    The table to which the learned transformation is applied.\n\nReturns\n-------\ntransformed_table : Table\n    The transformed table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.\nUnknownColumnNameError\n    If the input table does not contain all columns used to fit the transformer.\nNonNumericColumnError\n    If at least one of the columns in the input table that is used to fit contains non-numerical data.\nValueError\n    If the table contains 0 rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_range_scaler/RangeScaler/transform/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_range_scaler/RangeScaler/transform/self",
        "safeds/data/tabular/transformation/_range_scaler/RangeScaler/transform/table"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/__init__/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/fit",
      "name": "fit",
      "docstring": {
        "description": "Learn a transformation for a set of columns in a table.\n\nThis transformer is not modified.\n\nParameters\n----------\ntable : Table\n    The table used to fit the transformer.\ncolumn_names : list[str] | None\n    The list of columns from the table used to fit the transformer. If `None`, all columns are used.\n\nReturns\n-------\nfitted_transformer : TableTransformer\n    The fitted transformer.\n\nRaises\n------\nUnknownColumnNameError\n    If column_names contain a column name that is missing in the table.\nNonNumericColumnError\n    If at least one of the specified columns in the table contains non-numerical data.\nValueError\n    If the table contains 0 rows.",
        "full_docstring": "Learn a transformation for a set of columns in a table.\n\nThis transformer is not modified.\n\nParameters\n----------\ntable : Table\n    The table used to fit the transformer.\ncolumn_names : list[str] | None\n    The list of columns from the table used to fit the transformer. If `None`, all columns are used.\n\nReturns\n-------\nfitted_transformer : TableTransformer\n    The fitted transformer.\n\nRaises\n------\nUnknownColumnNameError\n    If column_names contain a column name that is missing in the table.\nNonNumericColumnError\n    If at least one of the specified columns in the table contains non-numerical data.\nValueError\n    If the table contains 0 rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/fit/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/fit/self",
        "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/fit/table",
        "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/fit/column_names"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/get_names_of_added_columns",
      "name": "get_names_of_added_columns",
      "docstring": {
        "description": "Get the names of all new columns that have been added by the StandardScaler.\n\nReturns\n-------\nadded_columns : list[str]\n    A list of names of the added columns, ordered as they will appear in the table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.",
        "full_docstring": "Get the names of all new columns that have been added by the StandardScaler.\n\nReturns\n-------\nadded_columns : list[str]\n    A list of names of the added columns, ordered as they will appear in the table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/get_names_of_added_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/get_names_of_added_columns/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/get_names_of_changed_columns",
      "name": "get_names_of_changed_columns",
      "docstring": {
        "description": " Get the names of all columns that may have been changed by the StandardScaler.\n\nReturns\n-------\nchanged_columns : list[str]\n     The list of (potentially) changed column names, as passed to fit.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.",
        "full_docstring": " Get the names of all columns that may have been changed by the StandardScaler.\n\nReturns\n-------\nchanged_columns : list[str]\n     The list of (potentially) changed column names, as passed to fit.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/get_names_of_changed_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/get_names_of_changed_columns/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/get_names_of_removed_columns",
      "name": "get_names_of_removed_columns",
      "docstring": {
        "description": "Get the names of all columns that have been removed by the StandardScaler.\n\nReturns\n-------\nremoved_columns : list[str]\n    A list of names of the removed columns, ordered as they appear in the table the StandardScaler was fitted on.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.",
        "full_docstring": "Get the names of all columns that have been removed by the StandardScaler.\n\nReturns\n-------\nremoved_columns : list[str]\n    A list of names of the removed columns, ordered as they appear in the table the StandardScaler was fitted on.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/get_names_of_removed_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/get_names_of_removed_columns/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/inverse_transform",
      "name": "inverse_transform",
      "docstring": {
        "description": "Undo the learned transformation.\n\nThe table is not modified.\n\nParameters\n----------\ntransformed_table : Table\n    The table to be transformed back to the original version.\n\nReturns\n-------\ntable : Table\n    The original table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.\nUnknownColumnNameError\n    If the input table does not contain all columns used to fit the transformer.\nNonNumericColumnError\n    If the transformed columns of the input table contain non-numerical data.\nValueError\n    If the table contains 0 rows.",
        "full_docstring": "Undo the learned transformation.\n\nThe table is not modified.\n\nParameters\n----------\ntransformed_table : Table\n    The table to be transformed back to the original version.\n\nReturns\n-------\ntable : Table\n    The original table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.\nUnknownColumnNameError\n    If the input table does not contain all columns used to fit the transformer.\nNonNumericColumnError\n    If the transformed columns of the input table contain non-numerical data.\nValueError\n    If the table contains 0 rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/inverse_transform/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/inverse_transform/self",
        "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/inverse_transform/transformed_table"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/is_fitted",
      "name": "is_fitted",
      "docstring": {
        "description": "Check if the transformer is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the transformer is fitted.",
        "full_docstring": "Check if the transformer is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the transformer is fitted."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/is_fitted/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/is_fitted/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/transform",
      "name": "transform",
      "docstring": {
        "description": "Apply the learned transformation to a table.\n\nThe table is not modified.\n\nParameters\n----------\ntable : Table\n    The table to which the learned transformation is applied.\n\nReturns\n-------\ntransformed_table : Table\n    The transformed table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.\nUnknownColumnNameError\n    If the input table does not contain all columns used to fit the transformer.\nNonNumericColumnError\n    If at least one of the columns in the input table that is used to fit contains non-numerical data.\nValueError\n    If the table contains 0 rows.",
        "full_docstring": "Apply the learned transformation to a table.\n\nThe table is not modified.\n\nParameters\n----------\ntable : Table\n    The table to which the learned transformation is applied.\n\nReturns\n-------\ntransformed_table : Table\n    The transformed table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.\nUnknownColumnNameError\n    If the input table does not contain all columns used to fit the transformer.\nNonNumericColumnError\n    If at least one of the columns in the input table that is used to fit contains non-numerical data.\nValueError\n    If the table contains 0 rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/transform/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/transform/self",
        "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/transform/table"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/InvertibleTableTransformer/fit",
      "name": "fit",
      "docstring": {
        "description": "Learn a transformation for a set of columns in a table.\n\nParameters\n----------\ntable : Table\n    The table used to fit the transformer.\ncolumn_names : list[str] | None\n    The list of columns from the table used to fit the transformer. If `None`, all columns are used.\n\nReturns\n-------\nfitted_transformer : InvertibleTableTransformer\n    The fitted transformer.",
        "full_docstring": "Learn a transformation for a set of columns in a table.\n\nParameters\n----------\ntable : Table\n    The table used to fit the transformer.\ncolumn_names : list[str] | None\n    The list of columns from the table used to fit the transformer. If `None`, all columns are used.\n\nReturns\n-------\nfitted_transformer : InvertibleTableTransformer\n    The fitted transformer."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_table_transformer/InvertibleTableTransformer/fit/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_table_transformer/InvertibleTableTransformer/fit/self",
        "safeds/data/tabular/transformation/_table_transformer/InvertibleTableTransformer/fit/table",
        "safeds/data/tabular/transformation/_table_transformer/InvertibleTableTransformer/fit/column_names"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/InvertibleTableTransformer/inverse_transform",
      "name": "inverse_transform",
      "docstring": {
        "description": "Undo the learned transformation.\n\nThe table is not modified.\n\nParameters\n----------\ntransformed_table : Table\n    The table to be transformed back to the original version.\n\nReturns\n-------\ntable : Table\n    The original table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.",
        "full_docstring": "Undo the learned transformation.\n\nThe table is not modified.\n\nParameters\n----------\ntransformed_table : Table\n    The table to be transformed back to the original version.\n\nReturns\n-------\ntable : Table\n    The original table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_table_transformer/InvertibleTableTransformer/inverse_transform/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_table_transformer/InvertibleTableTransformer/inverse_transform/self",
        "safeds/data/tabular/transformation/_table_transformer/InvertibleTableTransformer/inverse_transform/transformed_table"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/TableTransformer/fit",
      "name": "fit",
      "docstring": {
        "description": "Learn a transformation for a set of columns in a table.\n\nThis transformer is not modified.\n\nParameters\n----------\ntable : Table\n    The table used to fit the transformer.\ncolumn_names : list[str] | None\n    The list of columns from the table used to fit the transformer. If `None`, all columns are used.\n\nReturns\n-------\nfitted_transformer : TableTransformer\n    The fitted transformer.",
        "full_docstring": "Learn a transformation for a set of columns in a table.\n\nThis transformer is not modified.\n\nParameters\n----------\ntable : Table\n    The table used to fit the transformer.\ncolumn_names : list[str] | None\n    The list of columns from the table used to fit the transformer. If `None`, all columns are used.\n\nReturns\n-------\nfitted_transformer : TableTransformer\n    The fitted transformer."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_table_transformer/TableTransformer/fit/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_table_transformer/TableTransformer/fit/self",
        "safeds/data/tabular/transformation/_table_transformer/TableTransformer/fit/table",
        "safeds/data/tabular/transformation/_table_transformer/TableTransformer/fit/column_names"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/TableTransformer/fit_and_transform",
      "name": "fit_and_transform",
      "docstring": {
        "description": "Learn a transformation for a set of columns in a table and apply the learned transformation to the same table.\n\nThe table is not modified. If you also need the fitted transformer, use `fit` and `transform` separately.\n\nParameters\n----------\ntable : Table\n    The table used to fit the transformer. The transformer is then applied to this table.\ncolumn_names : list[str] | None\n    The list of columns from the table used to fit the transformer. If `None`, all columns are used.\n\nReturns\n-------\ntransformed_table : Table\n    The transformed table.",
        "full_docstring": "Learn a transformation for a set of columns in a table and apply the learned transformation to the same table.\n\nThe table is not modified. If you also need the fitted transformer, use `fit` and `transform` separately.\n\nParameters\n----------\ntable : Table\n    The table used to fit the transformer. The transformer is then applied to this table.\ncolumn_names : list[str] | None\n    The list of columns from the table used to fit the transformer. If `None`, all columns are used.\n\nReturns\n-------\ntransformed_table : Table\n    The transformed table."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_table_transformer/TableTransformer/fit_and_transform/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_table_transformer/TableTransformer/fit_and_transform/self",
        "safeds/data/tabular/transformation/_table_transformer/TableTransformer/fit_and_transform/table",
        "safeds/data/tabular/transformation/_table_transformer/TableTransformer/fit_and_transform/column_names"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/TableTransformer/get_names_of_added_columns",
      "name": "get_names_of_added_columns",
      "docstring": {
        "description": "Get the names of all new columns that have been added by the transformer.\n\nReturns\n-------\nadded_columns : list[str]\n    A list of names of the added columns, ordered as they will appear in the table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.",
        "full_docstring": "Get the names of all new columns that have been added by the transformer.\n\nReturns\n-------\nadded_columns : list[str]\n    A list of names of the added columns, ordered as they will appear in the table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_table_transformer/TableTransformer/get_names_of_added_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_table_transformer/TableTransformer/get_names_of_added_columns/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/TableTransformer/get_names_of_changed_columns",
      "name": "get_names_of_changed_columns",
      "docstring": {
        "description": " Get the names of all columns that have been changed by the transformer.\n\nReturns\n-------\nchanged_columns : list[str]\n     A list of names of changed columns, ordered as they appear in the table.\n\nRaises\n------\n TransformerNotFittedError\n     If the transformer has not been fitted yet.",
        "full_docstring": " Get the names of all columns that have been changed by the transformer.\n\nReturns\n-------\nchanged_columns : list[str]\n     A list of names of changed columns, ordered as they appear in the table.\n\nRaises\n------\n TransformerNotFittedError\n     If the transformer has not been fitted yet."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_table_transformer/TableTransformer/get_names_of_changed_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_table_transformer/TableTransformer/get_names_of_changed_columns/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/TableTransformer/get_names_of_removed_columns",
      "name": "get_names_of_removed_columns",
      "docstring": {
        "description": "Get the names of all columns that have been removed by the transformer.\n\nReturns\n-------\nremoved_columns : list[str]\n    A list of names of the removed columns, ordered as they appear in the table the transformer was fitted on.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.",
        "full_docstring": "Get the names of all columns that have been removed by the transformer.\n\nReturns\n-------\nremoved_columns : list[str]\n    A list of names of the removed columns, ordered as they appear in the table the transformer was fitted on.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_table_transformer/TableTransformer/get_names_of_removed_columns/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_table_transformer/TableTransformer/get_names_of_removed_columns/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/TableTransformer/is_fitted",
      "name": "is_fitted",
      "docstring": {
        "description": "Check if the transformer is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the transformer is fitted.",
        "full_docstring": "Check if the transformer is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the transformer is fitted."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_table_transformer/TableTransformer/is_fitted/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_table_transformer/TableTransformer/is_fitted/self"
      ]
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/TableTransformer/transform",
      "name": "transform",
      "docstring": {
        "description": "Apply the learned transformation to a table.\n\nThe table is not modified.\n\nParameters\n----------\ntable : Table\n    The table to which the learned transformation is applied.\n\nReturns\n-------\ntransformed_table : Table\n    The transformed table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet.",
        "full_docstring": "Apply the learned transformation to a table.\n\nThe table is not modified.\n\nParameters\n----------\ntable : Table\n    The table to which the learned transformation is applied.\n\nReturns\n-------\ntransformed_table : Table\n    The transformed table.\n\nRaises\n------\nTransformerNotFittedError\n    If the transformer has not been fitted yet."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/transformation/_table_transformer/TableTransformer/transform/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/transformation"
      ],
      "parameters": [
        "safeds/data/tabular/transformation/_table_transformer/TableTransformer/transform/self",
        "safeds/data/tabular/transformation/_table_transformer/TableTransformer/transform/table"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Anything/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/Anything/__init__/self",
        "safeds/data/tabular/typing/_column_type/Anything/__init__/is_nullable"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Anything/__mypy-replace",
      "name": "__mypy-replace",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": false,
      "is_static": true,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/Anything/__mypy-replace/_is_nullable"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Anything/__repr__",
      "name": "__repr__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/typing/_column_type/Anything/__repr__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/Anything/__repr__/self"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Anything/is_nullable",
      "name": "is_nullable",
      "docstring": {
        "description": "Return whether the given column type is nullable.\n\nReturns\n-------\nis_nullable : bool\n    True if the column is nullable.",
        "full_docstring": "Return whether the given column type is nullable.\n\nReturns\n-------\nis_nullable : bool\n    True if the column is nullable."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/typing/_column_type/Anything/is_nullable/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/Anything/is_nullable/self"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Anything/is_numeric",
      "name": "is_numeric",
      "docstring": {
        "description": "Return whether the given column type is numeric.\n\nReturns\n-------\nis_numeric : bool\n    True if the column is numeric.",
        "full_docstring": "Return whether the given column type is numeric.\n\nReturns\n-------\nis_numeric : bool\n    True if the column is numeric."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/typing/_column_type/Anything/is_numeric/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/Anything/is_numeric/self"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Boolean/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/Boolean/__init__/self",
        "safeds/data/tabular/typing/_column_type/Boolean/__init__/is_nullable"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Boolean/__mypy-replace",
      "name": "__mypy-replace",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": false,
      "is_static": true,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/Boolean/__mypy-replace/_is_nullable"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Boolean/__repr__",
      "name": "__repr__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/typing/_column_type/Boolean/__repr__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/Boolean/__repr__/self"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Boolean/is_nullable",
      "name": "is_nullable",
      "docstring": {
        "description": "Return whether the given column type is nullable.\n\nReturns\n-------\nis_nullable : bool\n    True if the column is nullable.",
        "full_docstring": "Return whether the given column type is nullable.\n\nReturns\n-------\nis_nullable : bool\n    True if the column is nullable."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/typing/_column_type/Boolean/is_nullable/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/Boolean/is_nullable/self"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Boolean/is_numeric",
      "name": "is_numeric",
      "docstring": {
        "description": "Return whether the given column type is numeric.\n\nReturns\n-------\nis_numeric : bool\n    True if the column is numeric.",
        "full_docstring": "Return whether the given column type is numeric.\n\nReturns\n-------\nis_numeric : bool\n    True if the column is numeric."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/typing/_column_type/Boolean/is_numeric/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/Boolean/is_numeric/self"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/ColumnType/__init__",
      "name": "__init__",
      "docstring": {
        "description": "Abstract initializer for ColumnType.\n\nParameters\n----------\nis_nullable\n    Whether the columntype is nullable.",
        "full_docstring": "Abstract initializer for ColumnType.\n\nParameters\n----------\nis_nullable\n    Whether the columntype is nullable."
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/ColumnType/__init__/self",
        "safeds/data/tabular/typing/_column_type/ColumnType/__init__/is_nullable"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/ColumnType/_data_type",
      "name": "_data_type",
      "docstring": {
        "description": "Return the column type for a given `Series` from `pandas`.\n\nParameters\n----------\ndata : pd.Series\n    The data to be checked.\n\nReturns\n-------\ncolumn_type : ColumnType\n    The ColumnType.\n\nRaises\n------\nNotImplementedError\n    If the given data type is not supported.",
        "full_docstring": "Return the column type for a given `Series` from `pandas`.\n\nParameters\n----------\ndata : pd.Series\n    The data to be checked.\n\nReturns\n-------\ncolumn_type : ColumnType\n    The ColumnType.\n\nRaises\n------\nNotImplementedError\n    If the given data type is not supported."
      },
      "is_public": false,
      "is_static": true,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/typing/_column_type/ColumnType/_data_type/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/ColumnType/_data_type/data"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/ColumnType/_data_type/column_type_of_type",
      "name": "column_type_of_type",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/typing/_column_type/ColumnType/_data_type/column_type_of_type/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/ColumnType/_data_type/column_type_of_type/cell_type"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/ColumnType/is_nullable",
      "name": "is_nullable",
      "docstring": {
        "description": "Return whether the given column type is nullable.\n\nReturns\n-------\nis_nullable : bool\n    True if the column is nullable.",
        "full_docstring": "Return whether the given column type is nullable.\n\nReturns\n-------\nis_nullable : bool\n    True if the column is nullable."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/typing/_column_type/ColumnType/is_nullable/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/ColumnType/is_nullable/self"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/ColumnType/is_numeric",
      "name": "is_numeric",
      "docstring": {
        "description": "Return whether the given column type is numeric.\n\nReturns\n-------\nis_numeric : bool\n    True if the column is numeric.",
        "full_docstring": "Return whether the given column type is numeric.\n\nReturns\n-------\nis_numeric : bool\n    True if the column is numeric."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/typing/_column_type/ColumnType/is_numeric/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/ColumnType/is_numeric/self"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Integer/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/Integer/__init__/self",
        "safeds/data/tabular/typing/_column_type/Integer/__init__/is_nullable"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Integer/__mypy-replace",
      "name": "__mypy-replace",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": false,
      "is_static": true,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/Integer/__mypy-replace/_is_nullable"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Integer/__repr__",
      "name": "__repr__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/typing/_column_type/Integer/__repr__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/Integer/__repr__/self"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Integer/is_nullable",
      "name": "is_nullable",
      "docstring": {
        "description": "Return whether the given column type is nullable.\n\nReturns\n-------\nis_nullable : bool\n    True if the column is nullable.",
        "full_docstring": "Return whether the given column type is nullable.\n\nReturns\n-------\nis_nullable : bool\n    True if the column is nullable."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/typing/_column_type/Integer/is_nullable/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/Integer/is_nullable/self"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Integer/is_numeric",
      "name": "is_numeric",
      "docstring": {
        "description": "Return whether the given column type is numeric.\n\nReturns\n-------\nis_numeric : bool\n    True if the column is numeric.",
        "full_docstring": "Return whether the given column type is numeric.\n\nReturns\n-------\nis_numeric : bool\n    True if the column is numeric."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/typing/_column_type/Integer/is_numeric/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/Integer/is_numeric/self"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Nothing/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/Nothing/__init__/self"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Nothing/__mypy-replace",
      "name": "__mypy-replace",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": false,
      "is_static": true,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/Nothing/__mypy-replace/_is_nullable"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Nothing/__repr__",
      "name": "__repr__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/typing/_column_type/Nothing/__repr__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/Nothing/__repr__/self"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Nothing/is_nullable",
      "name": "is_nullable",
      "docstring": {
        "description": "Return whether the given column type is nullable.\n\nReturns\n-------\nis_nullable : bool\n    True if the column is nullable.",
        "full_docstring": "Return whether the given column type is nullable.\n\nReturns\n-------\nis_nullable : bool\n    True if the column is nullable."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/typing/_column_type/Nothing/is_nullable/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/Nothing/is_nullable/self"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Nothing/is_numeric",
      "name": "is_numeric",
      "docstring": {
        "description": "Return whether the given column type is numeric.\n\nReturns\n-------\nis_numeric : bool\n    True if the column is numeric.",
        "full_docstring": "Return whether the given column type is numeric.\n\nReturns\n-------\nis_numeric : bool\n    True if the column is numeric."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/typing/_column_type/Nothing/is_numeric/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/Nothing/is_numeric/self"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/RealNumber/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/RealNumber/__init__/self",
        "safeds/data/tabular/typing/_column_type/RealNumber/__init__/is_nullable"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/RealNumber/__mypy-replace",
      "name": "__mypy-replace",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": false,
      "is_static": true,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/RealNumber/__mypy-replace/_is_nullable"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/RealNumber/__repr__",
      "name": "__repr__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/typing/_column_type/RealNumber/__repr__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/RealNumber/__repr__/self"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/RealNumber/is_nullable",
      "name": "is_nullable",
      "docstring": {
        "description": "Return whether the given column type is nullable.\n\nReturns\n-------\nis_nullable : bool\n    True if the column is nullable.",
        "full_docstring": "Return whether the given column type is nullable.\n\nReturns\n-------\nis_nullable : bool\n    True if the column is nullable."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/typing/_column_type/RealNumber/is_nullable/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/RealNumber/is_nullable/self"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/RealNumber/is_numeric",
      "name": "is_numeric",
      "docstring": {
        "description": "Return whether the given column type is numeric.\n\nReturns\n-------\nis_numeric : bool\n    True if the column is numeric.",
        "full_docstring": "Return whether the given column type is numeric.\n\nReturns\n-------\nis_numeric : bool\n    True if the column is numeric."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/typing/_column_type/RealNumber/is_numeric/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/RealNumber/is_numeric/self"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/String/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/String/__init__/self",
        "safeds/data/tabular/typing/_column_type/String/__init__/is_nullable"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/String/__mypy-replace",
      "name": "__mypy-replace",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": false,
      "is_static": true,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/String/__mypy-replace/_is_nullable"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/String/__repr__",
      "name": "__repr__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/typing/_column_type/String/__repr__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/String/__repr__/self"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/String/is_nullable",
      "name": "is_nullable",
      "docstring": {
        "description": "Return whether the given column type is nullable.\n\nReturns\n-------\nis_nullable : bool\n    True if the column is nullable.",
        "full_docstring": "Return whether the given column type is nullable.\n\nReturns\n-------\nis_nullable : bool\n    True if the column is nullable."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/typing/_column_type/String/is_nullable/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/String/is_nullable/self"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/String/is_numeric",
      "name": "is_numeric",
      "docstring": {
        "description": "Return whether the given column type is numeric.\n\nReturns\n-------\nis_numeric : bool\n    True if the column is numeric.",
        "full_docstring": "Return whether the given column type is numeric.\n\nReturns\n-------\nis_numeric : bool\n    True if the column is numeric."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/typing/_column_type/String/is_numeric/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_column_type/String/is_numeric/self"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_imputer_strategy/ImputerStrategy/_augment_imputer",
      "name": "_augment_imputer",
      "docstring": {
        "description": "Set the imputer strategy of the given imputer.\n\nParameters\n----------\nimputer: SimpleImputer\n    The imputer to augment.",
        "full_docstring": "Set the imputer strategy of the given imputer.\n\nParameters\n----------\nimputer: SimpleImputer\n    The imputer to augment."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_imputer_strategy/ImputerStrategy/_augment_imputer/self",
        "safeds/data/tabular/typing/_imputer_strategy/ImputerStrategy/_augment_imputer/imputer"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/__hash__",
      "name": "__hash__",
      "docstring": {
        "description": "Return a hash value for the schema.\n\nReturns\n-------\nhash : int\n    The hash value.\n\nExamples\n--------\n>>> from safeds.data.tabular.typing import Integer, Schema, String\n>>> schema = Schema({\"A\": Integer(), \"B\": String()})\n>>> hash_value = hash(schema)",
        "full_docstring": "Return a hash value for the schema.\n\nReturns\n-------\nhash : int\n    The hash value.\n\nExamples\n--------\n>>> from safeds.data.tabular.typing import Integer, Schema, String\n>>> schema = Schema({\"A\": Integer(), \"B\": String()})\n>>> hash_value = hash(schema)"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/typing/_schema/Schema/__hash__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_schema/Schema/__hash__/self"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_schema/Schema/__init__/self",
        "safeds/data/tabular/typing/_schema/Schema/__init__/schema"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/__mypy-replace",
      "name": "__mypy-replace",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": false,
      "is_static": true,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_schema/Schema/__mypy-replace/_schema"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/__repr__",
      "name": "__repr__",
      "docstring": {
        "description": "Return an unambiguous string representation of this row.\n\nReturns\n-------\nrepresentation : str\n    The string representation.\n\nExamples\n--------\n>>> from safeds.data.tabular.typing import Integer, Schema, String\n>>> schema = Schema({\"A\": Integer()})\n>>> repr(schema)\n\"Schema({'A': Integer})\"",
        "full_docstring": "Return an unambiguous string representation of this row.\n\nReturns\n-------\nrepresentation : str\n    The string representation.\n\nExamples\n--------\n>>> from safeds.data.tabular.typing import Integer, Schema, String\n>>> schema = Schema({\"A\": Integer()})\n>>> repr(schema)\n\"Schema({'A': Integer})\""
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/typing/_schema/Schema/__repr__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_schema/Schema/__repr__/self"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/__sizeof__",
      "name": "__sizeof__",
      "docstring": {
        "description": "Return the complete size of this object.\n\nReturns\n-------\nSize of this object in bytes.",
        "full_docstring": "Return the complete size of this object.\n\nReturns\n-------\nSize of this object in bytes."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/typing/_schema/Schema/__sizeof__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_schema/Schema/__sizeof__/self"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/__str__",
      "name": "__str__",
      "docstring": {
        "description": "Return a user-friendly string representation of the schema.\n\nReturns\n-------\nstring : str\n    The string representation.\n\nExamples\n--------\n>>> from safeds.data.tabular.typing import Integer, Schema, String\n>>> schema = Schema({\"A\": Integer()})\n>>> str(schema)\n\"{'A': Integer}\"",
        "full_docstring": "Return a user-friendly string representation of the schema.\n\nReturns\n-------\nstring : str\n    The string representation.\n\nExamples\n--------\n>>> from safeds.data.tabular.typing import Integer, Schema, String\n>>> schema = Schema({\"A\": Integer()})\n>>> str(schema)\n\"{'A': Integer}\""
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/typing/_schema/Schema/__str__/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_schema/Schema/__str__/self"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/_from_pandas_dataframe",
      "name": "_from_pandas_dataframe",
      "docstring": {
        "description": "Create a schema from a `pandas.DataFrame`.\n\nParameters\n----------\ndataframe : pd.DataFrame\n    The dataframe.\n\nReturns\n-------\nschema : Schema\n    The schema.",
        "full_docstring": "Create a schema from a `pandas.DataFrame`.\n\nParameters\n----------\ndataframe : pd.DataFrame\n    The dataframe.\n\nReturns\n-------\nschema : Schema\n    The schema."
      },
      "is_public": false,
      "is_static": true,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/typing/_schema/Schema/_from_pandas_dataframe/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_schema/Schema/_from_pandas_dataframe/dataframe"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/_repr_markdown_",
      "name": "_repr_markdown_",
      "docstring": {
        "description": "Return a Markdown representation of the schema.\n\nReturns\n-------\nmarkdown : str\n    The Markdown representation.",
        "full_docstring": "Return a Markdown representation of the schema.\n\nReturns\n-------\nmarkdown : str\n    The Markdown representation."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/typing/_schema/Schema/_repr_markdown_/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_schema/Schema/_repr_markdown_/self"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/column_names",
      "name": "column_names",
      "docstring": {
        "description": "Return a list of all column names saved in this schema.\n\nReturns\n-------\ncolumn_names : list[str]\n    The column names.\n\nExamples\n--------\n>>> from safeds.data.tabular.typing import Integer, Schema, String\n>>> schema = Schema({\"A\": Integer(), \"B\": String()})\n>>> schema.column_names\n['A', 'B']",
        "full_docstring": "Return a list of all column names saved in this schema.\n\nReturns\n-------\ncolumn_names : list[str]\n    The column names.\n\nExamples\n--------\n>>> from safeds.data.tabular.typing import Integer, Schema, String\n>>> schema = Schema({\"A\": Integer(), \"B\": String()})\n>>> schema.column_names\n['A', 'B']"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/data/tabular/typing/_schema/Schema/column_names/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_schema/Schema/column_names/self"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/get_column_type",
      "name": "get_column_type",
      "docstring": {
        "description": "Return the type of the given column.\n\nParameters\n----------\ncolumn_name : str\n    The name of the column.\n\nReturns\n-------\ntype : ColumnType\n    The type of the column.\n\nRaises\n------\nUnknownColumnNameError\n    If the specified column name does not exist.\n\nExamples\n--------\n>>> from safeds.data.tabular.typing import Integer, Schema, String\n>>> schema = Schema({\"A\": Integer(), \"B\": String()})\n>>> schema.get_column_type(\"A\")\nInteger",
        "full_docstring": "Return the type of the given column.\n\nParameters\n----------\ncolumn_name : str\n    The name of the column.\n\nReturns\n-------\ntype : ColumnType\n    The type of the column.\n\nRaises\n------\nUnknownColumnNameError\n    If the specified column name does not exist.\n\nExamples\n--------\n>>> from safeds.data.tabular.typing import Integer, Schema, String\n>>> schema = Schema({\"A\": Integer(), \"B\": String()})\n>>> schema.get_column_type(\"A\")\nInteger"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/typing/_schema/Schema/get_column_type/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_schema/Schema/get_column_type/self",
        "safeds/data/tabular/typing/_schema/Schema/get_column_type/column_name"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/has_column",
      "name": "has_column",
      "docstring": {
        "description": "Return whether the schema contains a given column.\n\nParameters\n----------\ncolumn_name : str\n    The name of the column.\n\nReturns\n-------\ncontains : bool\n    True if the schema contains the column.\n\nExamples\n--------\n>>> from safeds.data.tabular.typing import Integer, Schema, String\n>>> schema = Schema({\"A\": Integer(), \"B\": String()})\n>>> schema.has_column(\"A\")\nTrue\n\n>>> schema.has_column(\"C\")\nFalse",
        "full_docstring": "Return whether the schema contains a given column.\n\nParameters\n----------\ncolumn_name : str\n    The name of the column.\n\nReturns\n-------\ncontains : bool\n    True if the schema contains the column.\n\nExamples\n--------\n>>> from safeds.data.tabular.typing import Integer, Schema, String\n>>> schema = Schema({\"A\": Integer(), \"B\": String()})\n>>> schema.has_column(\"A\")\nTrue\n\n>>> schema.has_column(\"C\")\nFalse"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/typing/_schema/Schema/has_column/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_schema/Schema/has_column/self",
        "safeds/data/tabular/typing/_schema/Schema/has_column/column_name"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/merge_multiple_schemas",
      "name": "merge_multiple_schemas",
      "docstring": {
        "description": "Merge multiple schemas into one.\n\nFor each type missmatch the new schema will have the least common supertype.\n\nThe type hierarchy is as follows:\n* Anything\n    * RealNumber\n        * Integer\n    * Boolean\n    * String\n\nParameters\n----------\nschemas : list[Schema]\n    the list of schemas you want to merge\n\nReturns\n-------\nschema : Schema\n    the new merged schema\n\nRaises\n------\nUnknownColumnNameError\n    if not all schemas have the same column names",
        "full_docstring": "Merge multiple schemas into one.\n\nFor each type missmatch the new schema will have the least common supertype.\n\nThe type hierarchy is as follows:\n* Anything\n    * RealNumber\n        * Integer\n    * Boolean\n    * String\n\nParameters\n----------\nschemas : list[Schema]\n    the list of schemas you want to merge\n\nReturns\n-------\nschema : Schema\n    the new merged schema\n\nRaises\n------\nUnknownColumnNameError\n    if not all schemas have the same column names"
      },
      "is_public": false,
      "is_static": true,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/typing/_schema/Schema/merge_multiple_schemas/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_schema/Schema/merge_multiple_schemas/schemas"
      ]
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/to_dict",
      "name": "to_dict",
      "docstring": {
        "description": "Return a dictionary that maps column names to column types.\n\nReturns\n-------\ndata : dict[str, ColumnType]\n    Dictionary representation of the schema.\n\nExamples\n--------\n>>> from safeds.data.tabular.typing import Integer, Schema, String\n>>> schema = Schema({\"A\": Integer(), \"B\": String()})\n>>> schema.to_dict()\n{'A': Integer, 'B': String}",
        "full_docstring": "Return a dictionary that maps column names to column types.\n\nReturns\n-------\ndata : dict[str, ColumnType]\n    Dictionary representation of the schema.\n\nExamples\n--------\n>>> from safeds.data.tabular.typing import Integer, Schema, String\n>>> schema = Schema({\"A\": Integer(), \"B\": String()})\n>>> schema.to_dict()\n{'A': Integer, 'B': String}"
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/data/tabular/typing/_schema/Schema/to_dict/result_1"
      ],
      "reexported_by": [
        "safeds/data/tabular/typing"
      ],
      "parameters": [
        "safeds/data/tabular/typing/_schema/Schema/to_dict/self"
      ]
    },
    {
      "id": "safeds/exceptions/_data/ColumnIsTargetError/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_data/ColumnIsTargetError/__init__/self",
        "safeds/exceptions/_data/ColumnIsTargetError/__init__/column_name"
      ]
    },
    {
      "id": "safeds/exceptions/_data/ColumnIsTimeError/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_data/ColumnIsTimeError/__init__/self",
        "safeds/exceptions/_data/ColumnIsTimeError/__init__/column_name"
      ]
    },
    {
      "id": "safeds/exceptions/_data/ColumnLengthMismatchError/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_data/ColumnLengthMismatchError/__init__/self",
        "safeds/exceptions/_data/ColumnLengthMismatchError/__init__/column_info"
      ]
    },
    {
      "id": "safeds/exceptions/_data/ColumnSizeError/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_data/ColumnSizeError/__init__/self",
        "safeds/exceptions/_data/ColumnSizeError/__init__/expected_size",
        "safeds/exceptions/_data/ColumnSizeError/__init__/actual_size"
      ]
    },
    {
      "id": "safeds/exceptions/_data/DuplicateColumnNameError/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_data/DuplicateColumnNameError/__init__/self",
        "safeds/exceptions/_data/DuplicateColumnNameError/__init__/column_name"
      ]
    },
    {
      "id": "safeds/exceptions/_data/IllegalFormatError/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_data/IllegalFormatError/__init__/self",
        "safeds/exceptions/_data/IllegalFormatError/__init__/formats"
      ]
    },
    {
      "id": "safeds/exceptions/_data/IllegalSchemaModificationError/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_data/IllegalSchemaModificationError/__init__/self",
        "safeds/exceptions/_data/IllegalSchemaModificationError/__init__/msg"
      ]
    },
    {
      "id": "safeds/exceptions/_data/IndexOutOfBoundsError/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_data/IndexOutOfBoundsError/__init__/self",
        "safeds/exceptions/_data/IndexOutOfBoundsError/__init__/index"
      ]
    },
    {
      "id": "safeds/exceptions/_data/MissingValuesColumnError/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_data/MissingValuesColumnError/__init__/self",
        "safeds/exceptions/_data/MissingValuesColumnError/__init__/column_info",
        "safeds/exceptions/_data/MissingValuesColumnError/__init__/help_msg"
      ]
    },
    {
      "id": "safeds/exceptions/_data/NonNumericColumnError/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_data/NonNumericColumnError/__init__/self",
        "safeds/exceptions/_data/NonNumericColumnError/__init__/column_info",
        "safeds/exceptions/_data/NonNumericColumnError/__init__/help_msg"
      ]
    },
    {
      "id": "safeds/exceptions/_data/TransformerNotFittedError/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_data/TransformerNotFittedError/__init__/self"
      ]
    },
    {
      "id": "safeds/exceptions/_data/UnknownColumnNameError/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_data/UnknownColumnNameError/__init__/self",
        "safeds/exceptions/_data/UnknownColumnNameError/__init__/column_names",
        "safeds/exceptions/_data/UnknownColumnNameError/__init__/similar_columns"
      ]
    },
    {
      "id": "safeds/exceptions/_data/UnknownColumnNameError/__init__/_UnknownColumnNameErrorMessage/__repr__",
      "name": "__repr__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/exceptions/_data/UnknownColumnNameError/__init__/_UnknownColumnNameErrorMessage/__repr__/result_1"
      ],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_data/UnknownColumnNameError/__init__/_UnknownColumnNameErrorMessage/__repr__/self"
      ]
    },
    {
      "id": "safeds/exceptions/_data/ValueNotPresentWhenFittedError/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_data/ValueNotPresentWhenFittedError/__init__/self",
        "safeds/exceptions/_data/ValueNotPresentWhenFittedError/__init__/values"
      ]
    },
    {
      "id": "safeds/exceptions/_data/WrongFileExtensionError/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_data/WrongFileExtensionError/__init__/self",
        "safeds/exceptions/_data/WrongFileExtensionError/__init__/file",
        "safeds/exceptions/_data/WrongFileExtensionError/__init__/file_extension"
      ]
    },
    {
      "id": "safeds/exceptions/_generic/Bound/__init__",
      "name": "__init__",
      "docstring": {
        "description": "Initialize a Bound.\n\nParameters\n----------\nvalue: float\n    The value of the Bound.\n\nRaises\n------\nValueError\n    If value is nan or if value is +/-inf and the Bound type does not allow for infinite Bounds.",
        "full_docstring": "Initialize a Bound.\n\nParameters\n----------\nvalue: float\n    The value of the Bound.\n\nRaises\n------\nValueError\n    If value is nan or if value is +/-inf and the Bound type does not allow for infinite Bounds."
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_generic/Bound/__init__/self",
        "safeds/exceptions/_generic/Bound/__init__/value"
      ]
    },
    {
      "id": "safeds/exceptions/_generic/Bound/__str__",
      "name": "__str__",
      "docstring": {
        "description": "Get a string representation of the concrete value of the Bound.",
        "full_docstring": "Get a string representation of the concrete value of the Bound."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/exceptions/_generic/Bound/__str__/result_1"
      ],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_generic/Bound/__str__/self"
      ]
    },
    {
      "id": "safeds/exceptions/_generic/Bound/_check_lower_bound",
      "name": "_check_lower_bound",
      "docstring": {
        "description": "Check that a value does not exceed the Bound on the lower side.\n\nParameters\n----------\nactual: float\n    The actual value that should be checked for not exceeding the Bound.",
        "full_docstring": "Check that a value does not exceed the Bound on the lower side.\n\nParameters\n----------\nactual: float\n    The actual value that should be checked for not exceeding the Bound."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/exceptions/_generic/Bound/_check_lower_bound/result_1"
      ],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_generic/Bound/_check_lower_bound/self",
        "safeds/exceptions/_generic/Bound/_check_lower_bound/actual"
      ]
    },
    {
      "id": "safeds/exceptions/_generic/Bound/_check_upper_bound",
      "name": "_check_upper_bound",
      "docstring": {
        "description": "Check that a value does not exceed the Bound on the upper side.\n\nParameters\n----------\nactual: float\n    The actual value that should be checked for not exceeding the Bound.",
        "full_docstring": "Check that a value does not exceed the Bound on the upper side.\n\nParameters\n----------\nactual: float\n    The actual value that should be checked for not exceeding the Bound."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/exceptions/_generic/Bound/_check_upper_bound/result_1"
      ],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_generic/Bound/_check_upper_bound/self",
        "safeds/exceptions/_generic/Bound/_check_upper_bound/actual"
      ]
    },
    {
      "id": "safeds/exceptions/_generic/Bound/_str_lower_bound",
      "name": "_str_lower_bound",
      "docstring": {
        "description": "Get a string representation of the Bound as the lower Bound of an interval.",
        "full_docstring": "Get a string representation of the Bound as the lower Bound of an interval."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/exceptions/_generic/Bound/_str_lower_bound/result_1"
      ],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_generic/Bound/_str_lower_bound/self"
      ]
    },
    {
      "id": "safeds/exceptions/_generic/Bound/_str_upper_bound",
      "name": "_str_upper_bound",
      "docstring": {
        "description": "Get a string representation of the Bound as the upper Bound of an interval.",
        "full_docstring": "Get a string representation of the Bound as the upper Bound of an interval."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/exceptions/_generic/Bound/_str_upper_bound/result_1"
      ],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_generic/Bound/_str_upper_bound/self"
      ]
    },
    {
      "id": "safeds/exceptions/_generic/Bound/value",
      "name": "value",
      "docstring": {
        "description": "Get the concrete value of the Bound.",
        "full_docstring": "Get the concrete value of the Bound."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/exceptions/_generic/Bound/value/result_1"
      ],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_generic/Bound/value/self"
      ]
    },
    {
      "id": "safeds/exceptions/_generic/ClosedBound/__init__",
      "name": "__init__",
      "docstring": {
        "description": "Initialize a ClosedBound.\n\nParameters\n----------\nvalue: float\n    The value of the ClosedBound.\n\nRaises\n------\nValueError\n    If value is nan or if value is +/-inf.",
        "full_docstring": "Initialize a ClosedBound.\n\nParameters\n----------\nvalue: float\n    The value of the ClosedBound.\n\nRaises\n------\nValueError\n    If value is nan or if value is +/-inf."
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_generic/ClosedBound/__init__/self",
        "safeds/exceptions/_generic/ClosedBound/__init__/value"
      ]
    },
    {
      "id": "safeds/exceptions/_generic/ClosedBound/_check_lower_bound",
      "name": "_check_lower_bound",
      "docstring": {
        "description": "Check that a value is not strictly lower than the ClosedBound.\n\nParameters\n----------\nactual: float\n    The actual value that should be checked for not exceeding the Bound.",
        "full_docstring": "Check that a value is not strictly lower than the ClosedBound.\n\nParameters\n----------\nactual: float\n    The actual value that should be checked for not exceeding the Bound."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/exceptions/_generic/ClosedBound/_check_lower_bound/result_1"
      ],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_generic/ClosedBound/_check_lower_bound/self",
        "safeds/exceptions/_generic/ClosedBound/_check_lower_bound/actual"
      ]
    },
    {
      "id": "safeds/exceptions/_generic/ClosedBound/_check_upper_bound",
      "name": "_check_upper_bound",
      "docstring": {
        "description": "Check that a value is not strictly higher than the ClosedBound.\n\nParameters\n----------\nactual: float\n    The actual value that should be checked for not exceeding the Bound.",
        "full_docstring": "Check that a value is not strictly higher than the ClosedBound.\n\nParameters\n----------\nactual: float\n    The actual value that should be checked for not exceeding the Bound."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/exceptions/_generic/ClosedBound/_check_upper_bound/result_1"
      ],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_generic/ClosedBound/_check_upper_bound/self",
        "safeds/exceptions/_generic/ClosedBound/_check_upper_bound/actual"
      ]
    },
    {
      "id": "safeds/exceptions/_generic/ClosedBound/_str_lower_bound",
      "name": "_str_lower_bound",
      "docstring": {
        "description": "Get a string representation of the ClosedBound as the lower Bound of an interval.",
        "full_docstring": "Get a string representation of the ClosedBound as the lower Bound of an interval."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/exceptions/_generic/ClosedBound/_str_lower_bound/result_1"
      ],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_generic/ClosedBound/_str_lower_bound/self"
      ]
    },
    {
      "id": "safeds/exceptions/_generic/ClosedBound/_str_upper_bound",
      "name": "_str_upper_bound",
      "docstring": {
        "description": "Get a string representation of the ClosedBound as the upper Bound of an interval.",
        "full_docstring": "Get a string representation of the ClosedBound as the upper Bound of an interval."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/exceptions/_generic/ClosedBound/_str_upper_bound/result_1"
      ],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_generic/ClosedBound/_str_upper_bound/self"
      ]
    },
    {
      "id": "safeds/exceptions/_generic/OpenBound/__init__",
      "name": "__init__",
      "docstring": {
        "description": "Initialize an OpenBound.\n\nParameters\n----------\nvalue: float\n    The value of the OpenBound.\n\nRaises\n------\nValueError\n    If value is nan.",
        "full_docstring": "Initialize an OpenBound.\n\nParameters\n----------\nvalue: float\n    The value of the OpenBound.\n\nRaises\n------\nValueError\n    If value is nan."
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_generic/OpenBound/__init__/self",
        "safeds/exceptions/_generic/OpenBound/__init__/value"
      ]
    },
    {
      "id": "safeds/exceptions/_generic/OpenBound/__str__",
      "name": "__str__",
      "docstring": {
        "description": "Get a string representation of the concrete value of the OpenBound.",
        "full_docstring": "Get a string representation of the concrete value of the OpenBound."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/exceptions/_generic/OpenBound/__str__/result_1"
      ],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_generic/OpenBound/__str__/self"
      ]
    },
    {
      "id": "safeds/exceptions/_generic/OpenBound/_check_lower_bound",
      "name": "_check_lower_bound",
      "docstring": {
        "description": "Check that a value is not lower or equal to the OpenBound.\n\nParameters\n----------\nactual: float\n    The actual value that should be checked for not exceeding the Bound.",
        "full_docstring": "Check that a value is not lower or equal to the OpenBound.\n\nParameters\n----------\nactual: float\n    The actual value that should be checked for not exceeding the Bound."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/exceptions/_generic/OpenBound/_check_lower_bound/result_1"
      ],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_generic/OpenBound/_check_lower_bound/self",
        "safeds/exceptions/_generic/OpenBound/_check_lower_bound/actual"
      ]
    },
    {
      "id": "safeds/exceptions/_generic/OpenBound/_check_upper_bound",
      "name": "_check_upper_bound",
      "docstring": {
        "description": "Check that a value is not higher or equal to the OpenBound.\n\nParameters\n----------\nactual: float\n    The actual value that should be checked for not exceeding the Bound.",
        "full_docstring": "Check that a value is not higher or equal to the OpenBound.\n\nParameters\n----------\nactual: float\n    The actual value that should be checked for not exceeding the Bound."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/exceptions/_generic/OpenBound/_check_upper_bound/result_1"
      ],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_generic/OpenBound/_check_upper_bound/self",
        "safeds/exceptions/_generic/OpenBound/_check_upper_bound/actual"
      ]
    },
    {
      "id": "safeds/exceptions/_generic/OpenBound/_str_lower_bound",
      "name": "_str_lower_bound",
      "docstring": {
        "description": "Get a string representation of the OpenBound as the lower Bound of an interval.",
        "full_docstring": "Get a string representation of the OpenBound as the lower Bound of an interval."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/exceptions/_generic/OpenBound/_str_lower_bound/result_1"
      ],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_generic/OpenBound/_str_lower_bound/self"
      ]
    },
    {
      "id": "safeds/exceptions/_generic/OpenBound/_str_upper_bound",
      "name": "_str_upper_bound",
      "docstring": {
        "description": "Get a string representation of the OpenBound as the upper Bound of an interval.",
        "full_docstring": "Get a string representation of the OpenBound as the upper Bound of an interval."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/exceptions/_generic/OpenBound/_str_upper_bound/result_1"
      ],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_generic/OpenBound/_str_upper_bound/self"
      ]
    },
    {
      "id": "safeds/exceptions/_generic/OutOfBoundsError/__init__",
      "name": "__init__",
      "docstring": {
        "description": "Initialize an OutOfBoundsError.\n\nParameters\n----------\nactual: float\n    The actual value that is outside its expected range.\nname: str | None\n    The name of the offending variable.\nlower_bound: Bound | None\n    The lower bound of the expected range. Use None if there is no lower Bound.\nupper_bound: Bound | None\n    The upper bound of the expected range. Use None if there is no upper Bound.\n\nRaises\n------\nValueError\n    * If one of the given Bounds is +/-inf. (For infinite Bounds, pass None instead.)\n    * If one of the given Bounds is nan.\n    * If upper_bound < lower_bound.\n    * If actual does not lie outside the given interval.\n    * If actual is not a real number.",
        "full_docstring": "Initialize an OutOfBoundsError.\n\nParameters\n----------\nactual: float\n    The actual value that is outside its expected range.\nname: str | None\n    The name of the offending variable.\nlower_bound: Bound | None\n    The lower bound of the expected range. Use None if there is no lower Bound.\nupper_bound: Bound | None\n    The upper bound of the expected range. Use None if there is no upper Bound.\n\nRaises\n------\nValueError\n    * If one of the given Bounds is +/-inf. (For infinite Bounds, pass None instead.)\n    * If one of the given Bounds is nan.\n    * If upper_bound < lower_bound.\n    * If actual does not lie outside the given interval.\n    * If actual is not a real number."
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_generic/OutOfBoundsError/__init__/self",
        "safeds/exceptions/_generic/OutOfBoundsError/__init__/actual",
        "safeds/exceptions/_generic/OutOfBoundsError/__init__/name",
        "safeds/exceptions/_generic/OutOfBoundsError/__init__/lower_bound",
        "safeds/exceptions/_generic/OutOfBoundsError/__init__/upper_bound"
      ]
    },
    {
      "id": "safeds/exceptions/_ml/DatasetContainsTargetError/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_ml/DatasetContainsTargetError/__init__/self",
        "safeds/exceptions/_ml/DatasetContainsTargetError/__init__/target_name"
      ]
    },
    {
      "id": "safeds/exceptions/_ml/DatasetMissesDataError/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_ml/DatasetMissesDataError/__init__/self"
      ]
    },
    {
      "id": "safeds/exceptions/_ml/DatasetMissesFeaturesError/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_ml/DatasetMissesFeaturesError/__init__/self",
        "safeds/exceptions/_ml/DatasetMissesFeaturesError/__init__/missing_feature_names"
      ]
    },
    {
      "id": "safeds/exceptions/_ml/LearningError/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_ml/LearningError/__init__/self",
        "safeds/exceptions/_ml/LearningError/__init__/reason"
      ]
    },
    {
      "id": "safeds/exceptions/_ml/ModelNotFittedError/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_ml/ModelNotFittedError/__init__/self"
      ]
    },
    {
      "id": "safeds/exceptions/_ml/PredictionError/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_ml/PredictionError/__init__/self",
        "safeds/exceptions/_ml/PredictionError/__init__/reason"
      ]
    },
    {
      "id": "safeds/exceptions/_ml/UntaggedTableError/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [],
      "parameters": [
        "safeds/exceptions/_ml/UntaggedTableError/__init__/self"
      ]
    },
    {
      "id": "safeds/ml/classical/_util_sklearn/fit",
      "name": "fit",
      "docstring": {
        "description": "Fit a model for a given tagged table.\n\nParameters\n----------\nmodel\n    Classifier or Regression from scikit-learn.\ntagged_table : TaggedTable\n    The tagged table containing the feature and target vectors.\n\nRaises\n------\nLearningError\n    If the tagged table contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows.",
        "full_docstring": "Fit a model for a given tagged table.\n\nParameters\n----------\nmodel\n    Classifier or Regression from scikit-learn.\ntagged_table : TaggedTable\n    The tagged table containing the feature and target vectors.\n\nRaises\n------\nLearningError\n    If the tagged table contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [],
      "parameters": [
        "safeds/ml/classical/_util_sklearn/fit/model",
        "safeds/ml/classical/_util_sklearn/fit/tagged_table"
      ]
    },
    {
      "id": "safeds/ml/classical/_util_sklearn/predict",
      "name": "predict",
      "docstring": {
        "description": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\nmodel\n    Classifier or regressor from scikit-learn.\ndataset : Table\n    The dataset containing the features.\ntarget_name : str | None\n    The name of the target column.\nfeature_names : list[str] | None\n    The names of the feature columns.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given features and the predicted target.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows.",
        "full_docstring": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\nmodel\n    Classifier or regressor from scikit-learn.\ndataset : Table\n    The dataset containing the features.\ntarget_name : str | None\n    The name of the target column.\nfeature_names : list[str] | None\n    The names of the feature columns.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given features and the predicted target.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/_util_sklearn/predict/result_1"
      ],
      "reexported_by": [],
      "parameters": [
        "safeds/ml/classical/_util_sklearn/predict/model",
        "safeds/ml/classical/_util_sklearn/predict/dataset",
        "safeds/ml/classical/_util_sklearn/predict/feature_names",
        "safeds/ml/classical/_util_sklearn/predict/target_name"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_ada_boost/AdaBoost/__init__/self",
        "safeds/ml/classical/classification/_ada_boost/AdaBoost/__init__/learner",
        "safeds/ml/classical/classification/_ada_boost/AdaBoost/__init__/maximum_number_of_learners",
        "safeds/ml/classical/classification/_ada_boost/AdaBoost/__init__/learning_rate"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/_get_sklearn_classifier",
      "name": "_get_sklearn_classifier",
      "docstring": {
        "description": "Return a new wrapped Classifier from sklearn.\n\nReturns\n-------\nwrapped_classifier: ClassifierMixin\n    The sklearn Classifier.",
        "full_docstring": "Return a new wrapped Classifier from sklearn.\n\nReturns\n-------\nwrapped_classifier: ClassifierMixin\n    The sklearn Classifier."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_ada_boost/AdaBoost/_get_sklearn_classifier/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_ada_boost/AdaBoost/_get_sklearn_classifier/self"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/fit",
      "name": "fit",
      "docstring": {
        "description": "Create a copy of this classifier and fit it with the given training data.\n\nThis classifier is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_classifier : AdaBoost\n    The fitted classifier.\n\nRaises\n------\nLearningError\n    If the training data contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows.",
        "full_docstring": "Create a copy of this classifier and fit it with the given training data.\n\nThis classifier is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_classifier : AdaBoost\n    The fitted classifier.\n\nRaises\n------\nLearningError\n    If the training data contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_ada_boost/AdaBoost/fit/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_ada_boost/AdaBoost/fit/self",
        "safeds/ml/classical/classification/_ada_boost/AdaBoost/fit/training_set"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/is_fitted",
      "name": "is_fitted",
      "docstring": {
        "description": "Check if the classifier is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the classifier is fitted.",
        "full_docstring": "Check if the classifier is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the classifier is fitted."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_ada_boost/AdaBoost/is_fitted/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_ada_boost/AdaBoost/is_fitted/self"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/learner",
      "name": "learner",
      "docstring": {
        "description": "Get the base learner used for training the ensemble.\n\nReturns\n-------\nresult: Classifier | None\n    The base learner.",
        "full_docstring": "Get the base learner used for training the ensemble.\n\nReturns\n-------\nresult: Classifier | None\n    The base learner."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/ml/classical/classification/_ada_boost/AdaBoost/learner/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_ada_boost/AdaBoost/learner/self"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/learning_rate",
      "name": "learning_rate",
      "docstring": {
        "description": "Get the learning rate.\n\nReturns\n-------\nresult: float\n    The learning rate.",
        "full_docstring": "Get the learning rate.\n\nReturns\n-------\nresult: float\n    The learning rate."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/ml/classical/classification/_ada_boost/AdaBoost/learning_rate/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_ada_boost/AdaBoost/learning_rate/self"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/maximum_number_of_learners",
      "name": "maximum_number_of_learners",
      "docstring": {
        "description": "Get the maximum number of learners in the ensemble.\n\nReturns\n-------\nresult: int\n    The maximum number of learners.",
        "full_docstring": "Get the maximum number of learners in the ensemble.\n\nReturns\n-------\nresult: int\n    The maximum number of learners."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/ml/classical/classification/_ada_boost/AdaBoost/maximum_number_of_learners/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_ada_boost/AdaBoost/maximum_number_of_learners/self"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/predict",
      "name": "predict",
      "docstring": {
        "description": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows.",
        "full_docstring": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_ada_boost/AdaBoost/predict/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_ada_boost/AdaBoost/predict/self",
        "safeds/ml/classical/classification/_ada_boost/AdaBoost/predict/dataset"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_classifier/Classifier/_get_sklearn_classifier",
      "name": "_get_sklearn_classifier",
      "docstring": {
        "description": "Return a new wrapped Classifier from sklearn.\n\nReturns\n-------\nwrapped_classifier: ClassifierMixin\n    The sklearn Classifier.",
        "full_docstring": "Return a new wrapped Classifier from sklearn.\n\nReturns\n-------\nwrapped_classifier: ClassifierMixin\n    The sklearn Classifier."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_classifier/Classifier/_get_sklearn_classifier/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_classifier/Classifier/_get_sklearn_classifier/self"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_classifier/Classifier/accuracy",
      "name": "accuracy",
      "docstring": {
        "description": "Compute the accuracy of the classifier on the given data.\n\nParameters\n----------\nvalidation_or_test_set : TaggedTable\n    The validation or test set.\n\nReturns\n-------\naccuracy : float\n    The calculated accuracy score, i.e. the percentage of equal data.\n\nRaises\n------\nUntaggedTableError\n    If the table is untagged.",
        "full_docstring": "Compute the accuracy of the classifier on the given data.\n\nParameters\n----------\nvalidation_or_test_set : TaggedTable\n    The validation or test set.\n\nReturns\n-------\naccuracy : float\n    The calculated accuracy score, i.e. the percentage of equal data.\n\nRaises\n------\nUntaggedTableError\n    If the table is untagged."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_classifier/Classifier/accuracy/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_classifier/Classifier/accuracy/self",
        "safeds/ml/classical/classification/_classifier/Classifier/accuracy/validation_or_test_set"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_classifier/Classifier/f1_score",
      "name": "f1_score",
      "docstring": {
        "description": "Compute the classifier's $F_1$-score on the given data.\n\nParameters\n----------\nvalidation_or_test_set : TaggedTable\n    The validation or test set.\npositive_class : Any\n    The class to be considered positive. All other classes are considered negative.\n\nReturns\n-------\nf1_score : float\n    The calculated $F_1$-score, i.e. the harmonic mean between precision and recall.\n    Return 1 if there are no positive expectations and predictions.",
        "full_docstring": "Compute the classifier's $F_1$-score on the given data.\n\nParameters\n----------\nvalidation_or_test_set : TaggedTable\n    The validation or test set.\npositive_class : Any\n    The class to be considered positive. All other classes are considered negative.\n\nReturns\n-------\nf1_score : float\n    The calculated $F_1$-score, i.e. the harmonic mean between precision and recall.\n    Return 1 if there are no positive expectations and predictions."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_classifier/Classifier/f1_score/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_classifier/Classifier/f1_score/self",
        "safeds/ml/classical/classification/_classifier/Classifier/f1_score/validation_or_test_set",
        "safeds/ml/classical/classification/_classifier/Classifier/f1_score/positive_class"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_classifier/Classifier/fit",
      "name": "fit",
      "docstring": {
        "description": "Create a copy of this classifier and fit it with the given training data.\n\nThis classifier is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_classifier : Classifier\n    The fitted classifier.\n\nRaises\n------\nLearningError\n    If the training data contains invalid values or if the training failed.",
        "full_docstring": "Create a copy of this classifier and fit it with the given training data.\n\nThis classifier is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_classifier : Classifier\n    The fitted classifier.\n\nRaises\n------\nLearningError\n    If the training data contains invalid values or if the training failed."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_classifier/Classifier/fit/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_classifier/Classifier/fit/self",
        "safeds/ml/classical/classification/_classifier/Classifier/fit/training_set"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_classifier/Classifier/is_fitted",
      "name": "is_fitted",
      "docstring": {
        "description": "Check if the classifier is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the classifier is fitted.",
        "full_docstring": "Check if the classifier is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the classifier is fitted."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_classifier/Classifier/is_fitted/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_classifier/Classifier/is_fitted/self"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_classifier/Classifier/precision",
      "name": "precision",
      "docstring": {
        "description": "Compute the classifier's precision on the given data.\n\nParameters\n----------\nvalidation_or_test_set : TaggedTable\n    The validation or test set.\npositive_class : Any\n    The class to be considered positive. All other classes are considered negative.\n\nReturns\n-------\nprecision : float\n    The calculated precision score, i.e. the ratio of correctly predicted positives to all predicted positives.\n    Return 1 if no positive predictions are made.",
        "full_docstring": "Compute the classifier's precision on the given data.\n\nParameters\n----------\nvalidation_or_test_set : TaggedTable\n    The validation or test set.\npositive_class : Any\n    The class to be considered positive. All other classes are considered negative.\n\nReturns\n-------\nprecision : float\n    The calculated precision score, i.e. the ratio of correctly predicted positives to all predicted positives.\n    Return 1 if no positive predictions are made."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_classifier/Classifier/precision/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_classifier/Classifier/precision/self",
        "safeds/ml/classical/classification/_classifier/Classifier/precision/validation_or_test_set",
        "safeds/ml/classical/classification/_classifier/Classifier/precision/positive_class"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_classifier/Classifier/predict",
      "name": "predict",
      "docstring": {
        "description": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.",
        "full_docstring": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_classifier/Classifier/predict/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_classifier/Classifier/predict/self",
        "safeds/ml/classical/classification/_classifier/Classifier/predict/dataset"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_classifier/Classifier/recall",
      "name": "recall",
      "docstring": {
        "description": "Compute the classifier's recall on the given data.\n\nParameters\n----------\nvalidation_or_test_set : TaggedTable\n    The validation or test set.\npositive_class : Any\n    The class to be considered positive. All other classes are considered negative.\n\nReturns\n-------\nrecall : float\n    The calculated recall score, i.e. the ratio of correctly predicted positives to all expected positives.\n    Return 1 if there are no positive expectations.",
        "full_docstring": "Compute the classifier's recall on the given data.\n\nParameters\n----------\nvalidation_or_test_set : TaggedTable\n    The validation or test set.\npositive_class : Any\n    The class to be considered positive. All other classes are considered negative.\n\nReturns\n-------\nrecall : float\n    The calculated recall score, i.e. the ratio of correctly predicted positives to all expected positives.\n    Return 1 if there are no positive expectations."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_classifier/Classifier/recall/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_classifier/Classifier/recall/self",
        "safeds/ml/classical/classification/_classifier/Classifier/recall/validation_or_test_set",
        "safeds/ml/classical/classification/_classifier/Classifier/recall/positive_class"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_decision_tree/DecisionTree/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_decision_tree/DecisionTree/__init__/self"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_decision_tree/DecisionTree/_get_sklearn_classifier",
      "name": "_get_sklearn_classifier",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_decision_tree/DecisionTree/_get_sklearn_classifier/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_decision_tree/DecisionTree/_get_sklearn_classifier/self"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_decision_tree/DecisionTree/fit",
      "name": "fit",
      "docstring": {
        "description": "Create a copy of this classifier and fit it with the given training data.\n\nThis classifier is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_classifier : DecisionTree\n    The fitted classifier.\n\nRaises\n------\nLearningError\n    If the training data contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows.",
        "full_docstring": "Create a copy of this classifier and fit it with the given training data.\n\nThis classifier is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_classifier : DecisionTree\n    The fitted classifier.\n\nRaises\n------\nLearningError\n    If the training data contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_decision_tree/DecisionTree/fit/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_decision_tree/DecisionTree/fit/self",
        "safeds/ml/classical/classification/_decision_tree/DecisionTree/fit/training_set"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_decision_tree/DecisionTree/is_fitted",
      "name": "is_fitted",
      "docstring": {
        "description": "Check if the classifier is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the classifier is fitted.",
        "full_docstring": "Check if the classifier is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the classifier is fitted."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_decision_tree/DecisionTree/is_fitted/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_decision_tree/DecisionTree/is_fitted/self"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_decision_tree/DecisionTree/predict",
      "name": "predict",
      "docstring": {
        "description": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows.",
        "full_docstring": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_decision_tree/DecisionTree/predict/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_decision_tree/DecisionTree/predict/self",
        "safeds/ml/classical/classification/_decision_tree/DecisionTree/predict/dataset"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/__init__/self",
        "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/__init__/number_of_trees",
        "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/__init__/learning_rate"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/_get_sklearn_classifier",
      "name": "_get_sklearn_classifier",
      "docstring": {
        "description": "Return a new wrapped Classifier from sklearn.\n\nReturns\n-------\nwrapped_classifier: ClassifierMixin\n    The sklearn Classifier.",
        "full_docstring": "Return a new wrapped Classifier from sklearn.\n\nReturns\n-------\nwrapped_classifier: ClassifierMixin\n    The sklearn Classifier."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/_get_sklearn_classifier/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/_get_sklearn_classifier/self"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/fit",
      "name": "fit",
      "docstring": {
        "description": "Create a copy of this classifier and fit it with the given training data.\n\nThis classifier is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_classifier : GradientBoosting\n    The fitted classifier.\n\nRaises\n------\nLearningError\n    If the training data contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows.",
        "full_docstring": "Create a copy of this classifier and fit it with the given training data.\n\nThis classifier is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_classifier : GradientBoosting\n    The fitted classifier.\n\nRaises\n------\nLearningError\n    If the training data contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/fit/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/fit/self",
        "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/fit/training_set"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/is_fitted",
      "name": "is_fitted",
      "docstring": {
        "description": "Check if the classifier is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the classifier is fitted.",
        "full_docstring": "Check if the classifier is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the classifier is fitted."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/is_fitted/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/is_fitted/self"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/learning_rate",
      "name": "learning_rate",
      "docstring": {
        "description": "Get the learning rate.\n\nReturns\n-------\nresult: float\n    The learning rate.",
        "full_docstring": "Get the learning rate.\n\nReturns\n-------\nresult: float\n    The learning rate."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/learning_rate/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/learning_rate/self"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/number_of_trees",
      "name": "number_of_trees",
      "docstring": {
        "description": "Get the number of trees (estimators) in the ensemble.\n\nReturns\n-------\nresult: int\n    The number of trees.",
        "full_docstring": "Get the number of trees (estimators) in the ensemble.\n\nReturns\n-------\nresult: int\n    The number of trees."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/number_of_trees/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/number_of_trees/self"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/predict",
      "name": "predict",
      "docstring": {
        "description": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows.",
        "full_docstring": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/predict/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/predict/self",
        "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/predict/dataset"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/__init__/self",
        "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/__init__/number_of_neighbors"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/_get_sklearn_classifier",
      "name": "_get_sklearn_classifier",
      "docstring": {
        "description": "Return a new wrapped Classifier from sklearn.\n\nReturns\n-------\nwrapped_classifier: ClassifierMixin\n    The sklearn Classifier.",
        "full_docstring": "Return a new wrapped Classifier from sklearn.\n\nReturns\n-------\nwrapped_classifier: ClassifierMixin\n    The sklearn Classifier."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/_get_sklearn_classifier/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/_get_sklearn_classifier/self"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/fit",
      "name": "fit",
      "docstring": {
        "description": "Create a copy of this classifier and fit it with the given training data.\n\nThis classifier is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_classifier : KNearestNeighbors\n    The fitted classifier.\n\nRaises\n------\nValueError\n    If `number_of_neighbors` is greater than the sample size.\nLearningError\n    If the training data contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows.",
        "full_docstring": "Create a copy of this classifier and fit it with the given training data.\n\nThis classifier is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_classifier : KNearestNeighbors\n    The fitted classifier.\n\nRaises\n------\nValueError\n    If `number_of_neighbors` is greater than the sample size.\nLearningError\n    If the training data contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/fit/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/fit/self",
        "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/fit/training_set"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/is_fitted",
      "name": "is_fitted",
      "docstring": {
        "description": "Check if the classifier is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the classifier is fitted.",
        "full_docstring": "Check if the classifier is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the classifier is fitted."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/is_fitted/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/is_fitted/self"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/number_of_neighbors",
      "name": "number_of_neighbors",
      "docstring": {
        "description": "Get the number of neighbors used for interpolation.\n\nReturns\n-------\nresult: int\n    The number of neighbors.",
        "full_docstring": "Get the number of neighbors used for interpolation.\n\nReturns\n-------\nresult: int\n    The number of neighbors."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/number_of_neighbors/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/number_of_neighbors/self"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/predict",
      "name": "predict",
      "docstring": {
        "description": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows.",
        "full_docstring": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/predict/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/predict/self",
        "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/predict/dataset"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/__init__/self"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/_get_sklearn_classifier",
      "name": "_get_sklearn_classifier",
      "docstring": {
        "description": "Return a new wrapped Classifier from sklearn.\n\nReturns\n-------\nwrapped_classifier: ClassifierMixin\n    The sklearn Classifier.",
        "full_docstring": "Return a new wrapped Classifier from sklearn.\n\nReturns\n-------\nwrapped_classifier: ClassifierMixin\n    The sklearn Classifier."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/_get_sklearn_classifier/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/_get_sklearn_classifier/self"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/fit",
      "name": "fit",
      "docstring": {
        "description": "Create a copy of this classifier and fit it with the given training data.\n\nThis classifier is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_classifier : LogisticRegression\n    The fitted classifier.\n\nRaises\n------\nLearningError\n    If the training data contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows.",
        "full_docstring": "Create a copy of this classifier and fit it with the given training data.\n\nThis classifier is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_classifier : LogisticRegression\n    The fitted classifier.\n\nRaises\n------\nLearningError\n    If the training data contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/fit/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/fit/self",
        "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/fit/training_set"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/is_fitted",
      "name": "is_fitted",
      "docstring": {
        "description": "Check if the classifier is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the classifier is fitted.",
        "full_docstring": "Check if the classifier is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the classifier is fitted."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/is_fitted/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/is_fitted/self"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/predict",
      "name": "predict",
      "docstring": {
        "description": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows.",
        "full_docstring": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/predict/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/predict/self",
        "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/predict/dataset"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_random_forest/RandomForest/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_random_forest/RandomForest/__init__/self",
        "safeds/ml/classical/classification/_random_forest/RandomForest/__init__/number_of_trees"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_random_forest/RandomForest/_get_sklearn_classifier",
      "name": "_get_sklearn_classifier",
      "docstring": {
        "description": "Return a new wrapped Classifier from sklearn.\n\nReturns\n-------\nwrapped_classifier: ClassifierMixin\n    The sklearn Classifier.",
        "full_docstring": "Return a new wrapped Classifier from sklearn.\n\nReturns\n-------\nwrapped_classifier: ClassifierMixin\n    The sklearn Classifier."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_random_forest/RandomForest/_get_sklearn_classifier/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_random_forest/RandomForest/_get_sklearn_classifier/self"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_random_forest/RandomForest/fit",
      "name": "fit",
      "docstring": {
        "description": "Create a copy of this classifier and fit it with the given training data.\n\nThis classifier is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_classifier : RandomForest\n    The fitted classifier.\n\nRaises\n------\nLearningError\n    If the training data contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows.",
        "full_docstring": "Create a copy of this classifier and fit it with the given training data.\n\nThis classifier is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_classifier : RandomForest\n    The fitted classifier.\n\nRaises\n------\nLearningError\n    If the training data contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_random_forest/RandomForest/fit/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_random_forest/RandomForest/fit/self",
        "safeds/ml/classical/classification/_random_forest/RandomForest/fit/training_set"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_random_forest/RandomForest/is_fitted",
      "name": "is_fitted",
      "docstring": {
        "description": "Check if the classifier is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the classifier is fitted.",
        "full_docstring": "Check if the classifier is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the classifier is fitted."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_random_forest/RandomForest/is_fitted/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_random_forest/RandomForest/is_fitted/self"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_random_forest/RandomForest/number_of_trees",
      "name": "number_of_trees",
      "docstring": {
        "description": "Get the number of trees used in the random forest.\n\nReturns\n-------\nresult: int\n    The number of trees.",
        "full_docstring": "Get the number of trees used in the random forest.\n\nReturns\n-------\nresult: int\n    The number of trees."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/ml/classical/classification/_random_forest/RandomForest/number_of_trees/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_random_forest/RandomForest/number_of_trees/self"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_random_forest/RandomForest/predict",
      "name": "predict",
      "docstring": {
        "description": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows.",
        "full_docstring": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_random_forest/RandomForest/predict/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_random_forest/RandomForest/predict/self",
        "safeds/ml/classical/classification/_random_forest/RandomForest/predict/dataset"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/Linear/get_sklearn_kernel",
      "name": "get_sklearn_kernel",
      "docstring": {
        "description": "Get the name of the linear kernel.\n\nReturns\n-------\nresult: str\n    The name of the linear kernel.",
        "full_docstring": "Get the name of the linear kernel.\n\nReturns\n-------\nresult: str\n    The name of the linear kernel."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/Linear/get_sklearn_kernel/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/Linear/get_sklearn_kernel/self"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial/__init__/self",
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial/__init__/degree"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial/get_sklearn_kernel",
      "name": "get_sklearn_kernel",
      "docstring": {
        "description": "Get the name of the polynomial kernel.\n\nReturns\n-------\nresult: str\n    The name of the polynomial kernel.",
        "full_docstring": "Get the name of the polynomial kernel.\n\nReturns\n-------\nresult: str\n    The name of the polynomial kernel."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial/get_sklearn_kernel/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial/get_sklearn_kernel/self"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/RadialBasisFunction/get_sklearn_kernel",
      "name": "get_sklearn_kernel",
      "docstring": {
        "description": "Get the name of the radial basis function (RBF) kernel.\n\nReturns\n-------\nresult: str\n    The name of the RBF kernel.",
        "full_docstring": "Get the name of the radial basis function (RBF) kernel.\n\nReturns\n-------\nresult: str\n    The name of the RBF kernel."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/RadialBasisFunction/get_sklearn_kernel/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/RadialBasisFunction/get_sklearn_kernel/self"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/Sigmoid/get_sklearn_kernel",
      "name": "get_sklearn_kernel",
      "docstring": {
        "description": "Get the name of the sigmoid kernel.\n\nReturns\n-------\nresult: str\n    The name of the sigmoid kernel.",
        "full_docstring": "Get the name of the sigmoid kernel.\n\nReturns\n-------\nresult: str\n    The name of the sigmoid kernel."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/Sigmoid/get_sklearn_kernel/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/Sigmoid/get_sklearn_kernel/self"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/__init__/self",
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/__init__/c",
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/__init__/kernel"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/_get_kernel_name",
      "name": "_get_kernel_name",
      "docstring": {
        "description": "Get the name of the kernel.\n\nReturns\n-------\nresult: str\n    The name of the kernel.\n\nRaises\n------\nTypeError\n    If the kernel type is invalid.",
        "full_docstring": "Get the name of the kernel.\n\nReturns\n-------\nresult: str\n    The name of the kernel.\n\nRaises\n------\nTypeError\n    If the kernel type is invalid."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/_get_kernel_name/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/_get_kernel_name/self"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/_get_sklearn_classifier",
      "name": "_get_sklearn_classifier",
      "docstring": {
        "description": "Return a new wrapped Classifier from sklearn.\n\nReturns\n-------\nwrapped_classifier: ClassifierMixin\n    The sklearn Classifier.",
        "full_docstring": "Return a new wrapped Classifier from sklearn.\n\nReturns\n-------\nwrapped_classifier: ClassifierMixin\n    The sklearn Classifier."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/_get_sklearn_classifier/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/_get_sklearn_classifier/self"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/c",
      "name": "c",
      "docstring": {
        "description": "Get the regularization strength.\n\nReturns\n-------\nresult: float\n    The regularization strength.",
        "full_docstring": "Get the regularization strength.\n\nReturns\n-------\nresult: float\n    The regularization strength."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/c/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/c/self"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/fit",
      "name": "fit",
      "docstring": {
        "description": "Create a copy of this classifier and fit it with the given training data.\n\nThis classifier is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_classifier : SupportVectorMachine\n    The fitted classifier.\n\nRaises\n------\nLearningError\n    If the training data contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows.",
        "full_docstring": "Create a copy of this classifier and fit it with the given training data.\n\nThis classifier is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_classifier : SupportVectorMachine\n    The fitted classifier.\n\nRaises\n------\nLearningError\n    If the training data contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/fit/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/fit/self",
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/fit/training_set"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/is_fitted",
      "name": "is_fitted",
      "docstring": {
        "description": "Check if the classifier is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the classifier is fitted.",
        "full_docstring": "Check if the classifier is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the classifier is fitted."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/is_fitted/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/is_fitted/self"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/kernel",
      "name": "kernel",
      "docstring": {
        "description": "Get the type of kernel used.\n\nReturns\n-------\nresult: SupportVectorMachineKernel | None\n    The type of kernel used.",
        "full_docstring": "Get the type of kernel used.\n\nReturns\n-------\nresult: SupportVectorMachineKernel | None\n    The type of kernel used."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/kernel/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/kernel/self"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/predict",
      "name": "predict",
      "docstring": {
        "description": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows.",
        "full_docstring": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/predict/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/predict/self",
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/predict/dataset"
      ]
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachineKernel/get_sklearn_kernel",
      "name": "get_sklearn_kernel",
      "docstring": {
        "description": "Get the kernel of the given SupportVectorMachine.\n\nReturns\n-------\nobject\nThe kernel of the SupportVectorMachine.",
        "full_docstring": "Get the kernel of the given SupportVectorMachine.\n\nReturns\n-------\nobject\nThe kernel of the SupportVectorMachine."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachineKernel/get_sklearn_kernel/result_1"
      ],
      "reexported_by": [],
      "parameters": [
        "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachineKernel/get_sklearn_kernel/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_ada_boost/AdaBoost/__init__/self",
        "safeds/ml/classical/regression/_ada_boost/AdaBoost/__init__/learner",
        "safeds/ml/classical/regression/_ada_boost/AdaBoost/__init__/maximum_number_of_learners",
        "safeds/ml/classical/regression/_ada_boost/AdaBoost/__init__/learning_rate"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/_get_sklearn_regressor",
      "name": "_get_sklearn_regressor",
      "docstring": {
        "description": "Return a new wrapped Regressor from sklearn.\n\nReturns\n-------\nwrapped_regressor: RegressorMixin\n    The sklearn Regressor.",
        "full_docstring": "Return a new wrapped Regressor from sklearn.\n\nReturns\n-------\nwrapped_regressor: RegressorMixin\n    The sklearn Regressor."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_ada_boost/AdaBoost/_get_sklearn_regressor/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_ada_boost/AdaBoost/_get_sklearn_regressor/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/fit",
      "name": "fit",
      "docstring": {
        "description": "Create a copy of this regressor and fit it with the given training data.\n\nThis regressor is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_regressor : AdaBoost\n    The fitted regressor.\n\nRaises\n------\nLearningError\n    If the training data contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows.",
        "full_docstring": "Create a copy of this regressor and fit it with the given training data.\n\nThis regressor is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_regressor : AdaBoost\n    The fitted regressor.\n\nRaises\n------\nLearningError\n    If the training data contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_ada_boost/AdaBoost/fit/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_ada_boost/AdaBoost/fit/self",
        "safeds/ml/classical/regression/_ada_boost/AdaBoost/fit/training_set"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/is_fitted",
      "name": "is_fitted",
      "docstring": {
        "description": "Check if the regressor is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the regressor is fitted.",
        "full_docstring": "Check if the regressor is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the regressor is fitted."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_ada_boost/AdaBoost/is_fitted/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_ada_boost/AdaBoost/is_fitted/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/learner",
      "name": "learner",
      "docstring": {
        "description": "Get the base learner used for training the ensemble.\n\nReturns\n-------\nresult: Regressor | None\n    The base learner.",
        "full_docstring": "Get the base learner used for training the ensemble.\n\nReturns\n-------\nresult: Regressor | None\n    The base learner."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/ml/classical/regression/_ada_boost/AdaBoost/learner/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_ada_boost/AdaBoost/learner/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/learning_rate",
      "name": "learning_rate",
      "docstring": {
        "description": "Get the learning rate.\n\nReturns\n-------\nresult: float\n    The learning rate.",
        "full_docstring": "Get the learning rate.\n\nReturns\n-------\nresult: float\n    The learning rate."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/ml/classical/regression/_ada_boost/AdaBoost/learning_rate/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_ada_boost/AdaBoost/learning_rate/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/maximum_number_of_learners",
      "name": "maximum_number_of_learners",
      "docstring": {
        "description": "Get the maximum number of learners in the ensemble.\n\nReturns\n-------\nresult: int\n    The maximum number of learners.",
        "full_docstring": "Get the maximum number of learners in the ensemble.\n\nReturns\n-------\nresult: int\n    The maximum number of learners."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/ml/classical/regression/_ada_boost/AdaBoost/maximum_number_of_learners/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_ada_boost/AdaBoost/maximum_number_of_learners/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/predict",
      "name": "predict",
      "docstring": {
        "description": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows.",
        "full_docstring": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_ada_boost/AdaBoost/predict/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_ada_boost/AdaBoost/predict/self",
        "safeds/ml/classical/regression/_ada_boost/AdaBoost/predict/dataset"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_decision_tree/DecisionTree/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_decision_tree/DecisionTree/__init__/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_decision_tree/DecisionTree/_get_sklearn_regressor",
      "name": "_get_sklearn_regressor",
      "docstring": {
        "description": "Return a new wrapped Regressor from sklearn.\n\nReturns\n-------\nwrapped_regressor: RegressorMixin\n    The sklearn Regressor.",
        "full_docstring": "Return a new wrapped Regressor from sklearn.\n\nReturns\n-------\nwrapped_regressor: RegressorMixin\n    The sklearn Regressor."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_decision_tree/DecisionTree/_get_sklearn_regressor/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_decision_tree/DecisionTree/_get_sklearn_regressor/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_decision_tree/DecisionTree/fit",
      "name": "fit",
      "docstring": {
        "description": "Create a copy of this regressor and fit it with the given training data.\n\nThis regressor is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_regressor : DecisionTree\n    The fitted regressor.\n\nRaises\n------\nLearningError\n    If the training data contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows.",
        "full_docstring": "Create a copy of this regressor and fit it with the given training data.\n\nThis regressor is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_regressor : DecisionTree\n    The fitted regressor.\n\nRaises\n------\nLearningError\n    If the training data contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_decision_tree/DecisionTree/fit/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_decision_tree/DecisionTree/fit/self",
        "safeds/ml/classical/regression/_decision_tree/DecisionTree/fit/training_set"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_decision_tree/DecisionTree/is_fitted",
      "name": "is_fitted",
      "docstring": {
        "description": "Check if the regressor is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the regressor is fitted.",
        "full_docstring": "Check if the regressor is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the regressor is fitted."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_decision_tree/DecisionTree/is_fitted/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_decision_tree/DecisionTree/is_fitted/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_decision_tree/DecisionTree/predict",
      "name": "predict",
      "docstring": {
        "description": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows.",
        "full_docstring": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_decision_tree/DecisionTree/predict/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_decision_tree/DecisionTree/predict/self",
        "safeds/ml/classical/regression/_decision_tree/DecisionTree/predict/dataset"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/__init__/self",
        "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/__init__/alpha",
        "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/__init__/lasso_ratio"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/_get_sklearn_regressor",
      "name": "_get_sklearn_regressor",
      "docstring": {
        "description": "Return a new wrapped Regressor from sklearn.\n\nReturns\n-------\nwrapped_regressor: RegressorMixin\n    The sklearn Regressor.",
        "full_docstring": "Return a new wrapped Regressor from sklearn.\n\nReturns\n-------\nwrapped_regressor: RegressorMixin\n    The sklearn Regressor."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/_get_sklearn_regressor/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/_get_sklearn_regressor/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/alpha",
      "name": "alpha",
      "docstring": {
        "description": "Get the regularization of the model.\n\nReturns\n-------\nresult: float\n    The regularization of the model.",
        "full_docstring": "Get the regularization of the model.\n\nReturns\n-------\nresult: float\n    The regularization of the model."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/alpha/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/alpha/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/fit",
      "name": "fit",
      "docstring": {
        "description": "Create a copy of this regressor and fit it with the given training data.\n\nThis regressor is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_regressor : ElasticNetRegression\n    The fitted regressor.\n\nRaises\n------\nLearningError\n    If the training data contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows.",
        "full_docstring": "Create a copy of this regressor and fit it with the given training data.\n\nThis regressor is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_regressor : ElasticNetRegression\n    The fitted regressor.\n\nRaises\n------\nLearningError\n    If the training data contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/fit/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/fit/self",
        "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/fit/training_set"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/is_fitted",
      "name": "is_fitted",
      "docstring": {
        "description": "Check if the regressor is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the regressor is fitted.",
        "full_docstring": "Check if the regressor is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the regressor is fitted."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/is_fitted/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/is_fitted/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/lasso_ratio",
      "name": "lasso_ratio",
      "docstring": {
        "description": "Get the ratio between Lasso and Ridge regularization.\n\nReturns\n-------\nresult: float\n    The ratio between Lasso and Ridge regularization.",
        "full_docstring": "Get the ratio between Lasso and Ridge regularization.\n\nReturns\n-------\nresult: float\n    The ratio between Lasso and Ridge regularization."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/lasso_ratio/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/lasso_ratio/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/predict",
      "name": "predict",
      "docstring": {
        "description": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows.",
        "full_docstring": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/predict/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/predict/self",
        "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/predict/dataset"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/__init__/self",
        "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/__init__/number_of_trees",
        "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/__init__/learning_rate"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/_get_sklearn_regressor",
      "name": "_get_sklearn_regressor",
      "docstring": {
        "description": "Return a new wrapped Regressor from sklearn.\n\nReturns\n-------\nwrapped_regressor: RegressorMixin\n    The sklearn Regressor.",
        "full_docstring": "Return a new wrapped Regressor from sklearn.\n\nReturns\n-------\nwrapped_regressor: RegressorMixin\n    The sklearn Regressor."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/_get_sklearn_regressor/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/_get_sklearn_regressor/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/fit",
      "name": "fit",
      "docstring": {
        "description": "Create a copy of this regressor and fit it with the given training data.\n\nThis regressor is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_regressor : GradientBoosting\n    The fitted regressor.\n\nRaises\n------\nLearningError\n    If the training data contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows.",
        "full_docstring": "Create a copy of this regressor and fit it with the given training data.\n\nThis regressor is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_regressor : GradientBoosting\n    The fitted regressor.\n\nRaises\n------\nLearningError\n    If the training data contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/fit/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/fit/self",
        "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/fit/training_set"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/is_fitted",
      "name": "is_fitted",
      "docstring": {
        "description": "Check if the regressor is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the regressor is fitted.",
        "full_docstring": "Check if the regressor is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the regressor is fitted."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/is_fitted/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/is_fitted/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/learning_rate",
      "name": "learning_rate",
      "docstring": {
        "description": "Get the learning rate.\n\nReturns\n-------\nresult: float\n    The learning rate.",
        "full_docstring": "Get the learning rate.\n\nReturns\n-------\nresult: float\n    The learning rate."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/learning_rate/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/learning_rate/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/number_of_trees",
      "name": "number_of_trees",
      "docstring": {
        "description": "Get the number of trees (estimators) in the ensemble.\n\nReturns\n-------\nresult: int\n    The number of trees.",
        "full_docstring": "Get the number of trees (estimators) in the ensemble.\n\nReturns\n-------\nresult: int\n    The number of trees."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/number_of_trees/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/number_of_trees/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/predict",
      "name": "predict",
      "docstring": {
        "description": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows.",
        "full_docstring": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/predict/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/predict/self",
        "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/predict/dataset"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/__init__/self",
        "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/__init__/number_of_neighbors"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/_get_sklearn_regressor",
      "name": "_get_sklearn_regressor",
      "docstring": {
        "description": "Return a new wrapped Regressor from sklearn.\n\nReturns\n-------\nwrapped_regressor: RegressorMixin\n    The sklearn Regressor.",
        "full_docstring": "Return a new wrapped Regressor from sklearn.\n\nReturns\n-------\nwrapped_regressor: RegressorMixin\n    The sklearn Regressor."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/_get_sklearn_regressor/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/_get_sklearn_regressor/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/fit",
      "name": "fit",
      "docstring": {
        "description": "Create a copy of this regressor and fit it with the given training data.\n\nThis regressor is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_regressor : KNearestNeighbors\n    The fitted regressor.\n\nRaises\n------\nValueError\n    If `number_of_neighbors` is greater than the sample size.\nLearningError\n    If the training data contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows.",
        "full_docstring": "Create a copy of this regressor and fit it with the given training data.\n\nThis regressor is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_regressor : KNearestNeighbors\n    The fitted regressor.\n\nRaises\n------\nValueError\n    If `number_of_neighbors` is greater than the sample size.\nLearningError\n    If the training data contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/fit/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/fit/self",
        "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/fit/training_set"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/is_fitted",
      "name": "is_fitted",
      "docstring": {
        "description": "Check if the regressor is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the regressor is fitted.",
        "full_docstring": "Check if the regressor is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the regressor is fitted."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/is_fitted/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/is_fitted/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/number_of_neighbors",
      "name": "number_of_neighbors",
      "docstring": {
        "description": "Get the number of neighbors used for interpolation.\n\nReturns\n-------\nresult: int\n    The number of neighbors.",
        "full_docstring": "Get the number of neighbors used for interpolation.\n\nReturns\n-------\nresult: int\n    The number of neighbors."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/number_of_neighbors/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/number_of_neighbors/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/predict",
      "name": "predict",
      "docstring": {
        "description": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows.",
        "full_docstring": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/predict/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/predict/self",
        "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/predict/dataset"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_lasso_regression/LassoRegression/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_lasso_regression/LassoRegression/__init__/self",
        "safeds/ml/classical/regression/_lasso_regression/LassoRegression/__init__/alpha"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_lasso_regression/LassoRegression/_get_sklearn_regressor",
      "name": "_get_sklearn_regressor",
      "docstring": {
        "description": "Return a new wrapped Regressor from sklearn.\n\nReturns\n-------\nwrapped_regressor: RegressorMixin\n    The sklearn Regressor.",
        "full_docstring": "Return a new wrapped Regressor from sklearn.\n\nReturns\n-------\nwrapped_regressor: RegressorMixin\n    The sklearn Regressor."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_lasso_regression/LassoRegression/_get_sklearn_regressor/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_lasso_regression/LassoRegression/_get_sklearn_regressor/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_lasso_regression/LassoRegression/alpha",
      "name": "alpha",
      "docstring": {
        "description": "Get the regularization of the model.\n\nReturns\n-------\nresult: float\n    The regularization of the model.",
        "full_docstring": "Get the regularization of the model.\n\nReturns\n-------\nresult: float\n    The regularization of the model."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/ml/classical/regression/_lasso_regression/LassoRegression/alpha/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_lasso_regression/LassoRegression/alpha/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_lasso_regression/LassoRegression/fit",
      "name": "fit",
      "docstring": {
        "description": "Create a copy of this regressor and fit it with the given training data.\n\nThis regressor is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_regressor : LassoRegression\n    The fitted regressor.\n\nRaises\n------\nLearningError\n    If the training data contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows.",
        "full_docstring": "Create a copy of this regressor and fit it with the given training data.\n\nThis regressor is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_regressor : LassoRegression\n    The fitted regressor.\n\nRaises\n------\nLearningError\n    If the training data contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_lasso_regression/LassoRegression/fit/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_lasso_regression/LassoRegression/fit/self",
        "safeds/ml/classical/regression/_lasso_regression/LassoRegression/fit/training_set"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_lasso_regression/LassoRegression/is_fitted",
      "name": "is_fitted",
      "docstring": {
        "description": "Check if the regressor is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the regressor is fitted.",
        "full_docstring": "Check if the regressor is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the regressor is fitted."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_lasso_regression/LassoRegression/is_fitted/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_lasso_regression/LassoRegression/is_fitted/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_lasso_regression/LassoRegression/predict",
      "name": "predict",
      "docstring": {
        "description": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows.",
        "full_docstring": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_lasso_regression/LassoRegression/predict/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_lasso_regression/LassoRegression/predict/self",
        "safeds/ml/classical/regression/_lasso_regression/LassoRegression/predict/dataset"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_linear_regression/LinearRegression/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_linear_regression/LinearRegression/__init__/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_linear_regression/LinearRegression/_get_sklearn_regressor",
      "name": "_get_sklearn_regressor",
      "docstring": {
        "description": "Return a new wrapped Regressor from sklearn.\n\nReturns\n-------\nwrapped_regressor: RegressorMixin\n    The sklearn Regressor.",
        "full_docstring": "Return a new wrapped Regressor from sklearn.\n\nReturns\n-------\nwrapped_regressor: RegressorMixin\n    The sklearn Regressor."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_linear_regression/LinearRegression/_get_sklearn_regressor/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_linear_regression/LinearRegression/_get_sklearn_regressor/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_linear_regression/LinearRegression/fit",
      "name": "fit",
      "docstring": {
        "description": "Create a copy of this regressor and fit it with the given training data.\n\nThis regressor is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_regressor : LinearRegression\n    The fitted regressor.\n\nRaises\n------\nLearningError\n    If the training data contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows.",
        "full_docstring": "Create a copy of this regressor and fit it with the given training data.\n\nThis regressor is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_regressor : LinearRegression\n    The fitted regressor.\n\nRaises\n------\nLearningError\n    If the training data contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_linear_regression/LinearRegression/fit/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_linear_regression/LinearRegression/fit/self",
        "safeds/ml/classical/regression/_linear_regression/LinearRegression/fit/training_set"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_linear_regression/LinearRegression/is_fitted",
      "name": "is_fitted",
      "docstring": {
        "description": "Check if the regressor is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the regressor is fitted.",
        "full_docstring": "Check if the regressor is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the regressor is fitted."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_linear_regression/LinearRegression/is_fitted/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_linear_regression/LinearRegression/is_fitted/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_linear_regression/LinearRegression/predict",
      "name": "predict",
      "docstring": {
        "description": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows.",
        "full_docstring": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_linear_regression/LinearRegression/predict/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_linear_regression/LinearRegression/predict/self",
        "safeds/ml/classical/regression/_linear_regression/LinearRegression/predict/dataset"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_random_forest/RandomForest/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_random_forest/RandomForest/__init__/self",
        "safeds/ml/classical/regression/_random_forest/RandomForest/__init__/number_of_trees"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_random_forest/RandomForest/_get_sklearn_regressor",
      "name": "_get_sklearn_regressor",
      "docstring": {
        "description": "Return a new wrapped Regressor from sklearn.\n\nReturns\n-------\nwrapped_regressor: RegressorMixin\n    The sklearn Regressor.",
        "full_docstring": "Return a new wrapped Regressor from sklearn.\n\nReturns\n-------\nwrapped_regressor: RegressorMixin\n    The sklearn Regressor."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_random_forest/RandomForest/_get_sklearn_regressor/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_random_forest/RandomForest/_get_sklearn_regressor/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_random_forest/RandomForest/fit",
      "name": "fit",
      "docstring": {
        "description": "Create a copy of this regressor and fit it with the given training data.\n\nThis regressor is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_regressor : RandomForest\n    The fitted regressor.\n\nRaises\n------\nLearningError\n    If the training data contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows.",
        "full_docstring": "Create a copy of this regressor and fit it with the given training data.\n\nThis regressor is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_regressor : RandomForest\n    The fitted regressor.\n\nRaises\n------\nLearningError\n    If the training data contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_random_forest/RandomForest/fit/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_random_forest/RandomForest/fit/self",
        "safeds/ml/classical/regression/_random_forest/RandomForest/fit/training_set"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_random_forest/RandomForest/is_fitted",
      "name": "is_fitted",
      "docstring": {
        "description": "Check if the regressor is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the regressor is fitted.",
        "full_docstring": "Check if the regressor is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the regressor is fitted."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_random_forest/RandomForest/is_fitted/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_random_forest/RandomForest/is_fitted/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_random_forest/RandomForest/number_of_trees",
      "name": "number_of_trees",
      "docstring": {
        "description": "Get the number of trees used in the random forest.\n\nReturns\n-------\nresult: int\n    The number of trees.",
        "full_docstring": "Get the number of trees used in the random forest.\n\nReturns\n-------\nresult: int\n    The number of trees."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/ml/classical/regression/_random_forest/RandomForest/number_of_trees/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_random_forest/RandomForest/number_of_trees/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_random_forest/RandomForest/predict",
      "name": "predict",
      "docstring": {
        "description": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows.",
        "full_docstring": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_random_forest/RandomForest/predict/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_random_forest/RandomForest/predict/self",
        "safeds/ml/classical/regression/_random_forest/RandomForest/predict/dataset"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_regressor/Regressor/_get_sklearn_regressor",
      "name": "_get_sklearn_regressor",
      "docstring": {
        "description": "Return a new wrapped Regressor from sklearn.\n\nReturns\n-------\nwrapped_regressor: RegressorMixin\n    The sklearn Regressor.",
        "full_docstring": "Return a new wrapped Regressor from sklearn.\n\nReturns\n-------\nwrapped_regressor: RegressorMixin\n    The sklearn Regressor."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_regressor/Regressor/_get_sklearn_regressor/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_regressor/Regressor/_get_sklearn_regressor/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_regressor/Regressor/fit",
      "name": "fit",
      "docstring": {
        "description": "Create a copy of this regressor and fit it with the given training data.\n\nThis regressor is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_regressor : Regressor\n    The fitted regressor.\n\nRaises\n------\nLearningError\n    If the training data contains invalid values or if the training failed.",
        "full_docstring": "Create a copy of this regressor and fit it with the given training data.\n\nThis regressor is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_regressor : Regressor\n    The fitted regressor.\n\nRaises\n------\nLearningError\n    If the training data contains invalid values or if the training failed."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_regressor/Regressor/fit/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_regressor/Regressor/fit/self",
        "safeds/ml/classical/regression/_regressor/Regressor/fit/training_set"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_regressor/Regressor/is_fitted",
      "name": "is_fitted",
      "docstring": {
        "description": "Check if the classifier is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the regressor is fitted.",
        "full_docstring": "Check if the classifier is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the regressor is fitted."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_regressor/Regressor/is_fitted/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_regressor/Regressor/is_fitted/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_regressor/Regressor/mean_absolute_error",
      "name": "mean_absolute_error",
      "docstring": {
        "description": "Compute the mean absolute error (MAE) of the regressor on the given data.\n\nParameters\n----------\nvalidation_or_test_set : TaggedTable\n    The validation or test set.\n\nReturns\n-------\nmean_absolute_error : float\n    The calculated mean absolute error (the average of the distance of each individual row).\n\nRaises\n------\nUntaggedTableError\n    If the table is untagged.",
        "full_docstring": "Compute the mean absolute error (MAE) of the regressor on the given data.\n\nParameters\n----------\nvalidation_or_test_set : TaggedTable\n    The validation or test set.\n\nReturns\n-------\nmean_absolute_error : float\n    The calculated mean absolute error (the average of the distance of each individual row).\n\nRaises\n------\nUntaggedTableError\n    If the table is untagged."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_regressor/Regressor/mean_absolute_error/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_regressor/Regressor/mean_absolute_error/self",
        "safeds/ml/classical/regression/_regressor/Regressor/mean_absolute_error/validation_or_test_set"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_regressor/Regressor/mean_squared_error",
      "name": "mean_squared_error",
      "docstring": {
        "description": "Compute the mean squared error (MSE) on the given data.\n\nParameters\n----------\nvalidation_or_test_set : TaggedTable\n    The validation or test set.\n\nReturns\n-------\nmean_squared_error : float\n    The calculated mean squared error (the average of the distance of each individual row squared).\n\nRaises\n------\nUntaggedTableError\n    If the table is untagged.",
        "full_docstring": "Compute the mean squared error (MSE) on the given data.\n\nParameters\n----------\nvalidation_or_test_set : TaggedTable\n    The validation or test set.\n\nReturns\n-------\nmean_squared_error : float\n    The calculated mean squared error (the average of the distance of each individual row squared).\n\nRaises\n------\nUntaggedTableError\n    If the table is untagged."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_regressor/Regressor/mean_squared_error/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_regressor/Regressor/mean_squared_error/self",
        "safeds/ml/classical/regression/_regressor/Regressor/mean_squared_error/validation_or_test_set"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_regressor/Regressor/predict",
      "name": "predict",
      "docstring": {
        "description": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.",
        "full_docstring": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_regressor/Regressor/predict/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_regressor/Regressor/predict/self",
        "safeds/ml/classical/regression/_regressor/Regressor/predict/dataset"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_regressor/_check_metrics_preconditions",
      "name": "_check_metrics_preconditions",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [],
      "parameters": [
        "safeds/ml/classical/regression/_regressor/_check_metrics_preconditions/actual",
        "safeds/ml/classical/regression/_regressor/_check_metrics_preconditions/expected"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/__init__/self",
        "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/__init__/alpha"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/_get_sklearn_regressor",
      "name": "_get_sklearn_regressor",
      "docstring": {
        "description": "Return a new wrapped Regressor from sklearn.\n\nReturns\n-------\nwrapped_regressor: RegressorMixin\n    The sklearn Regressor.",
        "full_docstring": "Return a new wrapped Regressor from sklearn.\n\nReturns\n-------\nwrapped_regressor: RegressorMixin\n    The sklearn Regressor."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/_get_sklearn_regressor/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/_get_sklearn_regressor/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/alpha",
      "name": "alpha",
      "docstring": {
        "description": "Get the regularization of the model.\n\nReturns\n-------\nresult: float\n    The regularization of the model.",
        "full_docstring": "Get the regularization of the model.\n\nReturns\n-------\nresult: float\n    The regularization of the model."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/alpha/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/alpha/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/fit",
      "name": "fit",
      "docstring": {
        "description": "Create a copy of this regressor and fit it with the given training data.\n\nThis regressor is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_regressor : RidgeRegression\n    The fitted regressor.\n\nRaises\n------\nLearningError\n    If the training data contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows.",
        "full_docstring": "Create a copy of this regressor and fit it with the given training data.\n\nThis regressor is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_regressor : RidgeRegression\n    The fitted regressor.\n\nRaises\n------\nLearningError\n    If the training data contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/fit/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/fit/self",
        "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/fit/training_set"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/is_fitted",
      "name": "is_fitted",
      "docstring": {
        "description": "Check if the regressor is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the regressor is fitted.",
        "full_docstring": "Check if the regressor is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the regressor is fitted."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/is_fitted/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/is_fitted/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/predict",
      "name": "predict",
      "docstring": {
        "description": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows.",
        "full_docstring": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/predict/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/predict/self",
        "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/predict/dataset"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/Linear/get_sklearn_kernel",
      "name": "get_sklearn_kernel",
      "docstring": {
        "description": "Get the name of the linear kernel.\n\nReturns\n-------\nresult: str\n    The name of the linear kernel.",
        "full_docstring": "Get the name of the linear kernel.\n\nReturns\n-------\nresult: str\n    The name of the linear kernel."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/Linear/get_sklearn_kernel/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/Linear/get_sklearn_kernel/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial/__init__/self",
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial/__init__/degree"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial/get_sklearn_kernel",
      "name": "get_sklearn_kernel",
      "docstring": {
        "description": "Get the name of the polynomial kernel.\n\nReturns\n-------\nresult: str\n    The name of the polynomial kernel.",
        "full_docstring": "Get the name of the polynomial kernel.\n\nReturns\n-------\nresult: str\n    The name of the polynomial kernel."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial/get_sklearn_kernel/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial/get_sklearn_kernel/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/RadialBasisFunction/get_sklearn_kernel",
      "name": "get_sklearn_kernel",
      "docstring": {
        "description": "Get the name of the radial basis function (RBF) kernel.\n\nReturns\n-------\nresult: str\n    The name of the RBF kernel.",
        "full_docstring": "Get the name of the radial basis function (RBF) kernel.\n\nReturns\n-------\nresult: str\n    The name of the RBF kernel."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/RadialBasisFunction/get_sklearn_kernel/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/RadialBasisFunction/get_sklearn_kernel/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/Sigmoid/get_sklearn_kernel",
      "name": "get_sklearn_kernel",
      "docstring": {
        "description": "Get the name of the sigmoid kernel.\n\nReturns\n-------\nresult: str\n    The name of the sigmoid kernel.",
        "full_docstring": "Get the name of the sigmoid kernel.\n\nReturns\n-------\nresult: str\n    The name of the sigmoid kernel."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/Sigmoid/get_sklearn_kernel/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/Sigmoid/get_sklearn_kernel/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/__init__",
      "name": "__init__",
      "docstring": {
        "description": "",
        "full_docstring": ""
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/__init__/self",
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/__init__/c",
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/__init__/kernel"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/_get_kernel_name",
      "name": "_get_kernel_name",
      "docstring": {
        "description": "Get the name of the kernel.\n\nReturns\n-------\nresult: str\n    The name of the kernel.\n\nRaises\n------\nTypeError\n    If the kernel type is invalid.",
        "full_docstring": "Get the name of the kernel.\n\nReturns\n-------\nresult: str\n    The name of the kernel.\n\nRaises\n------\nTypeError\n    If the kernel type is invalid."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/_get_kernel_name/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/_get_kernel_name/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/_get_sklearn_regressor",
      "name": "_get_sklearn_regressor",
      "docstring": {
        "description": "Return a new wrapped Regressor from sklearn.\n\nReturns\n-------\nwrapped_regressor: RegressorMixin\n    The sklearn Regressor.",
        "full_docstring": "Return a new wrapped Regressor from sklearn.\n\nReturns\n-------\nwrapped_regressor: RegressorMixin\n    The sklearn Regressor."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/_get_sklearn_regressor/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/_get_sklearn_regressor/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/c",
      "name": "c",
      "docstring": {
        "description": "Get the regularization strength.\n\nReturns\n-------\nresult: float\n    The regularization strength.",
        "full_docstring": "Get the regularization strength.\n\nReturns\n-------\nresult: float\n    The regularization strength."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/c/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/c/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/fit",
      "name": "fit",
      "docstring": {
        "description": "Create a copy of this regressor and fit it with the given training data.\n\nThis regressor is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_regressor : SupportVectorMachine\n    The fitted regressor.\n\nRaises\n------\nLearningError\n    If the training data contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows.",
        "full_docstring": "Create a copy of this regressor and fit it with the given training data.\n\nThis regressor is not modified.\n\nParameters\n----------\ntraining_set : TaggedTable\n    The training data containing the feature and target vectors.\n\nReturns\n-------\nfitted_regressor : SupportVectorMachine\n    The fitted regressor.\n\nRaises\n------\nLearningError\n    If the training data contains invalid values or if the training failed.\nUntaggedTableError\n    If the table is untagged.\nNonNumericColumnError\n    If the training data contains non-numerical values.\nMissingValuesColumnError\n    If the training data contains missing values.\nDatasetMissesDataError\n    If the training data contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/fit/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/fit/self",
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/fit/training_set"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/is_fitted",
      "name": "is_fitted",
      "docstring": {
        "description": "Check if the regressor is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the regressor is fitted.",
        "full_docstring": "Check if the regressor is fitted.\n\nReturns\n-------\nis_fitted : bool\n    Whether the regressor is fitted."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/is_fitted/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/is_fitted/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/kernel",
      "name": "kernel",
      "docstring": {
        "description": "Get the type of kernel used.\n\nReturns\n-------\nresult: SupportVectorMachineKernel | None\n    The type of kernel used.",
        "full_docstring": "Get the type of kernel used.\n\nReturns\n-------\nresult: SupportVectorMachineKernel | None\n    The type of kernel used."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": true,
      "results": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/kernel/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/kernel/self"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/predict",
      "name": "predict",
      "docstring": {
        "description": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows.",
        "full_docstring": "Predict a target vector using a dataset containing feature vectors. The model has to be trained first.\n\nParameters\n----------\ndataset : Table\n    The dataset containing the feature vectors.\n\nReturns\n-------\ntable : TaggedTable\n    A dataset containing the given feature vectors and the predicted target vector.\n\nRaises\n------\nModelNotFittedError\n    If the model has not been fitted yet.\nDatasetContainsTargetError\n    If the dataset contains the target column already.\nDatasetMissesFeaturesError\n    If the dataset misses feature columns.\nPredictionError\n    If predicting with the given dataset failed.\nNonNumericColumnError\n    If the dataset contains non-numerical values.\nMissingValuesColumnError\n    If the dataset contains missing values.\nDatasetMissesDataError\n    If the dataset contains no rows."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/predict/result_1"
      ],
      "reexported_by": [
        "safeds/ml/classical/regression",
        "safeds/ml/classical/classification"
      ],
      "parameters": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/predict/self",
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/predict/dataset"
      ]
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachineKernel/get_sklearn_kernel",
      "name": "get_sklearn_kernel",
      "docstring": {
        "description": "Get the kernel of the given SupportVectorMachine.\n\nReturns\n-------\nobject\nThe kernel of the SupportVectorMachine.",
        "full_docstring": "Get the kernel of the given SupportVectorMachine.\n\nReturns\n-------\nobject\nThe kernel of the SupportVectorMachine."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachineKernel/get_sklearn_kernel/result_1"
      ],
      "reexported_by": [],
      "parameters": [
        "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachineKernel/get_sklearn_kernel/self"
      ]
    },
    {
      "id": "safeds/ml/hyperparameters/_choice/Choice/__contains__",
      "name": "__contains__",
      "docstring": {
        "description": "Check if a value is in this choice.\n\nParameters\n----------\nvalue: Any\n    The value to check.\n\nReturns\n-------\nis_in_choice : bool\n    Whether the value is in this choice.",
        "full_docstring": "Check if a value is in this choice.\n\nParameters\n----------\nvalue: Any\n    The value to check.\n\nReturns\n-------\nis_in_choice : bool\n    Whether the value is in this choice."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/hyperparameters/_choice/Choice/__contains__/result_1"
      ],
      "reexported_by": [
        "safeds/ml/hyperparameters"
      ],
      "parameters": [
        "safeds/ml/hyperparameters/_choice/Choice/__contains__/self",
        "safeds/ml/hyperparameters/_choice/Choice/__contains__/value"
      ]
    },
    {
      "id": "safeds/ml/hyperparameters/_choice/Choice/__init__",
      "name": "__init__",
      "docstring": {
        "description": "Create a new choice.\n\nParameters\n----------\n*args: tuple[T, ...]\n    The values to choose from.",
        "full_docstring": "Create a new choice.\n\nParameters\n----------\n*args: tuple[T, ...]\n    The values to choose from."
      },
      "is_public": true,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [],
      "reexported_by": [
        "safeds/ml/hyperparameters"
      ],
      "parameters": [
        "safeds/ml/hyperparameters/_choice/Choice/__init__/self",
        "safeds/ml/hyperparameters/_choice/Choice/__init__/args"
      ]
    },
    {
      "id": "safeds/ml/hyperparameters/_choice/Choice/__iter__",
      "name": "__iter__",
      "docstring": {
        "description": "Iterate over the values of this choice.\n\nReturns\n-------\niterator : Iterator[T]\n    An iterator over the values of this choice.",
        "full_docstring": "Iterate over the values of this choice.\n\nReturns\n-------\niterator : Iterator[T]\n    An iterator over the values of this choice."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/hyperparameters/_choice/Choice/__iter__/result_1"
      ],
      "reexported_by": [
        "safeds/ml/hyperparameters"
      ],
      "parameters": [
        "safeds/ml/hyperparameters/_choice/Choice/__iter__/self"
      ]
    },
    {
      "id": "safeds/ml/hyperparameters/_choice/Choice/__len__",
      "name": "__len__",
      "docstring": {
        "description": "Get the number of values in this choice.\n\nReturns\n-------\nnumber_of_values : int\n    The number of values in this choice.",
        "full_docstring": "Get the number of values in this choice.\n\nReturns\n-------\nnumber_of_values : int\n    The number of values in this choice."
      },
      "is_public": false,
      "is_static": false,
      "is_class_method": false,
      "is_property": false,
      "results": [
        "safeds/ml/hyperparameters/_choice/Choice/__len__/result_1"
      ],
      "reexported_by": [
        "safeds/ml/hyperparameters"
      ],
      "parameters": [
        "safeds/ml/hyperparameters/_choice/Choice/__len__/self"
      ]
    }
  ],
  "results": [
    {
      "id": "reference/generate_reference_pages/list_class_and_function_names_in_module/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/config/_device/_get_device/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Device",
        "qname": "torch.types.Device"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/__eq__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/__sizeof__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/_repr_jpeg_/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "bytes",
            "qname": "builtins.bytes"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/_repr_png_/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bytes",
        "qname": "builtins.bytes"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/_set_device/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Image",
        "qname": "safeds.data.image.containers._image.Image"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/add_noise/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Image",
        "qname": "safeds.data.image.containers._image.Image"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/adjust_brightness/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Image",
        "qname": "safeds.data.image.containers._image.Image"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/adjust_color_balance/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Image",
        "qname": "safeds.data.image.containers._image.Image"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/adjust_contrast/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Image",
        "qname": "safeds.data.image.containers._image.Image"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/blur/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Image",
        "qname": "safeds.data.image.containers._image.Image"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/channel/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/convert_to_grayscale/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Image",
        "qname": "safeds.data.image.containers._image.Image"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/crop/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Image",
        "qname": "safeds.data.image.containers._image.Image"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/device/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Device",
        "qname": "torch.types.Device"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/find_edges/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Image",
        "qname": "safeds.data.image.containers._image.Image"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/flip_horizontally/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Image",
        "qname": "safeds.data.image.containers._image.Image"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/flip_vertically/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Image",
        "qname": "safeds.data.image.containers._image.Image"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/from_bytes/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Image",
        "qname": "safeds.data.image.containers._image.Image"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/from_file/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Image",
        "qname": "safeds.data.image.containers._image.Image"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/height/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/invert_colors/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Image",
        "qname": "safeds.data.image.containers._image.Image"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/resize/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Image",
        "qname": "safeds.data.image.containers._image.Image"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/rotate_left/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Image",
        "qname": "safeds.data.image.containers._image.Image"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/rotate_right/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Image",
        "qname": "safeds.data.image.containers._image.Image"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/sharpen/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Image",
        "qname": "safeds.data.image.containers._image.Image"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/width/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/__contains__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/__eq__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/__iter__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Iterator",
        "qname": "typing.Iterator"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/__len__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/__repr__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/__sizeof__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/__str__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/_count_missing_values/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/_from_pandas_series/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Column",
        "qname": "safeds.data.tabular.containers._column.Column"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/_repr_html_/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/all/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/any/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/correlation_with/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/get_unique_values/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "TypeVarType",
            "name": "T",
            "upper_bound": null
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/get_value/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "TypeVarType",
        "name": "T",
        "upper_bound": null
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/has_missing_values/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/idness/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/maximum/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/mean/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/median/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/minimum/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/missing_value_ratio/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/mode/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "TypeVarType",
            "name": "T",
            "upper_bound": null
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/name/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/none/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/number_of_rows/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/plot_boxplot/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Image",
        "qname": "safeds.data.image.containers._image.Image"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/plot_histogram/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Image",
        "qname": "safeds.data.image.containers._image.Image"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/rename/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Column",
        "qname": "safeds.data.tabular.containers._column.Column"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/stability/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/standard_deviation/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/sum/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/to_html/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/transform/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Column",
        "qname": "safeds.data.tabular.containers._column.Column"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/type/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "ColumnType",
        "qname": "safeds.data.tabular.typing._column_type.ColumnType"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/variance/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/__contains__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/__eq__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/__getitem__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Any",
        "qname": "builtins.Any"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/__iter__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Iterator",
        "qname": "typing.Iterator"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/__len__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/__repr__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/__sizeof__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/__str__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/_from_pandas_dataframe/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Row",
        "qname": "safeds.data.tabular.containers._row.Row"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/_repr_html_/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/column_names/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/from_dict/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Row",
        "qname": "safeds.data.tabular.containers._row.Row"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/get_column_type/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "ColumnType",
        "qname": "safeds.data.tabular.typing._column_type.ColumnType"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/get_value/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Any",
        "qname": "builtins.Any"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/has_column/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/number_of_column/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/schema/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Schema",
        "qname": "safeds.data.tabular.typing._schema.Schema"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/sort_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Row",
        "qname": "safeds.data.tabular.containers._row.Row"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/to_dict/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "DictType",
        "key_type": {
          "kind": "NamedType",
          "name": "str",
          "qname": "builtins.str"
        },
        "value_type": {
          "kind": "NamedType",
          "name": "Any",
          "qname": "builtins.Any"
        }
      }
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/to_html/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/__eq__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/__repr__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/__sizeof__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/__str__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/_as_table/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/_from_pandas_dataframe/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/_get_similar_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/_repr_html_/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/add_column/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/add_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/add_row/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/add_rows/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/column_names/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/filter_rows/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/from_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/from_csv_file/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/from_dict/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/from_excel_file/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/from_json_file/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/from_rows/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/get_column/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Column",
        "qname": "safeds.data.tabular.containers._column.Column"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/get_column_type/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "ColumnType",
        "qname": "safeds.data.tabular.typing._column_type.ColumnType"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/get_row/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Row",
        "qname": "safeds.data.tabular.containers._row.Row"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/group_rows_by/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "DictType",
        "key_type": {
          "kind": "TypeVarType",
          "name": "_T",
          "upper_bound": null
        },
        "value_type": {
          "kind": "NamedType",
          "name": "Table",
          "qname": "safeds.data.tabular.containers._table.Table"
        }
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/has_column/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/inverse_transform_table/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/keep_only_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/number_of_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/number_of_rows/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/plot_boxplots/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Image",
        "qname": "safeds.data.image.containers._image.Image"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/plot_correlation_heatmap/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Image",
        "qname": "safeds.data.image.containers._image.Image"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/plot_histograms/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Image",
        "qname": "safeds.data.image.containers._image.Image"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/plot_lineplot/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Image",
        "qname": "safeds.data.image.containers._image.Image"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/plot_scatterplot/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Image",
        "qname": "safeds.data.image.containers._image.Image"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/remove_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/remove_columns_with_missing_values/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/remove_columns_with_non_numerical_values/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/remove_duplicate_rows/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/remove_rows_with_missing_values/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/remove_rows_with_outliers/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/rename_column/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/replace_column/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/schema/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Schema",
        "qname": "safeds.data.tabular.typing._schema.Schema"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/shuffle_rows/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/slice_rows/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/sort_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/sort_rows/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/split_rows/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/split_rows/result_2",
      "name": "result_2",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/summarize_statistics/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/tag_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/time_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TimeSeries",
        "qname": "safeds.data.tabular.containers._time_series.TimeSeries"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/to_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "Column",
            "qname": "safeds.data.tabular.containers._column.Column"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/to_dict/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "DictType",
        "key_type": {
          "kind": "NamedType",
          "name": "str",
          "qname": "builtins.str"
        },
        "value_type": {
          "kind": "ListType",
          "types": [
            {
              "kind": "NamedType",
              "name": "Any",
              "qname": "builtins.Any"
            }
          ]
        }
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/to_html/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/to_rows/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "Row",
            "qname": "safeds.data.tabular.containers._row.Row"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/transform_column/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/transform_table/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/__sizeof__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/_as_table/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/_from_table/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_column/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_column_as_feature/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_columns_as_features/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_row/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_rows/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/features/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/filter_rows/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/keep_only_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_columns_with_missing_values/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_columns_with_non_numerical_values/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_duplicate_rows/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_rows_with_missing_values/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_rows_with_outliers/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/rename_column/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/replace_column/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/shuffle_rows/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/slice_rows/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/sort_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/sort_rows/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/target/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Column",
        "qname": "safeds.data.tabular.containers._column.Column"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/transform_column/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/__sizeof__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/_as_table/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/_from_table_to_time_series/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TimeSeries",
        "qname": "safeds.data.tabular.containers._time_series.TimeSeries"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/_from_tagged_table/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TimeSeries",
        "qname": "safeds.data.tabular.containers._time_series.TimeSeries"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/add_column/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TimeSeries",
        "qname": "safeds.data.tabular.containers._time_series.TimeSeries"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/add_column_as_feature/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TimeSeries",
        "qname": "safeds.data.tabular.containers._time_series.TimeSeries"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/add_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TimeSeries",
        "qname": "safeds.data.tabular.containers._time_series.TimeSeries"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/add_columns_as_features/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TimeSeries",
        "qname": "safeds.data.tabular.containers._time_series.TimeSeries"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/add_row/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TimeSeries",
        "qname": "safeds.data.tabular.containers._time_series.TimeSeries"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/add_rows/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TimeSeries",
        "qname": "safeds.data.tabular.containers._time_series.TimeSeries"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/filter_rows/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TimeSeries",
        "qname": "safeds.data.tabular.containers._time_series.TimeSeries"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/keep_only_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TimeSeries",
        "qname": "safeds.data.tabular.containers._time_series.TimeSeries"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/plot_lagplot/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Image",
        "qname": "safeds.data.image.containers._image.Image"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/remove_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TimeSeries",
        "qname": "safeds.data.tabular.containers._time_series.TimeSeries"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/remove_columns_with_missing_values/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TimeSeries",
        "qname": "safeds.data.tabular.containers._time_series.TimeSeries"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/remove_columns_with_non_numerical_values/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TimeSeries",
        "qname": "safeds.data.tabular.containers._time_series.TimeSeries"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/remove_duplicate_rows/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TimeSeries",
        "qname": "safeds.data.tabular.containers._time_series.TimeSeries"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/remove_rows_with_missing_values/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TimeSeries",
        "qname": "safeds.data.tabular.containers._time_series.TimeSeries"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/remove_rows_with_outliers/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TimeSeries",
        "qname": "safeds.data.tabular.containers._time_series.TimeSeries"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/rename_column/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TimeSeries",
        "qname": "safeds.data.tabular.containers._time_series.TimeSeries"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/replace_column/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TimeSeries",
        "qname": "safeds.data.tabular.containers._time_series.TimeSeries"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/slice_rows/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TimeSeries",
        "qname": "safeds.data.tabular.containers._time_series.TimeSeries"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/sort_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TimeSeries",
        "qname": "safeds.data.tabular.containers._time_series.TimeSeries"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/time/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Column",
        "qname": "safeds.data.tabular.containers._column.Column"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/transform_column/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TimeSeries",
        "qname": "safeds.data.tabular.containers._time_series.TimeSeries"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_discretizer/Discretizer/fit/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Discretizer",
        "qname": "safeds.data.tabular.transformation._discretizer.Discretizer"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_discretizer/Discretizer/get_names_of_added_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_discretizer/Discretizer/get_names_of_changed_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_discretizer/Discretizer/get_names_of_removed_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_discretizer/Discretizer/is_fitted/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_discretizer/Discretizer/transform/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Constant/__str__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Mean/__str__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Median/__str__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Mode/__str__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/fit/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Imputer",
        "qname": "safeds.data.tabular.transformation._imputer.Imputer"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/get_names_of_added_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/get_names_of_changed_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/get_names_of_removed_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/is_fitted/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/transform/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/fit/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "LabelEncoder",
        "qname": "safeds.data.tabular.transformation._label_encoder.LabelEncoder"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/get_names_of_added_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/get_names_of_changed_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/get_names_of_removed_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/inverse_transform/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/is_fitted/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/transform/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/fit/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "OneHotEncoder",
        "qname": "safeds.data.tabular.transformation._one_hot_encoder.OneHotEncoder"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/get_names_of_added_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/get_names_of_changed_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/get_names_of_removed_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/inverse_transform/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/is_fitted/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/transform/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler/fit/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "RangeScaler",
        "qname": "safeds.data.tabular.transformation._range_scaler.RangeScaler"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler/get_names_of_added_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler/get_names_of_changed_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler/get_names_of_removed_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler/inverse_transform/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler/is_fitted/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler/transform/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/fit/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "StandardScaler",
        "qname": "safeds.data.tabular.transformation._standard_scaler.StandardScaler"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/get_names_of_added_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/get_names_of_changed_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/get_names_of_removed_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/inverse_transform/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/is_fitted/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/transform/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/InvertibleTableTransformer/fit/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "InvertibleTableTransformer",
        "qname": "safeds.data.tabular.transformation._table_transformer.InvertibleTableTransformer"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/InvertibleTableTransformer/inverse_transform/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/TableTransformer/fit/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TableTransformer",
        "qname": "safeds.data.tabular.transformation._table_transformer.TableTransformer"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/TableTransformer/fit_and_transform/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/TableTransformer/get_names_of_added_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/TableTransformer/get_names_of_changed_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/TableTransformer/get_names_of_removed_columns/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/TableTransformer/is_fitted/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/TableTransformer/transform/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Anything/__repr__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Anything/is_nullable/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Anything/is_numeric/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Boolean/__repr__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Boolean/is_nullable/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Boolean/is_numeric/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/ColumnType/_data_type/column_type_of_type/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "ColumnType",
        "qname": "safeds.data.tabular.typing._column_type.ColumnType"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/ColumnType/_data_type/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "ColumnType",
        "qname": "safeds.data.tabular.typing._column_type.ColumnType"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/ColumnType/is_nullable/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/ColumnType/is_numeric/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Integer/__repr__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Integer/is_nullable/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Integer/is_numeric/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Nothing/__repr__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Nothing/is_nullable/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Nothing/is_numeric/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/RealNumber/__repr__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/RealNumber/is_nullable/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/RealNumber/is_numeric/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/String/__repr__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/String/is_nullable/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/String/is_numeric/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/__hash__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/__repr__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/__sizeof__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/__str__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/_from_pandas_dataframe/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Schema",
        "qname": "safeds.data.tabular.typing._schema.Schema"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/_repr_markdown_/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/column_names/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/get_column_type/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "ColumnType",
        "qname": "safeds.data.tabular.typing._column_type.ColumnType"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/has_column/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/merge_multiple_schemas/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Schema",
        "qname": "safeds.data.tabular.typing._schema.Schema"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/to_dict/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "DictType",
        "key_type": {
          "kind": "NamedType",
          "name": "str",
          "qname": "builtins.str"
        },
        "value_type": {
          "kind": "NamedType",
          "name": "ColumnType",
          "qname": "safeds.data.tabular.typing._column_type.ColumnType"
        }
      }
    },
    {
      "id": "safeds/exceptions/_data/UnknownColumnNameError/__init__/_UnknownColumnNameErrorMessage/__repr__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/exceptions/_generic/Bound/__str__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/exceptions/_generic/Bound/_check_lower_bound/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/exceptions/_generic/Bound/_check_upper_bound/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/exceptions/_generic/Bound/_str_lower_bound/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/exceptions/_generic/Bound/_str_upper_bound/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/exceptions/_generic/Bound/value/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/exceptions/_generic/ClosedBound/_check_lower_bound/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/exceptions/_generic/ClosedBound/_check_upper_bound/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/exceptions/_generic/ClosedBound/_str_lower_bound/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/exceptions/_generic/ClosedBound/_str_upper_bound/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/exceptions/_generic/OpenBound/__str__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/exceptions/_generic/OpenBound/_check_lower_bound/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/exceptions/_generic/OpenBound/_check_upper_bound/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/exceptions/_generic/OpenBound/_str_lower_bound/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/exceptions/_generic/OpenBound/_str_upper_bound/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/ml/classical/_util_sklearn/predict/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/_get_sklearn_classifier/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "ClassifierMixin",
        "qname": "sklearn.base.ClassifierMixin"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/fit/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "AdaBoost",
        "qname": "safeds.ml.classical.classification._ada_boost.AdaBoost"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/is_fitted/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/learner/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "Classifier",
            "qname": "safeds.ml.classical.classification._classifier.Classifier"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/learning_rate/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/maximum_number_of_learners/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/predict/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_classifier/Classifier/_get_sklearn_classifier/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "ClassifierMixin",
        "qname": "sklearn.base.ClassifierMixin"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_classifier/Classifier/accuracy/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_classifier/Classifier/f1_score/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_classifier/Classifier/fit/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Classifier",
        "qname": "safeds.ml.classical.classification._classifier.Classifier"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_classifier/Classifier/is_fitted/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_classifier/Classifier/precision/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_classifier/Classifier/predict/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_classifier/Classifier/recall/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_decision_tree/DecisionTree/_get_sklearn_classifier/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "ClassifierMixin",
        "qname": "sklearn.base.ClassifierMixin"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_decision_tree/DecisionTree/fit/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "DecisionTree",
        "qname": "safeds.ml.classical.classification._decision_tree.DecisionTree"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_decision_tree/DecisionTree/is_fitted/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_decision_tree/DecisionTree/predict/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/_get_sklearn_classifier/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "ClassifierMixin",
        "qname": "sklearn.base.ClassifierMixin"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/fit/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "GradientBoosting",
        "qname": "safeds.ml.classical.classification._gradient_boosting.GradientBoosting"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/is_fitted/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/learning_rate/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/number_of_trees/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/predict/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/_get_sklearn_classifier/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "ClassifierMixin",
        "qname": "sklearn.base.ClassifierMixin"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/fit/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "KNearestNeighbors",
        "qname": "safeds.ml.classical.classification._k_nearest_neighbors.KNearestNeighbors"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/is_fitted/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/number_of_neighbors/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/predict/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/_get_sklearn_classifier/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "ClassifierMixin",
        "qname": "sklearn.base.ClassifierMixin"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/fit/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "LogisticRegression",
        "qname": "safeds.ml.classical.classification._logistic_regression.LogisticRegression"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/is_fitted/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/predict/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_random_forest/RandomForest/_get_sklearn_classifier/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "ClassifierMixin",
        "qname": "sklearn.base.ClassifierMixin"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_random_forest/RandomForest/fit/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "RandomForest",
        "qname": "safeds.ml.classical.classification._random_forest.RandomForest"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_random_forest/RandomForest/is_fitted/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_random_forest/RandomForest/number_of_trees/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_random_forest/RandomForest/predict/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/Linear/get_sklearn_kernel/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial/get_sklearn_kernel/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/RadialBasisFunction/get_sklearn_kernel/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/Sigmoid/get_sklearn_kernel/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/_get_kernel_name/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/_get_sklearn_classifier/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "ClassifierMixin",
        "qname": "sklearn.base.ClassifierMixin"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/c/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/fit/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "SupportVectorMachine",
        "qname": "safeds.ml.classical.classification._support_vector_machine.SupportVectorMachine"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/is_fitted/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/kernel/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "SupportVectorMachineKernel",
            "qname": "safeds.ml.classical.classification._support_vector_machine.SupportVectorMachineKernel"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/predict/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachineKernel/get_sklearn_kernel/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "object",
        "qname": "builtins.object"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/_get_sklearn_regressor/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "RegressorMixin",
        "qname": "sklearn.base.RegressorMixin"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/fit/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "AdaBoost",
        "qname": "safeds.ml.classical.regression._ada_boost.AdaBoost"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/is_fitted/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/learner/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "Regressor",
            "qname": "safeds.ml.classical.regression._regressor.Regressor"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/learning_rate/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/maximum_number_of_learners/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/predict/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_decision_tree/DecisionTree/_get_sklearn_regressor/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "RegressorMixin",
        "qname": "sklearn.base.RegressorMixin"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_decision_tree/DecisionTree/fit/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "DecisionTree",
        "qname": "safeds.ml.classical.regression._decision_tree.DecisionTree"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_decision_tree/DecisionTree/is_fitted/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_decision_tree/DecisionTree/predict/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/_get_sklearn_regressor/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "RegressorMixin",
        "qname": "sklearn.base.RegressorMixin"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/alpha/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/fit/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "ElasticNetRegression",
        "qname": "safeds.ml.classical.regression._elastic_net_regression.ElasticNetRegression"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/is_fitted/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/lasso_ratio/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/predict/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/_get_sklearn_regressor/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "RegressorMixin",
        "qname": "sklearn.base.RegressorMixin"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/fit/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "GradientBoosting",
        "qname": "safeds.ml.classical.regression._gradient_boosting.GradientBoosting"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/is_fitted/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/learning_rate/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/number_of_trees/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/predict/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/_get_sklearn_regressor/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "RegressorMixin",
        "qname": "sklearn.base.RegressorMixin"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/fit/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "KNearestNeighbors",
        "qname": "safeds.ml.classical.regression._k_nearest_neighbors.KNearestNeighbors"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/is_fitted/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/number_of_neighbors/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/predict/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_lasso_regression/LassoRegression/_get_sklearn_regressor/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "RegressorMixin",
        "qname": "sklearn.base.RegressorMixin"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_lasso_regression/LassoRegression/alpha/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_lasso_regression/LassoRegression/fit/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "LassoRegression",
        "qname": "safeds.ml.classical.regression._lasso_regression.LassoRegression"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_lasso_regression/LassoRegression/is_fitted/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_lasso_regression/LassoRegression/predict/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_linear_regression/LinearRegression/_get_sklearn_regressor/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "RegressorMixin",
        "qname": "sklearn.base.RegressorMixin"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_linear_regression/LinearRegression/fit/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "LinearRegression",
        "qname": "safeds.ml.classical.regression._linear_regression.LinearRegression"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_linear_regression/LinearRegression/is_fitted/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_linear_regression/LinearRegression/predict/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_random_forest/RandomForest/_get_sklearn_regressor/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "RegressorMixin",
        "qname": "sklearn.base.RegressorMixin"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_random_forest/RandomForest/fit/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "RandomForest",
        "qname": "safeds.ml.classical.regression._random_forest.RandomForest"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_random_forest/RandomForest/is_fitted/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_random_forest/RandomForest/number_of_trees/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_random_forest/RandomForest/predict/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_regressor/Regressor/_get_sklearn_regressor/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "RegressorMixin",
        "qname": "sklearn.base.RegressorMixin"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_regressor/Regressor/fit/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Regressor",
        "qname": "safeds.ml.classical.regression._regressor.Regressor"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_regressor/Regressor/is_fitted/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_regressor/Regressor/mean_absolute_error/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_regressor/Regressor/mean_squared_error/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_regressor/Regressor/predict/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/_get_sklearn_regressor/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "RegressorMixin",
        "qname": "sklearn.base.RegressorMixin"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/alpha/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/fit/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "RidgeRegression",
        "qname": "safeds.ml.classical.regression._ridge_regression.RidgeRegression"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/is_fitted/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/predict/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/Linear/get_sklearn_kernel/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial/get_sklearn_kernel/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/RadialBasisFunction/get_sklearn_kernel/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/Sigmoid/get_sklearn_kernel/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/_get_kernel_name/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/_get_sklearn_regressor/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "RegressorMixin",
        "qname": "sklearn.base.RegressorMixin"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/c/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/fit/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "SupportVectorMachine",
        "qname": "safeds.ml.classical.regression._support_vector_machine.SupportVectorMachine"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/is_fitted/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/kernel/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "SupportVectorMachineKernel",
            "qname": "safeds.ml.classical.regression._support_vector_machine.SupportVectorMachineKernel"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/predict/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachineKernel/get_sklearn_kernel/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "object",
        "qname": "builtins.object"
      }
    },
    {
      "id": "safeds/ml/hyperparameters/_choice/Choice/__contains__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/ml/hyperparameters/_choice/Choice/__iter__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "Iterator",
        "qname": "typing.Iterator"
      }
    },
    {
      "id": "safeds/ml/hyperparameters/_choice/Choice/__len__/result_1",
      "name": "result_1",
      "docstring": {
        "type": "",
        "description": ""
      },
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    }
  ],
  "enums": [],
  "enum_instances": [],
  "attributes": [
    {
      "id": "safeds/data/image/containers/_image/Image/_FILTER_EDGES_KERNEL",
      "name": "_FILTER_EDGES_KERNEL",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": true,
      "type": {
        "kind": "NamedType",
        "name": "Any",
        "qname": "builtins.Any"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/_default_device",
      "name": "_default_device",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": true,
      "type": {
        "kind": "NamedType",
        "name": "Device",
        "qname": "torch.types.Device"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/_image_tensor",
      "name": "_image_tensor",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "Tensor",
        "qname": "torch.Tensor"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/_pil_to_tensor",
      "name": "_pil_to_tensor",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": true,
      "type": {
        "kind": "NamedType",
        "name": "Any",
        "qname": "builtins.Any"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/_data",
      "name": "_data",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "pandas",
        "qname": "pandas"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/_name",
      "name": "_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/_type",
      "name": "_type",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "ColumnType",
        "qname": "safeds.data.tabular.typing._column_type.ColumnType"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/_data",
      "name": "_data",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "pandas",
        "qname": "pandas"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/_schema",
      "name": "_schema",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "Schema",
        "qname": "safeds.data.tabular.typing._schema.Schema"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/_T",
      "name": "_T",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": true,
      "type": {
        "kind": "TypeVarType",
        "name": "_T",
        "upper_bound": null
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/_data",
      "name": "_data",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "pandas",
        "qname": "pandas"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/_schema",
      "name": "_schema",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "Schema",
        "qname": "safeds.data.tabular.typing._schema.Schema"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/_features",
      "name": "_features",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/_target",
      "name": "_target",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "Column",
        "qname": "safeds.data.tabular.containers._column.Column"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/_time",
      "name": "_time",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "Column",
        "qname": "safeds.data.tabular.containers._column.Column"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_discretizer/Discretizer/_column_names",
      "name": "_column_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_discretizer/Discretizer/_number_of_bins",
      "name": "_number_of_bins",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_discretizer/Discretizer/_wrapped_transformer",
      "name": "_wrapped_transformer",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "KBinsDiscretizer",
            "qname": "sklearn.preprocessing.KBinsDiscretizer"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Constant/_value",
      "name": "_value",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "Any",
        "qname": "builtins.Any"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/_column_names",
      "name": "_column_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/_strategy",
      "name": "_strategy",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "ImputerStrategy",
        "qname": "safeds.data.tabular.typing._imputer_strategy.ImputerStrategy"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/_wrapped_transformer",
      "name": "_wrapped_transformer",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "SimpleImputer",
            "qname": "sklearn.impute.SimpleImputer"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/_column_names",
      "name": "_column_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/_wrapped_transformer",
      "name": "_wrapped_transformer",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "OrdinalEncoder",
            "qname": "sklearn.preprocessing.OrdinalEncoder"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/_column_names",
      "name": "_column_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "DictType",
            "key_type": {
              "kind": "NamedType",
              "name": "str",
              "qname": "builtins.str"
            },
            "value_type": {
              "kind": "ListType",
              "types": [
                {
                  "kind": "NamedType",
                  "name": "str",
                  "qname": "builtins.str"
                }
              ]
            }
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/_value_to_column",
      "name": "_value_to_column",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "DictType",
            "key_type": {
              "kind": "TupleType",
              "types": [
                {
                  "kind": "NamedType",
                  "name": "str",
                  "qname": "builtins.str"
                },
                {
                  "kind": "NamedType",
                  "name": "Any",
                  "qname": "builtins.Any"
                }
              ]
            },
            "value_type": {
              "kind": "NamedType",
              "name": "str",
              "qname": "builtins.str"
            }
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/_value_to_column_nans",
      "name": "_value_to_column_nans",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "DictType",
            "key_type": {
              "kind": "NamedType",
              "name": "str",
              "qname": "builtins.str"
            },
            "value_type": {
              "kind": "NamedType",
              "name": "str",
              "qname": "builtins.str"
            }
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler/_column_names",
      "name": "_column_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler/_maximum",
      "name": "_maximum",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler/_minimum",
      "name": "_minimum",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler/_wrapped_transformer",
      "name": "_wrapped_transformer",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "MinMaxScaler",
            "qname": "sklearn.preprocessing.MinMaxScaler"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/_column_names",
      "name": "_column_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/_wrapped_transformer",
      "name": "_wrapped_transformer",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "StandardScaler",
            "qname": "sklearn.preprocessing.StandardScaler"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Anything/_is_nullable",
      "name": "_is_nullable",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": true,
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Boolean/_is_nullable",
      "name": "_is_nullable",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": true,
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/ColumnType/_is_nullable",
      "name": "_is_nullable",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": true,
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Integer/_is_nullable",
      "name": "_is_nullable",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": true,
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Nothing/_is_nullable",
      "name": "_is_nullable",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": true,
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/RealNumber/_is_nullable",
      "name": "_is_nullable",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": true,
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/String/_is_nullable",
      "name": "_is_nullable",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": true,
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/_schema",
      "name": "_schema",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": true,
      "type": {
        "kind": "DictType",
        "key_type": {
          "kind": "NamedType",
          "name": "str",
          "qname": "builtins.str"
        },
        "value_type": {
          "kind": "NamedType",
          "name": "ColumnType",
          "qname": "safeds.data.tabular.typing._column_type.ColumnType"
        }
      }
    },
    {
      "id": "safeds/exceptions/_generic/Bound/_value",
      "name": "_value",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/_feature_names",
      "name": "_feature_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/_learner",
      "name": "_learner",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "Classifier",
            "qname": "safeds.ml.classical.classification._classifier.Classifier"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/_learning_rate",
      "name": "_learning_rate",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/_maximum_number_of_learners",
      "name": "_maximum_number_of_learners",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/_target_name",
      "name": "_target_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/_wrapped_classifier",
      "name": "_wrapped_classifier",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "AdaBoostClassifier",
            "qname": "sklearn.ensemble.AdaBoostClassifier"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/classification/_decision_tree/DecisionTree/_feature_names",
      "name": "_feature_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/classification/_decision_tree/DecisionTree/_target_name",
      "name": "_target_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/classification/_decision_tree/DecisionTree/_wrapped_classifier",
      "name": "_wrapped_classifier",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "DecisionTreeClassifier",
            "qname": "sklearn.tree.DecisionTreeClassifier"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/_feature_names",
      "name": "_feature_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/_learning_rate",
      "name": "_learning_rate",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/_number_of_trees",
      "name": "_number_of_trees",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/_target_name",
      "name": "_target_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/_wrapped_classifier",
      "name": "_wrapped_classifier",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "GradientBoostingClassifier",
            "qname": "sklearn.ensemble.GradientBoostingClassifier"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/_feature_names",
      "name": "_feature_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/_number_of_neighbors",
      "name": "_number_of_neighbors",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/_target_name",
      "name": "_target_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/_wrapped_classifier",
      "name": "_wrapped_classifier",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "KNeighborsClassifier",
            "qname": "sklearn.neighbors.KNeighborsClassifier"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/_feature_names",
      "name": "_feature_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/_target_name",
      "name": "_target_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/_wrapped_classifier",
      "name": "_wrapped_classifier",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "LogisticRegression",
            "qname": "sklearn.linear_model.LogisticRegression"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/classification/_random_forest/RandomForest/_feature_names",
      "name": "_feature_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/classification/_random_forest/RandomForest/_number_of_trees",
      "name": "_number_of_trees",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_random_forest/RandomForest/_target_name",
      "name": "_target_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/classification/_random_forest/RandomForest/_wrapped_classifier",
      "name": "_wrapped_classifier",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "RandomForestClassifier",
            "qname": "sklearn.ensemble.RandomForestClassifier"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial/_degree",
      "name": "_degree",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/_c",
      "name": "_c",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/_feature_names",
      "name": "_feature_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/_kernel",
      "name": "_kernel",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "SupportVectorMachineKernel",
            "qname": "safeds.ml.classical.classification._support_vector_machine.SupportVectorMachineKernel"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/_target_name",
      "name": "_target_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/_wrapped_classifier",
      "name": "_wrapped_classifier",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "SVC",
            "qname": "sklearn.svm.SVC"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/_feature_names",
      "name": "_feature_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/_learner",
      "name": "_learner",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "Regressor",
            "qname": "safeds.ml.classical.regression._regressor.Regressor"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/_learning_rate",
      "name": "_learning_rate",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/_maximum_number_of_learners",
      "name": "_maximum_number_of_learners",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/_target_name",
      "name": "_target_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/_wrapped_regressor",
      "name": "_wrapped_regressor",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "AdaBoostRegressor",
            "qname": "sklearn.ensemble.AdaBoostRegressor"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_decision_tree/DecisionTree/_feature_names",
      "name": "_feature_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_decision_tree/DecisionTree/_target_name",
      "name": "_target_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_decision_tree/DecisionTree/_wrapped_regressor",
      "name": "_wrapped_regressor",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "DecisionTreeRegressor",
            "qname": "sklearn.tree.DecisionTreeRegressor"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/_alpha",
      "name": "_alpha",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/_feature_names",
      "name": "_feature_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/_lasso_ratio",
      "name": "_lasso_ratio",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/_target_name",
      "name": "_target_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/_wrapped_regressor",
      "name": "_wrapped_regressor",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "ElasticNet",
            "qname": "sklearn.linear_model.ElasticNet"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/_feature_names",
      "name": "_feature_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/_learning_rate",
      "name": "_learning_rate",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/_number_of_trees",
      "name": "_number_of_trees",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/_target_name",
      "name": "_target_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/_wrapped_regressor",
      "name": "_wrapped_regressor",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "GradientBoostingRegressor",
            "qname": "sklearn.ensemble.GradientBoostingRegressor"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/_feature_names",
      "name": "_feature_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/_number_of_neighbors",
      "name": "_number_of_neighbors",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/_target_name",
      "name": "_target_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/_wrapped_regressor",
      "name": "_wrapped_regressor",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "KNeighborsRegressor",
            "qname": "sklearn.neighbors.KNeighborsRegressor"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_lasso_regression/LassoRegression/_alpha",
      "name": "_alpha",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_lasso_regression/LassoRegression/_feature_names",
      "name": "_feature_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_lasso_regression/LassoRegression/_target_name",
      "name": "_target_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_lasso_regression/LassoRegression/_wrapped_regressor",
      "name": "_wrapped_regressor",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "Lasso",
            "qname": "sklearn.linear_model.Lasso"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_linear_regression/LinearRegression/_feature_names",
      "name": "_feature_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_linear_regression/LinearRegression/_target_name",
      "name": "_target_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_linear_regression/LinearRegression/_wrapped_regressor",
      "name": "_wrapped_regressor",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "LinearRegression",
            "qname": "sklearn.linear_model.LinearRegression"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_random_forest/RandomForest/_feature_names",
      "name": "_feature_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_random_forest/RandomForest/_number_of_trees",
      "name": "_number_of_trees",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_random_forest/RandomForest/_target_name",
      "name": "_target_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_random_forest/RandomForest/_wrapped_regressor",
      "name": "_wrapped_regressor",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "RandomForestRegressor",
            "qname": "sklearn.ensemble.RandomForestRegressor"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/_alpha",
      "name": "_alpha",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/_feature_names",
      "name": "_feature_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/_target_name",
      "name": "_target_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/_wrapped_regressor",
      "name": "_wrapped_regressor",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "Ridge",
            "qname": "sklearn.linear_model.Ridge"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial/_degree",
      "name": "_degree",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/_c",
      "name": "_c",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/_feature_names",
      "name": "_feature_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/_kernel",
      "name": "_kernel",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "SupportVectorMachineKernel",
            "qname": "safeds.ml.classical.regression._support_vector_machine.SupportVectorMachineKernel"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/_target_name",
      "name": "_target_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/_wrapped_regressor",
      "name": "_wrapped_regressor",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "SVR",
            "qname": "sklearn.svm.SVR"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/hyperparameters/_choice/Choice/elements",
      "name": "elements",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_public": false,
      "is_static": false,
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "TypeVarType",
            "name": "T",
            "upper_bound": null
          }
        ]
      }
    }
  ],
  "parameters": [
    {
      "id": "reference/generate_reference_pages/list_class_and_function_names_in_module/module_name",
      "name": "module_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/__eq__/other",
      "name": "other",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_ONLY",
      "type": {
        "kind": "NamedType",
        "name": "object",
        "qname": "builtins.object"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/__eq__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/image/containers/_image/Image/__init__/device",
      "name": "device",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Device",
        "qname": "torch.types.Device"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/__init__/image_tensor",
      "name": "image_tensor",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Tensor",
        "qname": "torch.Tensor"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/image/containers/_image/Image/__sizeof__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/image/containers/_image/Image/_repr_jpeg_/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/image/containers/_image/Image/_repr_png_/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/image/containers/_image/Image/_set_device/device",
      "name": "device",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Device",
        "qname": "torch.types.Device"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/_set_device/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/image/containers/_image/Image/add_noise/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/image/containers/_image/Image/add_noise/standard_deviation",
      "name": "standard_deviation",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/adjust_brightness/factor",
      "name": "factor",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/adjust_brightness/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/image/containers/_image/Image/adjust_color_balance/factor",
      "name": "factor",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/adjust_color_balance/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/image/containers/_image/Image/adjust_contrast/factor",
      "name": "factor",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/adjust_contrast/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/image/containers/_image/Image/blur/radius",
      "name": "radius",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/blur/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/image/containers/_image/Image/channel/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/image/containers/_image/Image/convert_to_grayscale/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/image/containers/_image/Image/crop/height",
      "name": "height",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/crop/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/image/containers/_image/Image/crop/width",
      "name": "width",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/crop/x",
      "name": "x",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/crop/y",
      "name": "y",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/device/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/image/containers/_image/Image/find_edges/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/image/containers/_image/Image/flip_horizontally/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/image/containers/_image/Image/flip_vertically/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/image/containers/_image/Image/from_bytes/data",
      "name": "data",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "bytes",
        "qname": "builtins.bytes"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/from_bytes/device",
      "name": "device",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Device",
        "qname": "torch.types.Device"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/from_file/device",
      "name": "device",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Device",
        "qname": "torch.types.Device"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/from_file/path",
      "name": "path",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          },
          {
            "kind": "NamedType",
            "name": "Path",
            "qname": "pathlib.Path"
          }
        ]
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/height/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/image/containers/_image/Image/invert_colors/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/image/containers/_image/Image/resize/new_height",
      "name": "new_height",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/resize/new_width",
      "name": "new_width",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/resize/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/image/containers/_image/Image/rotate_left/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/image/containers/_image/Image/rotate_right/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/image/containers/_image/Image/sharpen/factor",
      "name": "factor",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/sharpen/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/image/containers/_image/Image/to_jpeg_file/path",
      "name": "path",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          },
          {
            "kind": "NamedType",
            "name": "Path",
            "qname": "pathlib.Path"
          }
        ]
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/to_jpeg_file/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/image/containers/_image/Image/to_png_file/path",
      "name": "path",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          },
          {
            "kind": "NamedType",
            "name": "Path",
            "qname": "pathlib.Path"
          }
        ]
      }
    },
    {
      "id": "safeds/data/image/containers/_image/Image/to_png_file/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/image/containers/_image/Image/width/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/__contains__/item",
      "name": "item",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_ONLY",
      "type": {
        "kind": "NamedType",
        "name": "Any",
        "qname": "builtins.Any"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/__contains__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/__eq__/other",
      "name": "other",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_ONLY",
      "type": {
        "kind": "NamedType",
        "name": "object",
        "qname": "builtins.object"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/__eq__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/__init__/data",
      "name": "data",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "Sequence",
            "qname": "typing.Sequence"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/__init__/name",
      "name": "name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/__iter__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/__len__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/__repr__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/__sizeof__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/__str__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/_count_missing_values/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/_from_pandas_series/data",
      "name": "data",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "pandas",
        "qname": "pandas"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/_from_pandas_series/type_",
      "name": "type_",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "ColumnType",
            "qname": "safeds.data.tabular.typing._column_type.ColumnType"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/_repr_html_/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/all/predicate",
      "name": "predicate",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "CallableType",
        "parameter_types": [
          {
            "kind": "TypeVarType",
            "name": "T",
            "upper_bound": null
          }
        ],
        "return_type": {
          "kind": "NamedType",
          "name": "bool",
          "qname": "builtins.bool"
        }
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/all/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/any/predicate",
      "name": "predicate",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "CallableType",
        "parameter_types": [
          {
            "kind": "TypeVarType",
            "name": "T",
            "upper_bound": null
          }
        ],
        "return_type": {
          "kind": "NamedType",
          "name": "bool",
          "qname": "builtins.bool"
        }
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/any/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/correlation_with/other_column",
      "name": "other_column",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Column",
        "qname": "safeds.data.tabular.containers._column.Column"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/correlation_with/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/get_unique_values/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/get_value/index",
      "name": "index",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/get_value/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/has_missing_values/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/idness/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/maximum/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/mean/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/median/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/minimum/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/missing_value_ratio/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/mode/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/name/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/none/predicate",
      "name": "predicate",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "CallableType",
        "parameter_types": [
          {
            "kind": "TypeVarType",
            "name": "T",
            "upper_bound": null
          }
        ],
        "return_type": {
          "kind": "NamedType",
          "name": "bool",
          "qname": "builtins.bool"
        }
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/none/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/number_of_rows/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/plot_boxplot/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/plot_histogram/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/rename/new_name",
      "name": "new_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/rename/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/stability/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/standard_deviation/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/sum/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/to_html/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/transform/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/transform/transformer",
      "name": "transformer",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "CallableType",
        "parameter_types": [
          {
            "kind": "TypeVarType",
            "name": "T",
            "upper_bound": null
          }
        ],
        "return_type": {
          "kind": "TypeVarType",
          "name": "R",
          "upper_bound": null
        }
      }
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/type/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_column/Column/variance/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/__contains__/obj",
      "name": "obj",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_ONLY",
      "type": {
        "kind": "NamedType",
        "name": "Any",
        "qname": "builtins.Any"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/__contains__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/__eq__/other",
      "name": "other",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_ONLY",
      "type": {
        "kind": "NamedType",
        "name": "object",
        "qname": "builtins.object"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/__eq__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/__getitem__/column_name",
      "name": "column_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_ONLY",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/__getitem__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/__init__/data",
      "name": "data",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "Mapping",
            "qname": "typing.Mapping"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/__iter__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/__len__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/__repr__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/__sizeof__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/__str__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/_from_pandas_dataframe/data",
      "name": "data",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "pandas",
        "qname": "pandas"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/_from_pandas_dataframe/schema",
      "name": "schema",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "Schema",
            "qname": "safeds.data.tabular.typing._schema.Schema"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/_repr_html_/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/column_names/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/from_dict/data",
      "name": "data",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "DictType",
        "key_type": {
          "kind": "NamedType",
          "name": "str",
          "qname": "builtins.str"
        },
        "value_type": {
          "kind": "NamedType",
          "name": "Any",
          "qname": "builtins.Any"
        }
      }
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/get_column_type/column_name",
      "name": "column_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/get_column_type/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/get_value/column_name",
      "name": "column_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/get_value/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/has_column/column_name",
      "name": "column_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/has_column/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/number_of_column/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/schema/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/sort_columns/comparator",
      "name": "comparator",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "CallableType",
        "parameter_types": [
          {
            "kind": "TupleType",
            "types": [
              {
                "kind": "NamedType",
                "name": "Any",
                "qname": "builtins.Any"
              }
            ]
          },
          {
            "kind": "TupleType",
            "types": [
              {
                "kind": "NamedType",
                "name": "Any",
                "qname": "builtins.Any"
              }
            ]
          }
        ],
        "return_type": {
          "kind": "NamedType",
          "name": "int",
          "qname": "builtins.int"
        }
      }
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/sort_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/to_dict/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_row/Row/to_html/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/__dataframe__/allow_copy",
      "name": "allow_copy",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": true,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/__dataframe__/nan_as_null",
      "name": "nan_as_null",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": false,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/__dataframe__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/__eq__/other",
      "name": "other",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_ONLY",
      "type": {
        "kind": "NamedType",
        "name": "object",
        "qname": "builtins.object"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/__eq__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/__init__/data",
      "name": "data",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "Mapping",
            "qname": "typing.Mapping"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/__repr__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/__sizeof__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/__str__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/_as_table/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/_from_pandas_dataframe/data",
      "name": "data",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "pandas",
        "qname": "pandas"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/_from_pandas_dataframe/schema",
      "name": "schema",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "Schema",
            "qname": "safeds.data.tabular.typing._schema.Schema"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/_get_similar_columns/column_name",
      "name": "column_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/_get_similar_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/_repr_html_/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/add_column/column",
      "name": "column",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Column",
        "qname": "safeds.data.tabular.containers._column.Column"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/add_column/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/add_columns/columns",
      "name": "columns",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "Column",
                "qname": "safeds.data.tabular.containers._column.Column"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "Table",
            "qname": "safeds.data.tabular.containers._table.Table"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/add_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/add_row/row",
      "name": "row",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Row",
        "qname": "safeds.data.tabular.containers._row.Row"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/add_row/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/add_rows/rows",
      "name": "rows",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "Row",
                "qname": "safeds.data.tabular.containers._row.Row"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "Table",
            "qname": "safeds.data.tabular.containers._table.Table"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/add_rows/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/column_names/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/filter_rows/query",
      "name": "query",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "CallableType",
        "parameter_types": [
          {
            "kind": "NamedType",
            "name": "Row",
            "qname": "safeds.data.tabular.containers._row.Row"
          }
        ],
        "return_type": {
          "kind": "NamedType",
          "name": "bool",
          "qname": "builtins.bool"
        }
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/filter_rows/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/from_columns/columns",
      "name": "columns",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "Column",
            "qname": "safeds.data.tabular.containers._column.Column"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/from_csv_file/path",
      "name": "path",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          },
          {
            "kind": "NamedType",
            "name": "Path",
            "qname": "pathlib.Path"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/from_dict/data",
      "name": "data",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "DictType",
        "key_type": {
          "kind": "NamedType",
          "name": "str",
          "qname": "builtins.str"
        },
        "value_type": {
          "kind": "ListType",
          "types": [
            {
              "kind": "NamedType",
              "name": "Any",
              "qname": "builtins.Any"
            }
          ]
        }
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/from_excel_file/path",
      "name": "path",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          },
          {
            "kind": "NamedType",
            "name": "Path",
            "qname": "pathlib.Path"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/from_json_file/path",
      "name": "path",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          },
          {
            "kind": "NamedType",
            "name": "Path",
            "qname": "pathlib.Path"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/from_rows/rows",
      "name": "rows",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "Row",
            "qname": "safeds.data.tabular.containers._row.Row"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/get_column/column_name",
      "name": "column_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/get_column/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/get_column_type/column_name",
      "name": "column_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/get_column_type/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/get_row/index",
      "name": "index",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/get_row/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/group_rows_by/key_selector",
      "name": "key_selector",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "CallableType",
        "parameter_types": [
          {
            "kind": "NamedType",
            "name": "Row",
            "qname": "safeds.data.tabular.containers._row.Row"
          }
        ],
        "return_type": {
          "kind": "TypeVarType",
          "name": "_T",
          "upper_bound": null
        }
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/group_rows_by/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/has_column/column_name",
      "name": "column_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/has_column/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/inverse_transform_table/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/inverse_transform_table/transformer",
      "name": "transformer",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "InvertibleTableTransformer",
        "qname": "safeds.data.tabular.transformation._table_transformer.InvertibleTableTransformer"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/keep_only_columns/column_names",
      "name": "column_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/keep_only_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/number_of_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/number_of_rows/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/plot_boxplots/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/plot_correlation_heatmap/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/plot_histograms/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/plot_lineplot/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/plot_lineplot/x_column_name",
      "name": "x_column_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/plot_lineplot/y_column_name",
      "name": "y_column_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/plot_scatterplot/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/plot_scatterplot/x_column_name",
      "name": "x_column_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/plot_scatterplot/y_column_name",
      "name": "y_column_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/remove_columns/column_names",
      "name": "column_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/remove_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/remove_columns_with_missing_values/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/remove_columns_with_non_numerical_values/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/remove_duplicate_rows/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/remove_rows_with_missing_values/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/remove_rows_with_outliers/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/rename_column/new_name",
      "name": "new_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/rename_column/old_name",
      "name": "old_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/rename_column/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/replace_column/new_columns",
      "name": "new_columns",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "Column",
            "qname": "safeds.data.tabular.containers._column.Column"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/replace_column/old_column_name",
      "name": "old_column_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/replace_column/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/schema/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/shuffle_rows/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/slice_rows/end",
      "name": "end",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "int",
            "qname": "builtins.int"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/slice_rows/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/slice_rows/start",
      "name": "start",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "int",
            "qname": "builtins.int"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/slice_rows/step",
      "name": "step",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": 1,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/sort_columns/comparator",
      "name": "comparator",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "CallableType",
        "parameter_types": [
          {
            "kind": "NamedType",
            "name": "Column",
            "qname": "safeds.data.tabular.containers._column.Column"
          },
          {
            "kind": "NamedType",
            "name": "Column",
            "qname": "safeds.data.tabular.containers._column.Column"
          }
        ],
        "return_type": {
          "kind": "NamedType",
          "name": "int",
          "qname": "builtins.int"
        }
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/sort_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/sort_rows/comparator",
      "name": "comparator",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "CallableType",
        "parameter_types": [
          {
            "kind": "NamedType",
            "name": "Row",
            "qname": "safeds.data.tabular.containers._row.Row"
          },
          {
            "kind": "NamedType",
            "name": "Row",
            "qname": "safeds.data.tabular.containers._row.Row"
          }
        ],
        "return_type": {
          "kind": "NamedType",
          "name": "int",
          "qname": "builtins.int"
        }
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/sort_rows/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/split_rows/percentage_in_first",
      "name": "percentage_in_first",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/split_rows/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/summarize_statistics/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/tag_columns/feature_names",
      "name": "feature_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/tag_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/tag_columns/target_name",
      "name": "target_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/time_columns/feature_names",
      "name": "feature_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/time_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/time_columns/target_name",
      "name": "target_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/time_columns/time_name",
      "name": "time_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/to_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/to_csv_file/path",
      "name": "path",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          },
          {
            "kind": "NamedType",
            "name": "Path",
            "qname": "pathlib.Path"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/to_csv_file/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/to_dict/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/to_excel_file/path",
      "name": "path",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          },
          {
            "kind": "NamedType",
            "name": "Path",
            "qname": "pathlib.Path"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/to_excel_file/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/to_html/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/to_json_file/path",
      "name": "path",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          },
          {
            "kind": "NamedType",
            "name": "Path",
            "qname": "pathlib.Path"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/to_json_file/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/to_rows/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/transform_column/name",
      "name": "name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/transform_column/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/transform_column/transformer",
      "name": "transformer",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "CallableType",
        "parameter_types": [
          {
            "kind": "NamedType",
            "name": "Row",
            "qname": "safeds.data.tabular.containers._row.Row"
          }
        ],
        "return_type": {
          "kind": "NamedType",
          "name": "Any",
          "qname": "builtins.Any"
        }
      }
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/transform_table/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_table/Table/transform_table/transformer",
      "name": "transformer",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "TableTransformer",
        "qname": "safeds.data.tabular.transformation._table_transformer.TableTransformer"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/__init__/data",
      "name": "data",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Mapping",
        "qname": "typing.Mapping"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/__init__/feature_names",
      "name": "feature_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/__init__/target_name",
      "name": "target_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/__sizeof__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/_as_table/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/_from_table/feature_names",
      "name": "feature_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/_from_table/table",
      "name": "table",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/_from_table/target_name",
      "name": "target_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_column/column",
      "name": "column",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Column",
        "qname": "safeds.data.tabular.containers._column.Column"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_column/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_column_as_feature/column",
      "name": "column",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Column",
        "qname": "safeds.data.tabular.containers._column.Column"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_column_as_feature/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_columns/columns",
      "name": "columns",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "Column",
                "qname": "safeds.data.tabular.containers._column.Column"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "Table",
            "qname": "safeds.data.tabular.containers._table.Table"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_columns_as_features/columns",
      "name": "columns",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "Column",
                "qname": "safeds.data.tabular.containers._column.Column"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "Table",
            "qname": "safeds.data.tabular.containers._table.Table"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_columns_as_features/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_row/row",
      "name": "row",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Row",
        "qname": "safeds.data.tabular.containers._row.Row"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_row/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_rows/rows",
      "name": "rows",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "Row",
                "qname": "safeds.data.tabular.containers._row.Row"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "Table",
            "qname": "safeds.data.tabular.containers._table.Table"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/add_rows/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/features/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/filter_rows/query",
      "name": "query",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "CallableType",
        "parameter_types": [
          {
            "kind": "NamedType",
            "name": "Row",
            "qname": "safeds.data.tabular.containers._row.Row"
          }
        ],
        "return_type": {
          "kind": "NamedType",
          "name": "bool",
          "qname": "builtins.bool"
        }
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/filter_rows/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/keep_only_columns/column_names",
      "name": "column_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/keep_only_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_columns/column_names",
      "name": "column_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_columns_with_missing_values/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_columns_with_non_numerical_values/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_duplicate_rows/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_rows_with_missing_values/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/remove_rows_with_outliers/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/rename_column/new_name",
      "name": "new_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/rename_column/old_name",
      "name": "old_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/rename_column/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/replace_column/new_columns",
      "name": "new_columns",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "Column",
            "qname": "safeds.data.tabular.containers._column.Column"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/replace_column/old_column_name",
      "name": "old_column_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/replace_column/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/shuffle_rows/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/slice_rows/end",
      "name": "end",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "int",
            "qname": "builtins.int"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/slice_rows/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/slice_rows/start",
      "name": "start",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "int",
            "qname": "builtins.int"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/slice_rows/step",
      "name": "step",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": 1,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/sort_columns/comparator",
      "name": "comparator",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "CallableType",
        "parameter_types": [
          {
            "kind": "NamedType",
            "name": "Column",
            "qname": "safeds.data.tabular.containers._column.Column"
          },
          {
            "kind": "NamedType",
            "name": "Column",
            "qname": "safeds.data.tabular.containers._column.Column"
          }
        ],
        "return_type": {
          "kind": "NamedType",
          "name": "int",
          "qname": "builtins.int"
        }
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/sort_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/sort_rows/comparator",
      "name": "comparator",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "CallableType",
        "parameter_types": [
          {
            "kind": "NamedType",
            "name": "Row",
            "qname": "safeds.data.tabular.containers._row.Row"
          },
          {
            "kind": "NamedType",
            "name": "Row",
            "qname": "safeds.data.tabular.containers._row.Row"
          }
        ],
        "return_type": {
          "kind": "NamedType",
          "name": "int",
          "qname": "builtins.int"
        }
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/sort_rows/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/target/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/transform_column/name",
      "name": "name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/transform_column/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_tagged_table/TaggedTable/transform_column/transformer",
      "name": "transformer",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "CallableType",
        "parameter_types": [
          {
            "kind": "NamedType",
            "name": "Row",
            "qname": "safeds.data.tabular.containers._row.Row"
          }
        ],
        "return_type": {
          "kind": "NamedType",
          "name": "Any",
          "qname": "builtins.Any"
        }
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/__init__/data",
      "name": "data",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Mapping",
        "qname": "typing.Mapping"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/__init__/feature_names",
      "name": "feature_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/__init__/target_name",
      "name": "target_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/__init__/time_name",
      "name": "time_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/__sizeof__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/_as_table/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": {
        "kind": "NamedType",
        "name": "TimeSeries",
        "qname": "safeds.data.tabular.containers._time_series.TimeSeries"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/_from_table_to_time_series/feature_names",
      "name": "feature_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/_from_table_to_time_series/table",
      "name": "table",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/_from_table_to_time_series/target_name",
      "name": "target_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/_from_table_to_time_series/time_name",
      "name": "time_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/_from_tagged_table/tagged_table",
      "name": "tagged_table",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/_from_tagged_table/time_name",
      "name": "time_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/add_column/column",
      "name": "column",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Column",
        "qname": "safeds.data.tabular.containers._column.Column"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/add_column/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/add_column_as_feature/column",
      "name": "column",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Column",
        "qname": "safeds.data.tabular.containers._column.Column"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/add_column_as_feature/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/add_columns/columns",
      "name": "columns",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "Column",
                "qname": "safeds.data.tabular.containers._column.Column"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "Table",
            "qname": "safeds.data.tabular.containers._table.Table"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/add_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/add_columns_as_features/columns",
      "name": "columns",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "Column",
                "qname": "safeds.data.tabular.containers._column.Column"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "Table",
            "qname": "safeds.data.tabular.containers._table.Table"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/add_columns_as_features/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/add_row/row",
      "name": "row",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Row",
        "qname": "safeds.data.tabular.containers._row.Row"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/add_row/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/add_rows/rows",
      "name": "rows",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "Row",
                "qname": "safeds.data.tabular.containers._row.Row"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "Table",
            "qname": "safeds.data.tabular.containers._table.Table"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/add_rows/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/filter_rows/query",
      "name": "query",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "CallableType",
        "parameter_types": [
          {
            "kind": "NamedType",
            "name": "Row",
            "qname": "safeds.data.tabular.containers._row.Row"
          }
        ],
        "return_type": {
          "kind": "NamedType",
          "name": "bool",
          "qname": "builtins.bool"
        }
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/filter_rows/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/keep_only_columns/column_names",
      "name": "column_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/keep_only_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/plot_lagplot/lag",
      "name": "lag",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/plot_lagplot/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/remove_columns/column_names",
      "name": "column_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/remove_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/remove_columns_with_missing_values/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/remove_columns_with_non_numerical_values/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/remove_duplicate_rows/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/remove_rows_with_missing_values/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/remove_rows_with_outliers/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/rename_column/new_name",
      "name": "new_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/rename_column/old_name",
      "name": "old_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/rename_column/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/replace_column/new_columns",
      "name": "new_columns",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "Column",
            "qname": "safeds.data.tabular.containers._column.Column"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/replace_column/old_column_name",
      "name": "old_column_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/replace_column/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/slice_rows/end",
      "name": "end",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "int",
            "qname": "builtins.int"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/slice_rows/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/slice_rows/start",
      "name": "start",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "int",
            "qname": "builtins.int"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/slice_rows/step",
      "name": "step",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": 1,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/sort_columns/comparator",
      "name": "comparator",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "CallableType",
        "parameter_types": [
          {
            "kind": "NamedType",
            "name": "Column",
            "qname": "safeds.data.tabular.containers._column.Column"
          },
          {
            "kind": "NamedType",
            "name": "Column",
            "qname": "safeds.data.tabular.containers._column.Column"
          }
        ],
        "return_type": {
          "kind": "NamedType",
          "name": "int",
          "qname": "builtins.int"
        }
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/sort_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/time/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/transform_column/name",
      "name": "name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/transform_column/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/containers/_time_series/TimeSeries/transform_column/transformer",
      "name": "transformer",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "CallableType",
        "parameter_types": [
          {
            "kind": "NamedType",
            "name": "Row",
            "qname": "safeds.data.tabular.containers._row.Row"
          }
        ],
        "return_type": {
          "kind": "NamedType",
          "name": "Any",
          "qname": "builtins.Any"
        }
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_discretizer/Discretizer/__init__/number_of_bins",
      "name": "number_of_bins",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": 5,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_discretizer/Discretizer/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_discretizer/Discretizer/fit/column_names",
      "name": "column_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_discretizer/Discretizer/fit/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_discretizer/Discretizer/fit/table",
      "name": "table",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_discretizer/Discretizer/get_names_of_added_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_discretizer/Discretizer/get_names_of_changed_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_discretizer/Discretizer/get_names_of_removed_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_discretizer/Discretizer/is_fitted/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_discretizer/Discretizer/transform/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_discretizer/Discretizer/transform/table",
      "name": "table",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Constant/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Constant/__init__/value",
      "name": "value",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Any",
        "qname": "builtins.Any"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Constant/__str__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Constant/_augment_imputer/imputer",
      "name": "imputer",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "SimpleImputer",
        "qname": "sklearn.impute.SimpleImputer"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Constant/_augment_imputer/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Mean/__str__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Mean/_augment_imputer/imputer",
      "name": "imputer",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "SimpleImputer",
        "qname": "sklearn.impute.SimpleImputer"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Mean/_augment_imputer/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Median/__str__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Median/_augment_imputer/imputer",
      "name": "imputer",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "SimpleImputer",
        "qname": "sklearn.impute.SimpleImputer"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Median/_augment_imputer/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Mode/__str__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Mode/_augment_imputer/imputer",
      "name": "imputer",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "SimpleImputer",
        "qname": "sklearn.impute.SimpleImputer"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/Strategy/Mode/_augment_imputer/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/__init__/strategy",
      "name": "strategy",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "ImputerStrategy",
        "qname": "safeds.data.tabular.typing._imputer_strategy.ImputerStrategy"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/fit/column_names",
      "name": "column_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/fit/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/fit/table",
      "name": "table",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/get_names_of_added_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/get_names_of_changed_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/get_names_of_removed_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/is_fitted/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/transform/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_imputer/Imputer/transform/table",
      "name": "table",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/fit/column_names",
      "name": "column_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/fit/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/fit/table",
      "name": "table",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/get_names_of_added_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/get_names_of_changed_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/get_names_of_removed_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/inverse_transform/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/inverse_transform/transformed_table",
      "name": "transformed_table",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/is_fitted/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/transform/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_label_encoder/LabelEncoder/transform/table",
      "name": "table",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/fit/column_names",
      "name": "column_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/fit/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/fit/table",
      "name": "table",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/get_names_of_added_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/get_names_of_changed_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/get_names_of_removed_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/inverse_transform/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/inverse_transform/transformed_table",
      "name": "transformed_table",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/is_fitted/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/transform/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_one_hot_encoder/OneHotEncoder/transform/table",
      "name": "table",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler/__init__/maximum",
      "name": "maximum",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": 1.0,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler/__init__/minimum",
      "name": "minimum",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": 0.0,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler/fit/column_names",
      "name": "column_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler/fit/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler/fit/table",
      "name": "table",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler/get_names_of_added_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler/get_names_of_changed_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler/get_names_of_removed_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler/inverse_transform/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler/inverse_transform/transformed_table",
      "name": "transformed_table",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler/is_fitted/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler/transform/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_range_scaler/RangeScaler/transform/table",
      "name": "table",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/fit/column_names",
      "name": "column_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/fit/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/fit/table",
      "name": "table",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/get_names_of_added_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/get_names_of_changed_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/get_names_of_removed_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/inverse_transform/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/inverse_transform/transformed_table",
      "name": "transformed_table",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/is_fitted/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/transform/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_standard_scaler/StandardScaler/transform/table",
      "name": "table",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/InvertibleTableTransformer/fit/column_names",
      "name": "column_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/InvertibleTableTransformer/fit/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/InvertibleTableTransformer/fit/table",
      "name": "table",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/InvertibleTableTransformer/inverse_transform/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/InvertibleTableTransformer/inverse_transform/transformed_table",
      "name": "transformed_table",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/TableTransformer/fit/column_names",
      "name": "column_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/TableTransformer/fit/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/TableTransformer/fit/table",
      "name": "table",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/TableTransformer/fit_and_transform/column_names",
      "name": "column_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/TableTransformer/fit_and_transform/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/TableTransformer/fit_and_transform/table",
      "name": "table",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/TableTransformer/get_names_of_added_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/TableTransformer/get_names_of_changed_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/TableTransformer/get_names_of_removed_columns/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/TableTransformer/is_fitted/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/TableTransformer/transform/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/transformation/_table_transformer/TableTransformer/transform/table",
      "name": "table",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Anything/__init__/is_nullable",
      "name": "is_nullable",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": false,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Anything/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Anything/__mypy-replace/_is_nullable",
      "name": "_is_nullable",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "NAME_ONLY",
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Anything/__repr__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Anything/is_nullable/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Anything/is_numeric/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Boolean/__init__/is_nullable",
      "name": "is_nullable",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": false,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Boolean/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Boolean/__mypy-replace/_is_nullable",
      "name": "_is_nullable",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "NAME_ONLY",
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Boolean/__repr__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Boolean/is_nullable/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Boolean/is_numeric/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/ColumnType/__init__/is_nullable",
      "name": "is_nullable",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": false,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/ColumnType/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/ColumnType/_data_type/column_type_of_type/cell_type",
      "name": "cell_type",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Any",
        "qname": "builtins.Any"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/ColumnType/_data_type/data",
      "name": "data",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "pandas",
        "qname": "pandas"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/ColumnType/is_nullable/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/ColumnType/is_numeric/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Integer/__init__/is_nullable",
      "name": "is_nullable",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": false,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Integer/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Integer/__mypy-replace/_is_nullable",
      "name": "_is_nullable",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "NAME_ONLY",
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Integer/__repr__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Integer/is_nullable/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Integer/is_numeric/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Nothing/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Nothing/__mypy-replace/_is_nullable",
      "name": "_is_nullable",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "NAME_ONLY",
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Nothing/__repr__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Nothing/is_nullable/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/Nothing/is_numeric/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/RealNumber/__init__/is_nullable",
      "name": "is_nullable",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": false,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/RealNumber/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/RealNumber/__mypy-replace/_is_nullable",
      "name": "_is_nullable",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "NAME_ONLY",
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/RealNumber/__repr__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/RealNumber/is_nullable/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/RealNumber/is_numeric/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/String/__init__/is_nullable",
      "name": "is_nullable",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": false,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/String/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/String/__mypy-replace/_is_nullable",
      "name": "_is_nullable",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "NAME_ONLY",
      "type": {
        "kind": "NamedType",
        "name": "bool",
        "qname": "builtins.bool"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/String/__repr__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/String/is_nullable/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_column_type/String/is_numeric/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_imputer_strategy/ImputerStrategy/_augment_imputer/imputer",
      "name": "imputer",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "SimpleImputer",
        "qname": "sklearn.impute.SimpleImputer"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_imputer_strategy/ImputerStrategy/_augment_imputer/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/__hash__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/__init__/schema",
      "name": "schema",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "DictType",
        "key_type": {
          "kind": "NamedType",
          "name": "str",
          "qname": "builtins.str"
        },
        "value_type": {
          "kind": "NamedType",
          "name": "ColumnType",
          "qname": "safeds.data.tabular.typing._column_type.ColumnType"
        }
      }
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/__mypy-replace/_schema",
      "name": "_schema",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "NAME_ONLY",
      "type": {
        "kind": "DictType",
        "key_type": {
          "kind": "NamedType",
          "name": "str",
          "qname": "builtins.str"
        },
        "value_type": {
          "kind": "NamedType",
          "name": "ColumnType",
          "qname": "safeds.data.tabular.typing._column_type.ColumnType"
        }
      }
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/__repr__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/__sizeof__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/__str__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/_from_pandas_dataframe/dataframe",
      "name": "dataframe",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "pandas",
        "qname": "pandas"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/_repr_markdown_/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/column_names/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/get_column_type/column_name",
      "name": "column_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/get_column_type/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/has_column/column_name",
      "name": "column_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/has_column/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/merge_multiple_schemas/schemas",
      "name": "schemas",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "Schema",
            "qname": "safeds.data.tabular.typing._schema.Schema"
          }
        ]
      }
    },
    {
      "id": "safeds/data/tabular/typing/_schema/Schema/to_dict/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_data/ColumnIsTargetError/__init__/column_name",
      "name": "column_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/exceptions/_data/ColumnIsTargetError/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_data/ColumnIsTimeError/__init__/column_name",
      "name": "column_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/exceptions/_data/ColumnIsTimeError/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_data/ColumnLengthMismatchError/__init__/column_info",
      "name": "column_info",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/exceptions/_data/ColumnLengthMismatchError/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_data/ColumnSizeError/__init__/actual_size",
      "name": "actual_size",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/exceptions/_data/ColumnSizeError/__init__/expected_size",
      "name": "expected_size",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/exceptions/_data/ColumnSizeError/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_data/DuplicateColumnNameError/__init__/column_name",
      "name": "column_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/exceptions/_data/DuplicateColumnNameError/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_data/IllegalFormatError/__init__/formats",
      "name": "formats",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/exceptions/_data/IllegalFormatError/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_data/IllegalSchemaModificationError/__init__/msg",
      "name": "msg",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/exceptions/_data/IllegalSchemaModificationError/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_data/IndexOutOfBoundsError/__init__/index",
      "name": "index",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "int",
            "qname": "builtins.int"
          },
          {
            "kind": "NamedType",
            "name": "slice",
            "qname": "builtins.slice"
          }
        ]
      }
    },
    {
      "id": "safeds/exceptions/_data/IndexOutOfBoundsError/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_data/MissingValuesColumnError/__init__/column_info",
      "name": "column_info",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/exceptions/_data/MissingValuesColumnError/__init__/help_msg",
      "name": "help_msg",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/exceptions/_data/MissingValuesColumnError/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_data/NonNumericColumnError/__init__/column_info",
      "name": "column_info",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/exceptions/_data/NonNumericColumnError/__init__/help_msg",
      "name": "help_msg",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/exceptions/_data/NonNumericColumnError/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_data/TransformerNotFittedError/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_data/UnknownColumnNameError/__init__/_UnknownColumnNameErrorMessage/__repr__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_data/UnknownColumnNameError/__init__/column_names",
      "name": "column_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/exceptions/_data/UnknownColumnNameError/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_data/UnknownColumnNameError/__init__/similar_columns",
      "name": "similar_columns",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/exceptions/_data/ValueNotPresentWhenFittedError/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_data/ValueNotPresentWhenFittedError/__init__/values",
      "name": "values",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "TupleType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              },
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          }
        ]
      }
    },
    {
      "id": "safeds/exceptions/_data/WrongFileExtensionError/__init__/file",
      "name": "file",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          },
          {
            "kind": "NamedType",
            "name": "Path",
            "qname": "pathlib.Path"
          }
        ]
      }
    },
    {
      "id": "safeds/exceptions/_data/WrongFileExtensionError/__init__/file_extension",
      "name": "file_extension",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          },
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          }
        ]
      }
    },
    {
      "id": "safeds/exceptions/_data/WrongFileExtensionError/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_generic/Bound/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_generic/Bound/__init__/value",
      "name": "value",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/exceptions/_generic/Bound/__str__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_generic/Bound/_check_lower_bound/actual",
      "name": "actual",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/exceptions/_generic/Bound/_check_lower_bound/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_generic/Bound/_check_upper_bound/actual",
      "name": "actual",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/exceptions/_generic/Bound/_check_upper_bound/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_generic/Bound/_str_lower_bound/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_generic/Bound/_str_upper_bound/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_generic/Bound/value/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_generic/ClosedBound/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_generic/ClosedBound/__init__/value",
      "name": "value",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/exceptions/_generic/ClosedBound/_check_lower_bound/actual",
      "name": "actual",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/exceptions/_generic/ClosedBound/_check_lower_bound/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_generic/ClosedBound/_check_upper_bound/actual",
      "name": "actual",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/exceptions/_generic/ClosedBound/_check_upper_bound/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_generic/ClosedBound/_str_lower_bound/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_generic/ClosedBound/_str_upper_bound/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_generic/OpenBound/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_generic/OpenBound/__init__/value",
      "name": "value",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/exceptions/_generic/OpenBound/__str__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_generic/OpenBound/_check_lower_bound/actual",
      "name": "actual",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/exceptions/_generic/OpenBound/_check_lower_bound/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_generic/OpenBound/_check_upper_bound/actual",
      "name": "actual",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/exceptions/_generic/OpenBound/_check_upper_bound/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_generic/OpenBound/_str_lower_bound/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_generic/OpenBound/_str_upper_bound/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_generic/OutOfBoundsError/__init__/actual",
      "name": "actual",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/exceptions/_generic/OutOfBoundsError/__init__/lower_bound",
      "name": "lower_bound",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": null,
      "assigned_by": "NAME_ONLY",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "Bound",
            "qname": "safeds.exceptions._generic.Bound"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/exceptions/_generic/OutOfBoundsError/__init__/name",
      "name": "name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": null,
      "assigned_by": "NAME_ONLY",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/exceptions/_generic/OutOfBoundsError/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_generic/OutOfBoundsError/__init__/upper_bound",
      "name": "upper_bound",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": null,
      "assigned_by": "NAME_ONLY",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "Bound",
            "qname": "safeds.exceptions._generic.Bound"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/exceptions/_ml/DatasetContainsTargetError/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_ml/DatasetContainsTargetError/__init__/target_name",
      "name": "target_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/exceptions/_ml/DatasetMissesDataError/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_ml/DatasetMissesFeaturesError/__init__/missing_feature_names",
      "name": "missing_feature_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "ListType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          }
        ]
      }
    },
    {
      "id": "safeds/exceptions/_ml/DatasetMissesFeaturesError/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_ml/LearningError/__init__/reason",
      "name": "reason",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/exceptions/_ml/LearningError/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_ml/ModelNotFittedError/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_ml/PredictionError/__init__/reason",
      "name": "reason",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "str",
        "qname": "builtins.str"
      }
    },
    {
      "id": "safeds/exceptions/_ml/PredictionError/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/exceptions/_ml/UntaggedTableError/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/_util_sklearn/fit/model",
      "name": "model",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Any",
        "qname": "builtins.Any"
      }
    },
    {
      "id": "safeds/ml/classical/_util_sklearn/fit/tagged_table",
      "name": "tagged_table",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/_util_sklearn/predict/dataset",
      "name": "dataset",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/ml/classical/_util_sklearn/predict/feature_names",
      "name": "feature_names",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "ListType",
            "types": [
              {
                "kind": "NamedType",
                "name": "str",
                "qname": "builtins.str"
              }
            ]
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/_util_sklearn/predict/model",
      "name": "model",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Any",
        "qname": "builtins.Any"
      }
    },
    {
      "id": "safeds/ml/classical/_util_sklearn/predict/target_name",
      "name": "target_name",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "str",
            "qname": "builtins.str"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/__init__/learner",
      "name": "learner",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": null,
      "assigned_by": "NAME_ONLY",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "Classifier",
            "qname": "safeds.ml.classical.classification._classifier.Classifier"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/__init__/learning_rate",
      "name": "learning_rate",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": 1.0,
      "assigned_by": "NAME_ONLY",
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/__init__/maximum_number_of_learners",
      "name": "maximum_number_of_learners",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": 50,
      "assigned_by": "NAME_ONLY",
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/_get_sklearn_classifier/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/fit/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/fit/training_set",
      "name": "training_set",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/is_fitted/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/learner/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/learning_rate/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/maximum_number_of_learners/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/predict/dataset",
      "name": "dataset",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_ada_boost/AdaBoost/predict/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_classifier/Classifier/_get_sklearn_classifier/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_classifier/Classifier/accuracy/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_classifier/Classifier/accuracy/validation_or_test_set",
      "name": "validation_or_test_set",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_classifier/Classifier/f1_score/positive_class",
      "name": "positive_class",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Any",
        "qname": "builtins.Any"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_classifier/Classifier/f1_score/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_classifier/Classifier/f1_score/validation_or_test_set",
      "name": "validation_or_test_set",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_classifier/Classifier/fit/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_classifier/Classifier/fit/training_set",
      "name": "training_set",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_classifier/Classifier/is_fitted/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_classifier/Classifier/precision/positive_class",
      "name": "positive_class",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Any",
        "qname": "builtins.Any"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_classifier/Classifier/precision/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_classifier/Classifier/precision/validation_or_test_set",
      "name": "validation_or_test_set",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_classifier/Classifier/predict/dataset",
      "name": "dataset",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_classifier/Classifier/predict/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_classifier/Classifier/recall/positive_class",
      "name": "positive_class",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Any",
        "qname": "builtins.Any"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_classifier/Classifier/recall/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_classifier/Classifier/recall/validation_or_test_set",
      "name": "validation_or_test_set",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_decision_tree/DecisionTree/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_decision_tree/DecisionTree/_get_sklearn_classifier/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_decision_tree/DecisionTree/fit/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_decision_tree/DecisionTree/fit/training_set",
      "name": "training_set",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_decision_tree/DecisionTree/is_fitted/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_decision_tree/DecisionTree/predict/dataset",
      "name": "dataset",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_decision_tree/DecisionTree/predict/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/__init__/learning_rate",
      "name": "learning_rate",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": 0.1,
      "assigned_by": "NAME_ONLY",
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/__init__/number_of_trees",
      "name": "number_of_trees",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": 100,
      "assigned_by": "NAME_ONLY",
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/_get_sklearn_classifier/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/fit/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/fit/training_set",
      "name": "training_set",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/is_fitted/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/learning_rate/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/number_of_trees/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/predict/dataset",
      "name": "dataset",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_gradient_boosting/GradientBoosting/predict/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/__init__/number_of_neighbors",
      "name": "number_of_neighbors",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/_get_sklearn_classifier/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/fit/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/fit/training_set",
      "name": "training_set",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/is_fitted/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/number_of_neighbors/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/predict/dataset",
      "name": "dataset",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_k_nearest_neighbors/KNearestNeighbors/predict/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/_get_sklearn_classifier/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/fit/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/fit/training_set",
      "name": "training_set",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/is_fitted/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/predict/dataset",
      "name": "dataset",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_logistic_regression/LogisticRegression/predict/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_random_forest/RandomForest/__init__/number_of_trees",
      "name": "number_of_trees",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": 100,
      "assigned_by": "NAME_ONLY",
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_random_forest/RandomForest/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_random_forest/RandomForest/_get_sklearn_classifier/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_random_forest/RandomForest/fit/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_random_forest/RandomForest/fit/training_set",
      "name": "training_set",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_random_forest/RandomForest/is_fitted/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_random_forest/RandomForest/number_of_trees/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_random_forest/RandomForest/predict/dataset",
      "name": "dataset",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_random_forest/RandomForest/predict/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/Linear/get_sklearn_kernel/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial/__init__/degree",
      "name": "degree",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial/get_sklearn_kernel/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/RadialBasisFunction/get_sklearn_kernel/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/Kernel/Sigmoid/get_sklearn_kernel/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/__init__/c",
      "name": "c",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": 1.0,
      "assigned_by": "NAME_ONLY",
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/__init__/kernel",
      "name": "kernel",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": null,
      "assigned_by": "NAME_ONLY",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "SupportVectorMachineKernel",
            "qname": "safeds.ml.classical.classification._support_vector_machine.SupportVectorMachineKernel"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/_get_kernel_name/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/_get_sklearn_classifier/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/c/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/fit/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/fit/training_set",
      "name": "training_set",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/is_fitted/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/kernel/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/predict/dataset",
      "name": "dataset",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachine/predict/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/classification/_support_vector_machine/SupportVectorMachineKernel/get_sklearn_kernel/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/__init__/learner",
      "name": "learner",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": null,
      "assigned_by": "NAME_ONLY",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "Regressor",
            "qname": "safeds.ml.classical.regression._regressor.Regressor"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/__init__/learning_rate",
      "name": "learning_rate",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": 1.0,
      "assigned_by": "NAME_ONLY",
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/__init__/maximum_number_of_learners",
      "name": "maximum_number_of_learners",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": 50,
      "assigned_by": "NAME_ONLY",
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/_get_sklearn_regressor/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/fit/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/fit/training_set",
      "name": "training_set",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/is_fitted/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/learner/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/learning_rate/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/maximum_number_of_learners/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/predict/dataset",
      "name": "dataset",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_ada_boost/AdaBoost/predict/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_decision_tree/DecisionTree/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_decision_tree/DecisionTree/_get_sklearn_regressor/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_decision_tree/DecisionTree/fit/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_decision_tree/DecisionTree/fit/training_set",
      "name": "training_set",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_decision_tree/DecisionTree/is_fitted/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_decision_tree/DecisionTree/predict/dataset",
      "name": "dataset",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_decision_tree/DecisionTree/predict/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/__init__/alpha",
      "name": "alpha",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": 1.0,
      "assigned_by": "NAME_ONLY",
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/__init__/lasso_ratio",
      "name": "lasso_ratio",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": 0.5,
      "assigned_by": "NAME_ONLY",
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/_get_sklearn_regressor/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/alpha/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/fit/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/fit/training_set",
      "name": "training_set",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/is_fitted/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/lasso_ratio/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/predict/dataset",
      "name": "dataset",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_elastic_net_regression/ElasticNetRegression/predict/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/__init__/learning_rate",
      "name": "learning_rate",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": 0.1,
      "assigned_by": "NAME_ONLY",
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/__init__/number_of_trees",
      "name": "number_of_trees",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": 100,
      "assigned_by": "NAME_ONLY",
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/_get_sklearn_regressor/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/fit/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/fit/training_set",
      "name": "training_set",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/is_fitted/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/learning_rate/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/number_of_trees/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/predict/dataset",
      "name": "dataset",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_gradient_boosting/GradientBoosting/predict/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/__init__/number_of_neighbors",
      "name": "number_of_neighbors",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/_get_sklearn_regressor/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/fit/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/fit/training_set",
      "name": "training_set",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/is_fitted/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/number_of_neighbors/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/predict/dataset",
      "name": "dataset",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_k_nearest_neighbors/KNearestNeighbors/predict/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_lasso_regression/LassoRegression/__init__/alpha",
      "name": "alpha",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": 1.0,
      "assigned_by": "NAME_ONLY",
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_lasso_regression/LassoRegression/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_lasso_regression/LassoRegression/_get_sklearn_regressor/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_lasso_regression/LassoRegression/alpha/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_lasso_regression/LassoRegression/fit/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_lasso_regression/LassoRegression/fit/training_set",
      "name": "training_set",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_lasso_regression/LassoRegression/is_fitted/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_lasso_regression/LassoRegression/predict/dataset",
      "name": "dataset",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_lasso_regression/LassoRegression/predict/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_linear_regression/LinearRegression/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_linear_regression/LinearRegression/_get_sklearn_regressor/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_linear_regression/LinearRegression/fit/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_linear_regression/LinearRegression/fit/training_set",
      "name": "training_set",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_linear_regression/LinearRegression/is_fitted/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_linear_regression/LinearRegression/predict/dataset",
      "name": "dataset",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_linear_regression/LinearRegression/predict/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_random_forest/RandomForest/__init__/number_of_trees",
      "name": "number_of_trees",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": 100,
      "assigned_by": "NAME_ONLY",
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_random_forest/RandomForest/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_random_forest/RandomForest/_get_sklearn_regressor/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_random_forest/RandomForest/fit/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_random_forest/RandomForest/fit/training_set",
      "name": "training_set",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_random_forest/RandomForest/is_fitted/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_random_forest/RandomForest/number_of_trees/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_random_forest/RandomForest/predict/dataset",
      "name": "dataset",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_random_forest/RandomForest/predict/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_regressor/Regressor/_get_sklearn_regressor/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_regressor/Regressor/fit/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_regressor/Regressor/fit/training_set",
      "name": "training_set",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_regressor/Regressor/is_fitted/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_regressor/Regressor/mean_absolute_error/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_regressor/Regressor/mean_absolute_error/validation_or_test_set",
      "name": "validation_or_test_set",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_regressor/Regressor/mean_squared_error/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_regressor/Regressor/mean_squared_error/validation_or_test_set",
      "name": "validation_or_test_set",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_regressor/Regressor/predict/dataset",
      "name": "dataset",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_regressor/Regressor/predict/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_regressor/_check_metrics_preconditions/actual",
      "name": "actual",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Column",
        "qname": "safeds.data.tabular.containers._column.Column"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_regressor/_check_metrics_preconditions/expected",
      "name": "expected",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Column",
        "qname": "safeds.data.tabular.containers._column.Column"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/__init__/alpha",
      "name": "alpha",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": 1.0,
      "assigned_by": "NAME_ONLY",
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/_get_sklearn_regressor/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/alpha/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/fit/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/fit/training_set",
      "name": "training_set",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/is_fitted/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/predict/dataset",
      "name": "dataset",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_ridge_regression/RidgeRegression/predict/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/Linear/get_sklearn_kernel/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial/__init__/degree",
      "name": "degree",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "int",
        "qname": "builtins.int"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/Polynomial/get_sklearn_kernel/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/RadialBasisFunction/get_sklearn_kernel/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/Kernel/Sigmoid/get_sklearn_kernel/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/__init__/c",
      "name": "c",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": 1.0,
      "assigned_by": "NAME_ONLY",
      "type": {
        "kind": "NamedType",
        "name": "float",
        "qname": "builtins.float"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/__init__/kernel",
      "name": "kernel",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": true,
      "default_value": null,
      "assigned_by": "NAME_ONLY",
      "type": {
        "kind": "UnionType",
        "types": [
          {
            "kind": "NamedType",
            "name": "SupportVectorMachineKernel",
            "qname": "safeds.ml.classical.regression._support_vector_machine.SupportVectorMachineKernel"
          },
          {
            "kind": "NamedType",
            "name": "None",
            "qname": "builtins.None"
          }
        ]
      }
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/_get_kernel_name/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/_get_sklearn_regressor/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/c/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/fit/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/fit/training_set",
      "name": "training_set",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "TaggedTable",
        "qname": "safeds.data.tabular.containers._tagged_table.TaggedTable"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/is_fitted/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/kernel/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/predict/dataset",
      "name": "dataset",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_OR_NAME",
      "type": {
        "kind": "NamedType",
        "name": "Table",
        "qname": "safeds.data.tabular.containers._table.Table"
      }
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachine/predict/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/classical/regression/_support_vector_machine/SupportVectorMachineKernel/get_sklearn_kernel/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/hyperparameters/_choice/Choice/__contains__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/hyperparameters/_choice/Choice/__contains__/value",
      "name": "value",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITION_ONLY",
      "type": {
        "kind": "NamedType",
        "name": "Any",
        "qname": "builtins.Any"
      }
    },
    {
      "id": "safeds/ml/hyperparameters/_choice/Choice/__init__/args",
      "name": "args",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "POSITIONAL_VARARG",
      "type": {
        "kind": "TupleType",
        "types": [
          {
            "kind": "TypeVarType",
            "name": "T",
            "upper_bound": null
          }
        ]
      }
    },
    {
      "id": "safeds/ml/hyperparameters/_choice/Choice/__init__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/hyperparameters/_choice/Choice/__iter__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    },
    {
      "id": "safeds/ml/hyperparameters/_choice/Choice/__len__/self",
      "name": "self",
      "docstring": {
        "type": "",
        "default_value": "",
        "description": ""
      },
      "is_optional": false,
      "default_value": null,
      "assigned_by": "IMPLICIT",
      "type": null
    }
  ]
}