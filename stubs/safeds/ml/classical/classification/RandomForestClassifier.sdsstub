package safeds.ml.classical.classification

from safeds.ml.classical.classification import Classifier

/**
 * Random forest classification.
 *
 * @param treeCount The number of trees to be used in the random forest. Has to be greater than 0.
 * @param maxDepth The maximum depth of each tree. If None, the depth is not limited. Has to be greater than 0.
 * @param minSampleCountInLeaves The minimum number of samples that must remain in the leaves of each tree. Has to be greater than 0.
 */
class RandomForestClassifier(
    @PythonName("tree_count") treeCount: Int = 100,
    @PythonName("max_depth") maxDepth: Int? = null,
    @PythonName("min_sample_count_in_leaves") minSampleCountInLeaves: Int = 1
) sub Classifier {
    /**
     * The number of trees used in the random forest.
     */
    @PythonName("tree_count") attr treeCount: Int
    /**
     * The maximum depth of each tree.
     */
    @PythonName("max_depth") attr maxDepth: Int?
    /**
     * The minimum number of samples that must remain in the leaves of each tree.
     */
    @PythonName("min_sample_count_in_leaves") attr minSampleCountInLeaves: Int
}
