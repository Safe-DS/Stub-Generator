package safeds.ml.classical.classification

from safeds.data.labeled.containers import TabularDataset
from safeds.data.tabular.containers import Table
from safeds.ml.classical.classification import Classifier

/**
 * Regularized logistic regression.
 */
class LogisticRegressionClassifier() sub Classifier {
    /**
     * Whether the classifier is fitted.
     */
    @PythonName("is_fitted") attr isFitted: Boolean

    /**
     * Create a copy of this classifier and fit it with the given training data.
     *
     * This classifier is not modified.
     *
     * @param trainingSet The training data containing the feature and target vectors.
     *
     * @result fittedClassifier The fitted classifier.
     */
    @Pure
    fun fit(
        @PythonName("training_set") trainingSet: TabularDataset
    ) -> fittedClassifier: LogisticRegressionClassifier

    /**
     * Predict a target vector using a dataset containing feature vectors. The model has to be trained first.
     *
     * @param dataset The dataset containing the feature vectors.
     *
     * @result table A dataset containing the given feature vectors and the predicted target vector.
     */
    @Pure
    fun predict(
        dataset: Table
    ) -> table: TabularDataset
}
