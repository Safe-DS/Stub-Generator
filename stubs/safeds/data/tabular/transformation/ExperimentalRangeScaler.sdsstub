package safeds.data.tabular.transformation

from safeds.data.tabular.containers import ExperimentalTable
from safeds.data.tabular.transformation import ExperimentalInvertibleTableTransformer

/**
 * The RangeScaler transforms column values by scaling each value to a given range.
 *
 * @param min The minimum of the new range after the transformation
 * @param max The maximum of the new range after the transformation
 */
class ExperimentalRangeScaler(
    @PythonName("min_") min: Float = 0.0,
    @PythonName("max_") max: Float = 1.0
) sub ExperimentalInvertibleTableTransformer {
    /**
     * Whether the transformer is fitted.
     */
    @PythonName("is_fitted") attr isFitted: Boolean

    /**
     * Learn a transformation for a set of columns in a table.
     *
     * This transformer is not modified.
     *
     * @param table The table used to fit the transformer.
     * @param columnNames The list of columns from the table used to fit the transformer. If `None`, all columns are used.
     *
     * @result fittedTransformer The fitted transformer.
     */
    @Pure
    fun fit(
        table: ExperimentalTable,
        @PythonName("column_names") columnNames: List<String>?
    ) -> fittedTransformer: ExperimentalRangeScaler

    /**
     * Apply the learned transformation to a table.
     *
     * The table is not modified.
     *
     * @param table The table to which the learned transformation is applied.
     *
     * @result transformedTable The transformed table.
     */
    @Pure
    fun transform(
        table: ExperimentalTable
    ) -> transformedTable: ExperimentalTable

    /**
     * Undo the learned transformation.
     *
     * The table is not modified.
     *
     * @param transformedTable The table to be transformed back to the original version.
     *
     * @result originalTable The original table.
     */
    @Pure
    @PythonName("inverse_transform")
    fun inverseTransform(
        @PythonName("transformed_table") transformedTable: ExperimentalTable
    ) -> originalTable: ExperimentalTable

    /**
     * Get the names of all new columns that have been added by the RangeScaler.
     *
     * @result addedColumns A list of names of the added columns, ordered as they will appear in the table.
     */
    @Pure
    @PythonName("get_names_of_added_columns")
    fun getNamesOfAddedColumns() -> addedColumns: List<String>

    /**
     *  Get the names of all columns that may have been changed by the RangeScaler.
     *
     * @result changedColumns The list of (potentially) changed column names, as passed to fit.
     */
    @Pure
    @PythonName("get_names_of_changed_columns")
    fun getNamesOfChangedColumns() -> changedColumns: List<String>

    /**
     * Get the names of all columns that have been removed by the RangeScaler.
     *
     * @result removedColumns A list of names of the removed columns, ordered as they appear in the table the RangeScaler was fitted on.
     */
    @Pure
    @PythonName("get_names_of_removed_columns")
    fun getNamesOfRemovedColumns() -> removedColumns: List<String>
}
