package safeds.data.tabular.transformation

from safeds.data.tabular.containers import Table
from safeds.data.tabular.transformation import InvertibleTableTransformer

/**
 * The RangeScaler transforms column values by scaling each value to a given range.
 *
 * @param min The minimum of the new range after the transformation
 * @param max The maximum of the new range after the transformation
 */
class RangeScaler(
    @PythonName("min_") min: Float = 0.0,
    @PythonName("max_") max: Float = 1.0
) sub InvertibleTableTransformer {
    /**
     * The minimum of the new range after the transformation.
     */
    attr min: Float
    /**
     * The maximum of the new range after the transformation.
     */
    attr max: Float

    /**
     * Learn a transformation for a set of columns in a table.
     *
     * This transformer is not modified.
     *
     * @param table The table used to fit the transformer.
     * @param columnNames The list of columns from the table used to fit the transformer. If None, all numeric columns are used.
     *
     * @result fittedTransformer The fitted transformer.
     */
    @Pure
    fun fit(
        table: Table,
        @PythonName("column_names") columnNames: List<String>?
    ) -> fittedTransformer: RangeScaler

    /**
     * Apply the learned transformation to a table.
     *
     * The table is not modified.
     *
     * @param table The table to which the learned transformation is applied.
     *
     * @result transformedTable The transformed table.
     */
    @Pure
    fun transform(
        table: Table
    ) -> transformedTable: Table

    /**
     * Undo the learned transformation.
     *
     * The table is not modified.
     *
     * @param transformedTable The table to be transformed back to the original version.
     *
     * @result originalTable The original table.
     */
    @Pure
    @PythonName("inverse_transform")
    fun inverseTransform(
        @PythonName("transformed_table") transformedTable: Table
    ) -> originalTable: Table
}
