package safeds.data.tabular.plotting

from safeds.data.image.containers import Image
from safeds.data.tabular.containers import Table

/**
 * A class that contains plotting methods for a table.
 *
 * @param table The table to plot.
 *
 * @example
 * pipeline example {
 *     // from safeds.data.tabular.containers import Table
 *     // table = Table({"test": [1, 2, 3]})
 *     // plotter = table.plot
 * }
 */
class TablePlotter(
    table: Table
) {
    /**
     * Plot a boxplot for every numerical column.
     *
     * @result plot The plot as an image.
     *
     * @example
     * pipeline example {
     *     // from safeds.data.tabular.containers import Table
     *     // table = Table({"a":[1, 2], "b": [3, 42]})
     *     // image = table.plot.box_plots()
     * }
     */
    @Pure
    @PythonName("box_plots")
    fun boxPlots() -> plot: Image

    /**
     * Plot a correlation heatmap for all numerical columns of this `Table`.
     *
     * @result plot The plot as an image.
     *
     * @example
     * pipeline example {
     *     // from safeds.data.tabular.containers import Table
     *     // table = Table.from_dict({"temperature": [10, 15, 20, 25, 30], "sales": [54, 74, 90, 206, 210]})
     *     // image = table.plot.correlation_heatmap()
     * }
     */
    @Pure
    @PythonName("correlation_heatmap")
    fun correlationHeatmap() -> plot: Image

    /**
     * Plot a histogram for every column.
     *
     * @param maximumNumberOfBins The maximum number of bins to use in the histogram. Default is 10.
     *
     * @result plot The plot as an image.
     *
     * @example
     * pipeline example {
     *     // from safeds.data.tabular.containers import Table
     *     // table = Table({"a": [2, 3, 5, 1], "b": [54, 74, 90, 2014]})
     *     // image = table.plot.histograms()
     * }
     */
    @Pure
    fun histograms(
        @PythonName("maximum_number_of_bins") maximumNumberOfBins: Int = 10
    ) -> plot: Image

    /**
     * Create a line plot for two columns in the table.
     *
     * @param xName The name of the column to be plotted on the x-axis.
     * @param yName The name of the column to be plotted on the y-axis.
     *
     * @result linePlot The plot as an image.
     *
     * @example
     * pipeline example {
     *     // from safeds.data.tabular.containers import Table
     *     // table = Table(
     *     //     {
     *     //         "a": [1, 2, 3, 4, 5],
     *     //         "b": [2, 3, 4, 5, 6],
     *     //     }
     *     // )
     *     // image = table.plot.line_plot("a", "b")
     * }
     */
    @Pure
    @PythonName("line_plot")
    fun linePlot(
        @PythonName("x_name") xName: String,
        @PythonName("y_name") yName: String
    ) -> linePlot: Image

    /**
     * Create a scatter plot for two columns in the table.
     *
     * @param xName The name of the column to be plotted on the x-axis.
     * @param yName The name of the column to be plotted on the y-axis.
     *
     * @result scatterPlot The plot as an image.
     *
     * @example
     * pipeline example {
     *     // from safeds.data.tabular.containers import Table
     *     // table = Table(
     *     //     {
     *     //         "a": [1, 2, 3, 4, 5],
     *     //         "b": [2, 3, 4, 5, 6],
     *     //     }
     *     // )
     *     // image = table.plot.scatter_plot("a", "b")
     * }
     */
    @Pure
    @PythonName("scatter_plot")
    fun scatterPlot(
        @PythonName("x_name") xName: String,
        @PythonName("y_name") yName: String
    ) -> scatterPlot: Image
}
