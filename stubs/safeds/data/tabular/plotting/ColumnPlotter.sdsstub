package safeds.data.tabular.plotting

from safeds.data.image.containers import Image

/**
 * A class that contains plotting methods for a column.
 *
 * @param column The column to plot.
 *
 * @example
 * pipeline example {
 *     // from safeds.data.tabular.containers import Column
 *     // column = Column("test", [1, 2, 3])
 *     // plotter = column.plot
 * }
 */
class ColumnPlotter(
    column: Column<Any>
) {
    /**
     * Create a box plot for the values in the column. This is only possible for numeric columns.
     *
     * @param theme The color theme of the plot. Default is "light".
     *
     * @result plot The box plot as an image.
     *
     * @example
     * pipeline example {
     *     // from safeds.data.tabular.containers import Column
     *     // column = Column("test", [1, 2, 3])
     *     // boxplot = column.plot.box_plot()
     * }
     */
    @Pure
    @PythonName("box_plot")
    fun boxPlot(
        theme: literal<"dark", "light"> = "light"
    ) -> plot: Image

    /**
     * Create a violin plot for the values in the column. This is only possible for numeric columns.
     *
     * @param theme The color theme of the plot. Default is "light".
     *
     * @result plot The violin plot as an image.
     *
     * @example
     * pipeline example {
     *     // from safeds.data.tabular.containers import Column
     *     // column = Column("test", [1, 2, 3])
     *     // violinplot = column.plot.violin_plot()
     * }
     */
    @Pure
    @PythonName("violin_plot")
    fun violinPlot(
        theme: literal<"dark", "light"> = "light"
    ) -> plot: Image

    /**
     * Create a histogram for the values in the column.
     *
     * @param maxBinCount The maximum number of bins to use in the histogram. Default is 10.
     * @param theme The color theme of the plot. Default is "light".
     *
     * @result plot The plot as an image.
     *
     * @example
     * pipeline example {
     *     // from safeds.data.tabular.containers import Column
     *     // column = Column("test", [1, 2, 3])
     *     // histogram = column.plot.histogram()
     * }
     */
    @Pure
    fun histogram(
        @PythonName("max_bin_count") maxBinCount: Int = 10,
        theme: literal<"dark", "light"> = "light"
    ) -> plot: Image

    /**
     * Create a lag plot for the values in the column.
     *
     * @param lag The amount of lag.
     * @param theme The color theme of the plot. Default is "light".
     *
     * @result plot The plot as an image.
     *
     * @example
     * pipeline example {
     *     // from safeds.data.tabular.containers import Column
     *     // column = Column("values", [1, 2, 3, 4])
     *     // image = column.plot.lag_plot(2)
     * }
     */
    @Pure
    @PythonName("lag_plot")
    fun lagPlot(
        lag: Int,
        theme: literal<"dark", "light"> = "light"
    ) -> plot: Image
}
